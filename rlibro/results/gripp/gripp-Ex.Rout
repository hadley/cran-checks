
R Under development (unstable) (2019-07-24 r76881) -- "Unsuffered Consequences"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "gripp"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('gripp')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cost")
> ### * cost
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cost
> ### Title: Cost function
> ### Aliases: cost
> 
> ### ** Examples
> 
> # number of parameters.
> n <- 2
> #
> # Configure the name of the folder where each file with the parameter to be changed.
> # If the folder is 'wd' then it will not be changed.
> # You can change it to another location where your parameter files are.
> auxi <- system.file(package = "gripp")
> folder_name <- c(auxi,auxi)
> #
> # Configure the name of each file to be changed in the Direct Problem Solver.
> file_name <- c('f1.R','f1.R')
> #
> # Configure the name of each parameter to be changed.
> parm_name <- c('A','B')
> #
> # Configure alternative method using line number to enter each parameter
> # When line_number is zero, then the input method uses keywords.
> line_number <-c(0,0)
> #
> # Configure each parameter type, where:
> #   1 means a numeric variable informed as a string, such as parm <- "1.38"
> #   2 means a numeric vector informed as a string of numbers separated with a space character.
> #     For example, parm <- "1.25 3.4". You must tell which one will be the variable considered.
> parm_type <- c(1,1)
> #
> # Informe the position of the variable to be considered in the problem in the vector.
> # If the parameter is a numeric variable, then its position is zero.
> parm_vector <- c(0,0)
> #
> # Configure the name of the folder where the command must be called.
> # If the folder is 'wd' then it will not be changed.
> # You can change it to another location where your parameter files are.
> command_folder <- auxi
> #
> # Say if the Direct Problem is solved using R or outside
> isitR <- TRUE
> #
> # Configure the command to be used to call the Direct Problem Solver.
> command <- 'f1.R'
> #
> # Configure the name of the file to be used as a target by the cost function.
> # The file was built using parm <- c(1,3).
> # It is also a single column of values.
> target <- 'alvo.dat'
> #
> # Configure the name of the folder where the target file can be found.
> # If the folder is 'wd' then it will not be changed.
> # You can change it to another location where your target file is.
> target_folder <- auxi
> #
> # Configure a string to be used to attrib values in the Direct Problem file.
> attrib_str <- '<-'
> #
> # Configure the name of the file with the results obtained by the Direct Problem.
> # It must be a single column of values.
> # The results are changed at each run by the Direct Problem Solver.
> result <- 'result.dat'
> #
> # Configure the name of the folder where the results can be found after each run.
> # If the folder is 'wd' then it will not be changed.
> # You can change it to another location where your result file is.
> result_folder <- tempdir()
> #
> parm<- c(1,3)
> cost(parm)
Warning in file(con, "w") :
  cannot open file 'f1.R': Read-only file system
Error in file(con, "w") : cannot open the connection
Calls: cost -> change_parm -> writeLines -> file
Execution halted
