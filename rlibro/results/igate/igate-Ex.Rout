
R Under development (unstable) (2019-09-06 r77159) -- "Unsuffered Consequences"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "igate"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('igate')
Loading required package: ggplot2
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: stringr
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("categorical.freqplot")
> ### * categorical.freqplot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: categorical.freqplot
> ### Title: Produces frequency plots (normed to density plots to account for
> ###   different category sizes) for sanity check in categorical iGATE.
> ### Aliases: categorical.freqplot
> 
> ### ** Examples
> 
> categorical.freqplot(mtcars, target = "cyl")
   Causes outliers_removed observations_retained frequency_plot
1     mpg                0                    32           TRUE
2    disp                0                    32           TRUE
3      hp                1                    31           TRUE
4    drat                0                    32           TRUE
5      wt                2                    30           TRUE
6    qsec                1                    31           TRUE
7      vs                0                    32           TRUE
8      am                0                    32           TRUE
9    gear                0                    32           TRUE
10   carb                1                    31           TRUE
> 
> 
> 
> 
> cleanEx()
> nameEx("categorical.igate")
> ### * categorical.igate
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: categorical.igate
> ### Title: igate function for categorical target variables
> ### Aliases: categorical.igate
> 
> ### ** Examples
> 
> df <- mtcars
> df$cyl <- as.factor(df$cyl)
> categorical.igate(df, target = "cyl", best.cat = "8", worst.cat = "4")
Using pairwise comparison with 8 BOB vs. 8 WOW.
Using counting method with Wilcoxon rank test as follow up test.
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
  Causes Count     p.values good_lower_bound good_upper_bound bad_lower_bound
1    mpg    16 0.0009148479            10.40           19.200          21.400
2   disp    16 0.0001554002           275.80          400.000          71.100
3     hp    16 0.0009309723           150.00          335.000          62.000
4   drat    16 0.0009228864             2.93            3.540           3.700
5     wt    16 0.0001554002             3.17            5.424           1.513
6   qsec     9 0.0206682207            14.50           15.840          18.600
7   carb     6 0.0180435928             3.00            4.000           1.000
  bad_upper_bound na_removed ties_best_cat ties_worst_cat adjusted.p.values
1           33.90          0            14             11       0.004574240
2          146.70          0            14             11       0.001087801
3          113.00          0            14             11       0.004574240
4            4.22          0            14             11       0.004574240
5            2.78          0            14             11       0.001087801
6           20.01          0            14             10       0.036087186
7            1.00          0            13             11       0.036087186
> 
> 
> 
> 
> cleanEx()
> nameEx("igate")
> ### * igate
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: igate
> ### Title: igate function for continuous target variables
> ### Aliases: igate
> 
> ### ** Examples
> 
> igate(iris, target = "Sepal.Length")
0 outliers have been removed.
Retaining 150 observations.
Using pairwise comparison with 8 BOB vs. 8 WOW.
Using counting method with Wilcoxon rank test as follow up test.
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
        Causes Count     p.values good_lower_bound good_upper_bound
1 Petal.Length    16 0.0008831660              1.0              1.5
2  Petal.Width    16 0.0007638596              0.1              0.3
  bad_lower_bound bad_upper_bound na_removed ties_lower_end
1             6.1             6.9          0              4
2             1.8             2.3          0              4
  competition_lower_end ties_upper_end competition_upper_end adjusted.p.values
1                     3              0                     0       0.001527719
2                     3              0                     0       0.001527719
> 
> 
> 
> 
> cleanEx()
> nameEx("igate.regressions")
> ### * igate.regressions
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: igate.regressions
> ### Title: Produces the regression plots for sanity check in iGATE
> ### Aliases: igate.regressions
> 
> ### ** Examples
> 
> igate.regressions(iris, target = "Sepal.Length")
0 outliers have been removed.
Retaining 150 observations.
        Causes outliers_removed observations_retained regression_plot
1  Sepal.Width                4                   146            TRUE
2 Petal.Length                0                   150            TRUE
3  Petal.Width                0                   150            TRUE
   r_squared   gradient intercept
1 0.01516447 -0.2581701  6.641793
2 0.75995465  0.4089223  4.306603
3 0.66902769  0.8885803  4.777629
> 
> 
> 
> 
> cleanEx()
> nameEx("report")
> ### * report
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: report
> ### Title: Generates report about a conducted igate.
> ### Aliases: report
> 
> ### ** Examples
> 
> 
> ## Example for categorical target variable
> # If you want to da an igate analysis from scratch, running report
> # is the last step and relies on executing the other functions in this package first.
> # Run categorical.igate
> df <- mtcars
> df$cyl <- as.factor(df$cyl)
> results <- categorical.igate(df, target = "cyl", best.cat = "8", worst.cat = "4")
Using pairwise comparison with 8 BOB vs. 8 WOW.
Using counting method with Wilcoxon rank test as follow up test.
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
Warning in wilcox.test.default(x, y) :
  cannot compute exact p-value with ties
> # Produce density plots
> # Suppose you only want to analyse further the first three identified ssv
> results <- results[1:3,]
> categorical.freqplot(mtcars, target = "cyl", ssv = results$Causes , savePlots = TRUE)
Saving 7 x 7 in image
Saving 7 x 7 in image
Saving 7 x 7 in image
  Causes outliers_removed observations_retained frequency_plot
1    mpg                0                    32           TRUE
2   disp                0                    32           TRUE
3     hp                1                    31           TRUE
> 
> report(df = df, target = "cyl", type = "categorical", good_outcome = "8",
+ results_path = "results",
+ output_name = "testing_igate", output_directory = tempdir())


processing file: iGATE_Report.Rmd
   inline R code fragments

label: setup (with options) 
List of 1
 $ include: logi FALSE

  ordinary text without R code

label: unnamed-chunk-1 (with options) 
List of 1
 $ include: logi FALSE

   inline R code fragments

label: unnamed-chunk-2 (with options) 
List of 5
 $ eval     : language params$outlier_removal_target
 $ out.width: chr "50%"
 $ fig.align: chr "center"
 $ fig.cap  : chr "Boxplot of target variable."
 $ fig.pos  : chr "h"

   inline R code fragments

label: countsandps
   inline R code fragments

label: controlbands
   inline R code fragments

label: unnamed-chunk-3
   inline R code fragments

label: unnamed-chunk-4
   inline R code fragments

label: unnamed-chunk-5 (with options) 
List of 1
 $ message: logi FALSE

   inline R code fragments

label: unnamed-chunk-6 (with options) 
List of 1
 $ results: chr "asis"

   inline R code fragments

label: unnamed-chunk-7
  ordinary text without R code

Warning in file(con, "w") :
  cannot open file 'iGATE_Report.knit.md': Read-only file system
Error in file(con, "w") : cannot open the connection
Calls: report ... <Anonymous> -> <Anonymous> -> write_utf8 -> writeLines -> file
Execution halted
