
R Under development (unstable) (2018-03-13 r74401) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Rclusterpp"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('Rclusterpp')
Loading required package: Rcpp
Loading required package: RcppEigen
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("Rclusterpp.hclust")
> ### * Rclusterpp.hclust
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rclusterpp.hclust
> ### Title: Hierarchical Clustering
> ### Aliases: Rclusterpp.hclust
> 
> ### ** Examples
> 
> h <- Rclusterpp.hclust(USArrests, method="ward", distance="euclidean")
> 
> 
> 
> cleanEx()
> nameEx("Rclusterpp.linkageKinds")
> ### * Rclusterpp.linkageKinds
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rclusterpp.linkageKinds
> ### Title: Linkage and distance kinds available in Rclusterpp
> ### Aliases: Rclusterpp.linkageKinds Rclusterpp.distanceKinds
> 
> ### ** Examples
> 
> 	Rclusterpp.linkageKinds()
[1] "ward"     "average"  "single"   "complete"
> 	Rclusterpp.distanceKinds()
[1] "euclidean" "manhattan" "maximum"   "minkowski"
> 
> 
> 
> cleanEx()
> nameEx("Rclusterpp.package.skeleton")
> ### * Rclusterpp.package.skeleton
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rclusterpp.package.skeleton
> ### Title: Create a skeleton for a new package that intends to use
> ###   Rclusterpp
> ### Aliases: Rclusterpp.package.skeleton
> ### Keywords: programming
> 
> ### ** Examples
> 
> ## Not run: 
> ##D Rclusterpp.package.skeleton( "foobar" )
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("Rclusterpp.setThreads")
> ### * Rclusterpp.setThreads
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rclusterpp.setThreads
> ### Title: Set number of threads used in clustering
> ### Aliases: Rclusterpp.setThreads
> 
> ### ** Examples
> 
> # Set to one thread
> Rclusterpp.setThreads(1)
> 
> # Set to number of threads equal to number of processors
> Rclusterpp.setThreads()
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  20.639 0.16 6.137 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
