
R Under development (unstable) (2018-02-25 r74301) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "sim1000G"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('sim1000G')
Loading required package: hapsim
Loading required package: MASS
Loading required package: stringr
Loading required package: readr
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("computePairIBD1")
> ### * computePairIBD1
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: computePairIBD1
> ### Title: Computes pairwise IBD1 for a specific pair of individuals. See
> ###   function computePairIBD12 for description.
> ### Aliases: computePairIBD1
> 
> ### ** Examples
> 
> 
> library("sim1000G")
> 
> examples_dir = system.file("examples", package = "sim1000G")
> vcf_file = file.path(examples_dir, "region.vcf.gz")
> vcf = readVCF( vcf_file, maxNumberOfVariants = 100 ,
+                min_maf = 0.12 ,max_maf = NA)
[#.......] Reading VCF file..
Parsed with column specification:
cols(
  .default = col_character(),
  `#CHROM` = col_integer(),
  POS = col_integer(),
  QUAL = col_integer()
)
See spec(...) for full column specifications.
[##......] Chromosome:   4  Mbp:  77.35628  Region Size:  347.154 kb  Num of individuals: 95 
[##......] Before filtering  Num of variants: 567 Num of individuals: 95 
[###.....] After filtering  Num of variants: 100 Num of individuals: 95 
> 
> # For realistic data use the function downloadGeneticMap
> generateUniformGeneticMap()
[1] 0
> 
> startSimulation(vcf, totalNumberOfIndividuals = 200)
[#####...] Creating SIM object
[#####...] Haplodata object created
> 
> ped1 = newNuclearFamily(1)
> 
> v = computePairIBD1(1, 3)
> 
> cat("IBD1 of pair = ", v, "\n");
IBD1 of pair =  1 
> 
> 
> 
> 
> cleanEx()
> nameEx("computePairIBD12")
> ### * computePairIBD12
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: computePairIBD12
> ### Title: Computes pairwise IBD1/2 for a specific pair of individuals
> ### Aliases: computePairIBD12
> 
> ### ** Examples
> 
> 
> library("sim1000G")
> 
> examples_dir = system.file("examples", package = "sim1000G")
> vcf_file = file.path(examples_dir, "region.vcf.gz")
> 
> vcf = readVCF( vcf_file, maxNumberOfVariants = 100 ,
+                min_maf = 0.12 ,max_maf = NA)
[#.......] Reading VCF file..
Parsed with column specification:
cols(
  .default = col_character(),
  `#CHROM` = col_integer(),
  POS = col_integer(),
  QUAL = col_integer()
)
See spec(...) for full column specifications.
[##......] Chromosome:   4  Mbp:  77.35628  Region Size:  347.154 kb  Num of individuals: 95 
[##......] Before filtering  Num of variants: 567 Num of individuals: 95 
[###.....] After filtering  Num of variants: 100 Num of individuals: 95 
> 
> generateUniformGeneticMap()
[1] 0
> 
> startSimulation(vcf, totalNumberOfIndividuals = 200)
[#####...] Creating SIM object
[#####...] Haplodata object created
> 
> ped1 = newNuclearFamily(1)
> 
> v = computePairIBD12(1, 3)
> 
> cat("IBD1 of pair = ", v[1], "\n");
IBD1 of pair =  1 
> cat("IBD2 of pair = ", v[2], "\n");
IBD2 of pair =  0 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("computePairIBD2")
> ### * computePairIBD2
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: computePairIBD2
> ### Title: Computes pairwise IBD2 for a specific pair of individuals
> ### Aliases: computePairIBD2
> 
> ### ** Examples
> 
> 
> library("sim1000G")
> 
> examples_dir = system.file("examples", package = "sim1000G")
> vcf_file = file.path(examples_dir, "region.vcf.gz")
> vcf = readVCF( vcf_file, maxNumberOfVariants = 100 ,
+                min_maf = 0.12 ,max_maf = NA)
[#.......] Reading VCF file..
Parsed with column specification:
cols(
  .default = col_character(),
  `#CHROM` = col_integer(),
  POS = col_integer(),
  QUAL = col_integer()
)
See spec(...) for full column specifications.
[##......] Chromosome:   4  Mbp:  77.35628  Region Size:  347.154 kb  Num of individuals: 95 
[##......] Before filtering  Num of variants: 567 Num of individuals: 95 
[###.....] After filtering  Num of variants: 100 Num of individuals: 95 
> 
> # For realistic data use the function downloadGeneticMap
> generateUniformGeneticMap()
[1] 0
> 
> startSimulation(vcf, totalNumberOfIndividuals = 200)
[#####...] Creating SIM object
[#####...] Haplodata object created
> 
> ped1 = newNuclearFamily(1)
> 
> v = computePairIBD2(1, 3)
> 
> cat("IBD2 of pair = ", v, "\n");
IBD2 of pair =  0 
> 
> 
> 
> 
> cleanEx()
> nameEx("downloadGeneticMap")
> ### * downloadGeneticMap
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: downloadGeneticMap
> ### Title: Downloads a genetic map for a particular chromosome under GRCh37
> ###   coordinates for use with sim1000G.
> ### Aliases: downloadGeneticMap
> 
> ### ** Examples
> 
> 
> 
> 
> downloadGeneticMap(22, dir=tempdir() )
 -> Downloading genetic map from: https://github.com/adimitromanolakis/geneticMap-GRCh37/raw/master/genetic_map_GRCh37_chr22.txt.gz 
 -> Saving genetic map to:  /tmp/RtmpBJLSkx/genetic_map_GRCh37_chr22.txt.gz 
[1] "/tmp/RtmpBJLSkx/genetic_map_GRCh37_chr22.txt.gz"
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("generateChromosomeRecombinationPositions")
> ### * generateChromosomeRecombinationPositions
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: generateChromosomeRecombinationPositions
> ### Title: Generates a recombination vector arising from one meiotic event.
> ###   The origin of segments is coded as (0 - haplotype1 , 1 - haplotype2 )
> ### Aliases: generateChromosomeRecombinationPositions
> 
> ### ** Examples
> 
> 
> library("sim1000G")
> 
> # generate a recombination events for chromosome 4
> readGeneticMap(4)
 -> Downloading genetic map from: https://github.com/adimitromanolakis/geneticMap-GRCh37/raw/master/genetic_map_GRCh37_chr4.txt.gz 
 -> Saving genetic map to:  /homero/tomas/cran/rlibro/lib/sim1000G/datasets/genetic_map_GRCh37_chr4.txt.gz 
Warning in download.file(url, destfile = dest_path, quiet = TRUE) :
  URL https://github.com/adimitromanolakis/geneticMap-GRCh37/raw/master/genetic_map_GRCh37_chr4.txt.gz: cannot open destfile '/homero/tomas/cran/rlibro/lib/sim1000G/datasets/genetic_map_GRCh37_chr4.txt.gz', reason 'Read-only file system'
Warning in download.file(url, destfile = dest_path, quiet = TRUE) :
  download had nonzero exit status
Error in readGeneticMapFromFile(fname) : 
  Genetic map file /homero/tomas/cran/rlibro/lib/sim1000G/datasets/genetic_map_GRCh37_chr4.txt.gz not found
Calls: readGeneticMap -> readGeneticMapFromFile
Execution halted
