
R Under development (unstable) (2021-02-27 r80043) -- "Unsuffered Consequences"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "spm12r"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('spm12r')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("bwconncomp")
> ### * bwconncomp
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bwconncomp
> ### Title: Label Connected Clusters of Certain Size
> ### Aliases: bwconncomp
> 
> ### ** Examples
> 
> library(neurobase)
Loading required package: oro.nifti
oro.nifti 0.11.0
> set.seed(1234)
> dims = c(30, 30, 10)
> arr = array(rnorm(prod(dims)), dim = dims)
> nim = nifti(arr)
> mask = datatyper(nim > 1)
> ## Not run: 
> ##D cc = bwconncomp(mask)
> ##D tab = table(c(cc))
> ## End(Not run)
> 
> 
> 
> cleanEx()

detaching ‘package:neurobase’, ‘package:oro.nifti’

> nameEx("install_spm12")
> ### * install_spm12
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: install_spm12
> ### Title: Install SPM12 file into directory
> ### Aliases: install_spm12
> 
> ### ** Examples
> 
> tdir = tempfile()
> dir.create(tdir)
> in_ci <- function() {
+ nzchar(Sys.getenv("CI"))
+ }
> if (matlabr::have_matlab()) {
+ if (.Platform$OS.type == "unix" | in_ci()) { # windows problem
+ res = try({install_spm12(install_dir = tdir)})
+ res = try({install_spm12(install_dir = tdir)})
+ }
+ }
cloning into '/var/scratch2/tomas/tmp/Rtmpmq01SD/file18c66b403d9fb3/spm12'...
Receiving objects:   1% (68/6712),   24 kb
Receiving objects:  11% (739/6712), 2963 kb
Receiving objects:  21% (1410/6712), 3315 kb
Receiving objects:  31% (2081/6712), 9481 kb
Receiving objects:  41% (2752/6712), 10983 kb
Receiving objects:  51% (3424/6712), 31386 kb
Receiving objects:  61% (4095/6712), 36485 kb
Receiving objects:  71% (4766/6712), 46969 kb
Receiving objects:  81% (5437/6712), 70559 kb
Receiving objects:  91% (6108/6712), 98817 kb
Receiving objects: 100% (6712/6712), 131269 kb, done.
> 
> 
> 
> cleanEx()
> nameEx("spm12_condition")
> ### * spm12_condition
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spm12_condition
> ### Title: Build Conditions for SPM12 first level model
> ### Aliases: spm12_condition spm12_condition_list
> 
> ### ** Examples
> 
> res = spm12_condition(
+ name = "condition1", 
+ onset = c(0, 2, 4, 6, 8),
+ duration = rep(1, 5) )
> print(res)
$name
[1] "'condition1'"

$onset
[1] "[0, 2, 4, 6, 8];"

$duration
[1] "[1, 1, 1, 1, 1];"

$tmod
[1] 0

$pmod
[1] "struct('name', {}, 'param', {}, 'poly', {})"

$orth
[1] 1

> L = list(
+ cond1 = list(onset = c(0, 2, 4, 6, 8), duration = rep(1, 5)), 
+ cond2 = list(onset = c(0, 2, 4, 6, 8) + 1, duration = rep(1, 5))
+ )
> res = spm12_condition_list(L)
> print(res) 
$`(1)`
$`(1)`$name
[1] "'cond1'"

$`(1)`$onset
[1] "[0, 2, 4, 6, 8];"

$`(1)`$duration
[1] "[1, 1, 1, 1, 1];"

$`(1)`$tmod
[1] 0

$`(1)`$pmod
[1] "struct('name', {}, 'param', {}, 'poly', {})"

$`(1)`$orth
[1] 1


$`(2)`
$`(2)`$name
[1] "'cond2'"

$`(2)`$onset
[1] "[1, 3, 5, 7, 9];"

$`(2)`$duration
[1] "[1, 1, 1, 1, 1];"

$`(2)`$tmod
[1] 0

$`(2)`$pmod
[1] "struct('name', {}, 'param', {}, 'poly', {})"

$`(2)`$orth
[1] 1


> 
> 
> 
> cleanEx()
> nameEx("spm12_contrast")
> ### * spm12_contrast
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spm12_contrast
> ### Title: Build contrasts for SPM12 first level model
> ### Aliases: spm12_contrast spm12_contrast_list
> 
> ### ** Examples
> 
> res = spm12_contrast(name = "condition1", weights = c(
+ 1, rep(0, 8)))
> print(res)
$name
[1] "'condition1'"

$weights
[1] "[1, 0, 0, 0, 0, 0, 0, 0, 0];"

$sessrep
[1] "'none'"

> contrasts = list(
+ list(name = "LeftHand",
+        weights = c(1, rep(0, 7)),
+ replicate = "none",
+ type = "T" ),
+ list(name = "RightHand",
+ weights = c(0, 1, rep(0, 6)),
+ replicate = "none",
+ type = "T"), 
+ list(name = "AllEffects",
+ weights = rbind(
+ c(1, rep(0, 7)),
+          c(0, 1, rep(0, 6))
+        ),
+ replicate = "none",
+ type = "F")   
+ )
> res = spm12_contrast_list(contrasts)
> print(res)
$`{1}.tcon`
$`{1}.tcon`$name
[1] "'LeftHand'"

$`{1}.tcon`$weights
[1] "[1, 0, 0, 0, 0, 0, 0, 0];"

$`{1}.tcon`$sessrep
[1] "'none'"


$`{2}.tcon`
$`{2}.tcon`$name
[1] "'RightHand'"

$`{2}.tcon`$weights
[1] "[0, 1, 0, 0, 0, 0, 0, 0];"

$`{2}.tcon`$sessrep
[1] "'none'"


$`{3}.fcon`
$`{3}.fcon`$name
[1] "'AllEffects'"

$`{3}.fcon`$weights
[1] "[1, 0, 0, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0];"

$`{3}.fcon`$sessrep
[1] "'none'"


> 
> 
> 
> cleanEx()
> nameEx("spm12_contrast_query")
> ### * spm12_contrast_query
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spm12_contrast_query
> ### Title: Build contrasts query for SPM12 results
> ### Aliases: spm12_contrast_query spm12_contrast_query_list
> 
> ### ** Examples
> 
> res = spm12_contrast_query(name = "condition1", weights = 1)
> print(res)
$titlestr
[1] "'condition1'"

$contrasts
[1] "[1];"

$threshdesc
[1] "'FWE'"

$thresh
[1] 0.05

$extent
[1] 0

$mask
$mask$none
[1] 1


> contrasts = list(
+ list(name = "All Contrasts",
+        weights = Inf
+        ),
+ list(name = "RightHand",
+ weights = 2) 
+ )
> res = spm12_contrast_query_list(contrasts)
> print(res)
$`(1)`
$`(1)`$titlestr
[1] "'All Contrasts'"

$`(1)`$contrasts
[1] Inf

$`(1)`$threshdesc
[1] "'FWE'"

$`(1)`$thresh
[1] 0.05

$`(1)`$extent
[1] 0

$`(1)`$mask
$`(1)`$mask$none
[1] 1



$`(2)`
$`(2)`$titlestr
[1] "'RightHand'"

$`(2)`$contrasts
[1] "[2];"

$`(2)`$threshdesc
[1] "'FWE'"

$`(2)`$thresh
[1] 0.05

$`(2)`$extent
[1] 0

$`(2)`$mask
$`(2)`$mask$none
[1] 1



> 
> 
> 
> cleanEx()
> nameEx("spm12_coregister")
> ### * spm12_coregister
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: build_spm12_coregister
> ### Title: Batch SPM12 Coregister (Estimate and Reslice)
> ### Aliases: build_spm12_coregister build_spm12_coregister_estimate
> ###   build_spm12_coregister_reslice spm12_coregister_wrapper
> ###   spm12_coregister spm12_coregister_estimate spm12_coregister_reslice
> 
> ### ** Examples
> 
> ## Not run: 
> ##D fname = paste0("~/Desktop/D2/scratch/", 
> ##D "100-318_20070723_0957_CT_3_CT_Head-_SS_0.01_SyN_ROI.nii.gz")
> ##D spm = spm12_coregister(
> ##D fixed = fname,
> ##D moving = fname, 
> ##D other.files = fname,
> ##D execute = FALSE)
> ## End(Not run)
> if (matlabr::have_matlab()) {
+ install_dir = tempdir()
+ dims = rep(10, 3)
+ fixed = array(rnorm(prod(dims)), dim = dims)
+ fixed = oro.nifti::nifti(fixed)
+ moving = array(rnorm(prod(dims)), dim = dims)
+ moving = oro.nifti::nifti(moving) 
+ res = build_spm12_coregister(
+ fixed = fixed, moving = moving,
+ install_dir = install_dir)
+ }
Checking Filenames
> 
> 
> 
> cleanEx()
> nameEx("spm12_normalize_write")
> ### * spm12_normalize_write
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spm12_normalize_write
> ### Title: SPM12 Normalize (Write)
> ### Aliases: spm12_normalize_write build_spm12_normalize_write
> 
> ### ** Examples
> 
> dims = rep(10, 3)
> temp_nii = array(rnorm(prod(dims)), dim = dims)
> temp_nii = oro.nifti::nifti(temp_nii)
> res = build_spm12_normalize_write(temp_nii, 
+ other.files = temp_nii,
+ install_dir = tempdir())
> 
> 
> 
> cleanEx()
> nameEx("spm12_realign")
> ### * spm12_realign
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: build_spm12_realign
> ### Title: SPM12 Realign (Estimate and Reslice)
> ### Aliases: build_spm12_realign spm12_realign
> 
> ### ** Examples
> 
> dims = rep(10, 4)
> temp_nii = array(rnorm(prod(dims)), dim = dims)
> temp_nii = oro.nifti::nifti(temp_nii)
> res = build_spm12_realign(temp_nii)
# Getting Number of Time Points

# Reslice is all+mean

> 
> 
> 
> 
> cleanEx()
> nameEx("spm12_regressor")
> ### * spm12_regressor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spm12_regressor
> ### Title: Build Regressors for SPM12 first level model
> ### Aliases: spm12_regressor spm12_regressor_list
> 
> ### ** Examples
> 
> res = spm12_regressor(name = "condition1", value = c(
+ rep(1, 10), rep(0, 10)), n_time_points = 20)
> print(res)
$name
[1] "'condition1'"

$value
[1] "[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];"

> L = list(
+ cond1 = list(value = c(rep(1, 10), rep(0, 10)), n_time_points = 20),
+ cond2 = list(value = c(rep(0, 10), rep(1, 10)), n_time_points = 20)
+ )
> res = spm12_regressor_list(L, n_time_points = 20)
> print(res)
$`(1)`
$`(1)`$name
[1] "'cond1'"

$`(1)`$value
[1] "[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];"


$`(2)`
$`(2)`$name
[1] "'cond2'"

$`(2)`$value
[1] "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];"


> 
> 
> 
> cleanEx()
> nameEx("spm12_script")
> ### * spm12_script
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spm12_script
> ### Title: Find SPM12 Script
> ### Aliases: spm12_script
> 
> ### ** Examples
> 
> spm12_script(script_name = "Segment")
                                               job 
"/var/scratch2/tomas/tmp/Rtmpmq01SD/Segment_job.m" 
                                            script 
 "/var/scratch2/tomas/tmp/Rtmpmq01SD/Executable.m" 
> 
> 
> 
> cleanEx()
> nameEx("spm_bwlabel")
> ### * spm_bwlabel
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spm_bwlabel
> ### Title: SPM BWLabel Clusters of Certain Size
> ### Aliases: spm_bwlabel
> 
> ### ** Examples
> 
> if (matlabr::have_matlab()) { 
+ d = rep(25, 3)
+ arr = array(rbinom(prod(d), size = 1, prob = 0.5), dim = d)
+ nim = oro.nifti::nifti(arr)
+ res = spm_bwlabel(nim, k = 1, binary = FALSE)
+ tab = table(c(res))
+ tab
+ out_arr = as(res, "array")
+ }
cloning into '/var/scratch2ro/tomas/cran/rlibro/lib/spm12r/spm12'...
Error in git2r::clone("https://github.com/muschellij2/spm12r", branch = "gh-pages",  : 
  Error in 'git2r_clone': failed to make directory '/var/scratch2ro/tomas/cran/rlibro/lib/spm12r/spm12': Read-only file system
Calls: spm_bwlabel -> install_spm12 -> <Anonymous>
Execution halted
