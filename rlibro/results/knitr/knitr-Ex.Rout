
R Under development (unstable) (2018-01-28 r74177) -- "Unsuffered Consequences"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "knitr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('knitr')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("Sweave2knitr")
> ### * Sweave2knitr
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Sweave2knitr
> ### Title: Convert Sweave to knitr documents
> ### Aliases: Sweave2knitr
> 
> ### ** Examples
> 
> Sweave2knitr(text = "<<echo=TRUE>>=")  # this is valid
[1] "<<echo=TRUE>>="
> Sweave2knitr(text = "<<png=true>>=")  # dev='png'
capitalizing true/false to TRUE/FALSE:
    * png=true
replacing pdf/jpeg/png/tikz=TRUE with dev='pdf'/'jpeg'/'png'/'tikz':
    * png=TRUE
[1] "<<dev='png'>>="
> Sweave2knitr(text = "<<eps=TRUE, pdf=FALSE, results=tex, width=5, prefix.string=foo>>=")
removing pdf/jpeg/png/eps/tikz=FALSE:
    * eps=TRUE, pdf=FALSE, results=tex, width=5, prefix.string=foo
replacing eps=TRUE with dev='postscript':
    * eps=TRUE, , results=tex, width=5, prefix.string=foo
replacing results=tex with results=asis:
    * dev='postscript', , results=tex, width=5, prefix.string=foo
quoting the results option:
    * dev='postscript', , results=asis, width=5, prefix.string=foo
replacing width/height with fig.width/fig.height:
    * dev='postscript', , results='asis', width=5, prefix.string=foo
replacing prefix.string=foo with fig.path='foo':
    * dev='postscript', , results='asis', fig.width=5,
      prefix.string=foo
[1] "<<dev='postscript', results='asis', fig.width=5, fig.path='foo'>>="
> Sweave2knitr(text = "<<,png=false,fig=TRUE>>=")
capitalizing true/false to TRUE/FALSE:
    * ,png=false,fig=TRUE
removing the unnecessary option fig=TRUE:
    * ,png=FALSE,fig=TRUE
removing pdf/jpeg/png/eps/tikz=FALSE:
    * ,png=FALSE,
[1] "<<>>="
> Sweave2knitr(text = "\\SweaveOpts{echo=false}")
capitalizing true/false to TRUE/FALSE:
    * echo=false
changing \SweaveOpts{} to opts_chunk$set():
    * \SweaveOpts{echo=false}
[1] "\n<<include=FALSE>>=\nlibrary(knitr)\nopts_chunk$set(\necho=FALSE\n)\n@\n"
> Sweave2knitr(text = "\\SweaveInput{hello.Rnw}")
replacing \SweaveInput{...} with <<child='...'>>=:
    * \SweaveInput{hello.Rnw}
[1] "\n<<'child-hello.Rnw', child='hello.Rnw'>>=\n@\n"
> # Sweave example in utils
> testfile = system.file("Sweave", "Sweave-test-1.Rnw", package = "utils")
> Sweave2knitr(testfile, output = "Sweave-test-knitr.Rnw")
capitalizing true/false to TRUE/FALSE:
    * fig=true
removing the unnecessary option fig=TRUE:
    * fig=TRUE
    * fig=TRUE
quoting the results option:
    * results=hide
removing options 'print', 'term', 'prefix':
    * print=TRUE
    * echo=TRUE,print=TRUE
capitalizing true/false to TRUE/FALSE:
    * echo=true
changing \SweaveOpts{} to opts_chunk$set():
    * \SweaveOpts{echo=FALSE}
    * \SweaveOpts{echo=true}
removing extra lines (#n shows line numbers):
    * (#69) @
> knit("Sweave-test-knitr.Rnw")  # or knit2pdf() directly


processing file: Sweave-test-knitr.Rnw
  ordinary text without R code

label: unnamed-chunk-1 (with options) 
List of 1
 $ include: logi FALSE

  ordinary text without R code

label: unnamed-chunk-2
label: unnamed-chunk-3 (with options) 
List of 1
 $ results: chr "hide"

  ordinary text without R code

label: unnamed-chunk-4 (with options) 
List of 1
 $ echo: logi TRUE

  ordinary text without R code

label: unnamed-chunk-5
   inline R code fragments

label: unnamed-chunk-6 (with options) 
List of 1
 $ include: logi FALSE

  ordinary text without R code

label: unnamed-chunk-7
  ordinary text without R code

label: unnamed-chunk-8
  ordinary text without R code

label: unnamed-chunk-9
  ordinary text without R code

output file: Sweave-test-knitr.tex

[1] "Sweave-test-knitr.tex"
> 
> 
> 
> cleanEx()
> nameEx("all_labels")
> ### * all_labels
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: all_labels
> ### Title: Get all chunk labels in a document
> ### Aliases: all_labels all_rcpp_labels
> 
> ### ** Examples
> 
> # the examples below are meaningless unless you put them in a knitr document
> all_labels()
NULL
> all_labels(engine == "Rcpp")
NULL
> all_labels(echo == FALSE && results != "hide")
NULL
> # or separate the two conditions
> all_labels(echo == FALSE, results != "hide")
NULL
> 
> 
> 
> cleanEx()
> nameEx("all_patterns")
> ### * all_patterns
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: all_patterns
> ### Title: All built-in patterns
> ### Aliases: all_patterns
> ### Keywords: datasets
> 
> ### ** Examples
> 
> all_patterns$rnw
$chunk.begin
[1] "^\\s*<<(.*)>>=.*$"

$chunk.end
[1] "^\\s*@\\s*(%+.*|)$"

$inline.code
[1] "\\\\Sexpr\\{([^}]+)\\}"

$inline.comment
[1] "^\\s*%.*"

$ref.chunk
[1] "^\\s*<<(.+)>>\\s*$"

$header.begin
[1] "(^|\n)\\s*\\\\documentclass[^}]+\\}"

$document.begin
[1] "\\s*\\\\begin\\{document\\}"

> all_patterns$html
$chunk.begin
[1] "^\\s*<!--\\s*begin.rcode\\s*(.*)"

$chunk.end
[1] "^\\s*end.rcode\\s*-->"

$ref.chunk
[1] "^\\s*<<(.+)>>\\s*$"

$inline.code
[1] "<!--\\s*rinline(.+?)-->"

$header.begin
[1] "\\s*<head>"

> 
> str(all_patterns)
List of 8
 $ rnw     :List of 7
  ..$ chunk.begin   : chr "^\\s*<<(.*)>>=.*$"
  ..$ chunk.end     : chr "^\\s*@\\s*(%+.*|)$"
  ..$ inline.code   : chr "\\\\Sexpr\\{([^}]+)\\}"
  ..$ inline.comment: chr "^\\s*%.*"
  ..$ ref.chunk     : chr "^\\s*<<(.+)>>\\s*$"
  ..$ header.begin  : chr "(^|\n)\\s*\\\\documentclass[^}]+\\}"
  ..$ document.begin: chr "\\s*\\\\begin\\{document\\}"
 $ brew    :List of 1
  ..$ inline.code: chr "<%[=]{0,1}\\s+([^%]+)\\s+[-]*%>"
 $ tex     :List of 8
  ..$ chunk.begin   : chr "^\\s*%+\\s*begin.rcode\\s*(.*)"
  ..$ chunk.end     : chr "^\\s*%+\\s*end.rcode"
  ..$ chunk.code    : chr "^\\s*%+"
  ..$ ref.chunk     : chr "^%+\\s*<<(.+)>>\\s*$"
  ..$ inline.comment: chr "^\\s*%.*"
  ..$ inline.code   : chr "\\\\rinline\\{([^}]+)\\}"
  ..$ header.begin  : chr "(^|\n)\\s*\\\\documentclass[^}]+\\}"
  ..$ document.begin: chr "\\s*\\\\begin\\{document\\}"
 $ html    :List of 5
  ..$ chunk.begin : chr "^\\s*<!--\\s*begin.rcode\\s*(.*)"
  ..$ chunk.end   : chr "^\\s*end.rcode\\s*-->"
  ..$ ref.chunk   : chr "^\\s*<<(.+)>>\\s*$"
  ..$ inline.code : chr "<!--\\s*rinline(.+?)-->"
  ..$ header.begin: chr "\\s*<head>"
 $ md      :List of 4
  ..$ chunk.begin: chr "^[\t >]*```+\\s*\\{([a-zA-Z0-9]+.*)\\}\\s*$"
  ..$ chunk.end  : chr "^[\t >]*```+\\s*$"
  ..$ ref.chunk  : chr "^\\s*<<(.+)>>\\s*$"
  ..$ inline.code: chr "(?<!(^|\n)``)`r[ #]([^`]+)\\s*`"
 $ rst     :List of 5
  ..$ chunk.begin: chr "^\\s*[.][.]\\s+\\{r(.*)\\}\\s*$"
  ..$ chunk.end  : chr "^\\s*[.][.]\\s+[.][.]\\s*$"
  ..$ chunk.code : chr "^\\s*[.][.]"
  ..$ ref.chunk  : chr "^\\.*\\s*<<(.+)>>\\s*$"
  ..$ inline.code: chr ":r:`([^`]+)`"
 $ asciidoc:List of 6
  ..$ chunk.begin   : chr "^//\\s*begin[.]rcode(.*)$"
  ..$ chunk.end     : chr "^//\\s*end[.]rcode\\s*$"
  ..$ chunk.code    : chr "^//+"
  ..$ ref.chunk     : chr "^\\s*<<(.+)>>\\s*$"
  ..$ inline.code   : chr "`r +([^`]+)\\s*`|[+]r +([^+]+)\\s*[+]"
  ..$ inline.comment: chr "^//.*"
 $ textile :List of 5
  ..$ chunk.begin   : chr "^###[.]\\s+begin[.]rcode(.*)$"
  ..$ chunk.end     : chr "^###[.]\\s+end[.]rcode\\s*$"
  ..$ ref.chunk     : chr "^\\s*<<(.+)>>\\s*$"
  ..$ inline.code   : chr "@r +([^@]+)\\s*@"
  ..$ inline.comment: chr "^###[.].*"
> 
> 
> 
> cleanEx()
> nameEx("asis_output")
> ### * asis_output
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: asis_output
> ### Title: Mark an R object with a special class
> ### Aliases: asis_output
> 
> ### ** Examples
> 
> # see ?knit_print
> 
> 
> 
> cleanEx()
> nameEx("chunk_hook")
> ### * chunk_hook
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hook_pdfcrop
> ### Title: Built-in chunk hooks to extend knitr
> ### Aliases: hook_pdfcrop hook_optipng hook_pngquant hook_plot_custom
> ###   hook_purl
> 
> ### ** Examples
> 
> if (require("rgl") && exists("hook_rgl")) knit_hooks$set(rgl = hook_rgl)
Loading required package: rgl
> # then in code chunks, use the option rgl=TRUE
> 
> 
> 
> cleanEx()

detaching ‘package:rgl’

> nameEx("combine_words")
> ### * combine_words
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: combine_words
> ### Title: Combine multiple words into a single string
> ### Aliases: combine_words
> 
> ### ** Examples
> 
> combine_words("a")
[1] "a"
> combine_words(c("a", "b"))
[1] "a and b"
> combine_words(c("a", "b", "c"))
[1] "a, b, and c"
> combine_words(c("a", "b", "c"), sep = " / ", and = "")
[1] "a / b / c"
> combine_words(c("a", "b", "c"), and = "")
[1] "a, b, c"
> combine_words(c("a", "b", "c"), before = "\"", after = "\"")
[1] "\"a\", \"b\", and \"c\""
> 
> 
> 
> cleanEx()
> nameEx("engine_output")
> ### * engine_output
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: engine_output
> ### Title: An output wrapper for language engine output
> ### Aliases: engine_output
> 
> ### ** Examples
> 
> library(knitr)
> engine_output(opts_chunk$merge(list(engine = "Rscript")), 
+     code = "1 + 1", out = "[1] 2")
[1] "1 + 1\n## [1] 2\n"
> engine_output(opts_chunk$merge(list(echo = FALSE, engine = "Rscript")), 
+     code = "1 + 1", out = "[1] 2")
[1] "## [1] 2\n"
> 
> # expert use only
> engine_output(opts_chunk$merge(list(engine = "python")), 
+     out = list(structure(list(src = "1 + 1"), class = "source"), 
+         "2"))
[1] "1 + 1"  "## 2\n"
> 
> 
> 
> cleanEx()
> nameEx("fig_chunk")
> ### * fig_chunk
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fig_chunk
> ### Title: Obtain the figure filenames for a chunk
> ### Aliases: fig_chunk
> 
> ### ** Examples
> 
> library(knitr)
> fig_chunk("foo", "png")
[1] "figure/foo-1.png"
> fig_chunk("foo", "pdf")
[1] "figure/foo-1.pdf"
> fig_chunk("foo", "svg", 2)  # the second plot of the chunk foo
[1] "figure/foo-2.svg"
> fig_chunk("foo", "png", 1:5)  # if the chunk foo produced 5 plots
[1] "figure/foo-1.png" "figure/foo-2.png" "figure/foo-3.png" "figure/foo-4.png"
[5] "figure/foo-5.png"
> 
> 
> 
> cleanEx()
> nameEx("fig_path")
> ### * fig_path
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fig_path
> ### Title: Path for figure files
> ### Aliases: fig_path
> 
> ### ** Examples
> 
> fig_path(".pdf", options = list(fig.path = "figure/abc-", label = "first-plot"))
[1] "figure/abc-first-plot-1.pdf"
> fig_path(".png", list(fig.path = "foo-", label = "bar"), 1:10)
 [1] "foo-bar-1.png"  "foo-bar-2.png"  "foo-bar-3.png"  "foo-bar-4.png" 
 [5] "foo-bar-5.png"  "foo-bar-6.png"  "foo-bar-7.png"  "foo-bar-8.png" 
 [9] "foo-bar-9.png"  "foo-bar-10.png"
> 
> 
> 
> cleanEx()
> nameEx("hook_document")
> ### * hook_document
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hook_movecode
> ### Title: Some potentially useful document hooks
> ### Aliases: hook_movecode
> 
> ### ** Examples
> 
> ## Not run: 
> ##D knit_hooks$set(document = hook_movecode)
> ## End(Not run)
> # see example 103 at https://github.com/yihui/knitr-examples
> 
> 
> 
> cleanEx()
> nameEx("hook_plot")
> ### * hook_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hook_plot_html
> ### Title: Default plot hooks for different output formats
> ### Aliases: hook_plot_html hook_plot_asciidoc hook_plot_tex hook_plot_md
> ###   hook_plot_rst hook_plot_textile
> 
> ### ** Examples
> 
> # this is what happens for a chunk like this
> 
> # <<foo-bar-plot, dev='pdf', fig.align='right'>>=
> hook_plot_tex("foo-bar-plot.pdf", opts_chunk$merge(list(fig.align = "right")))
[1] "\n\n\\hfill{}\\includegraphics{foo-bar-plot} \n\n"
> 
> # <<bar, dev='tikz'>>=
> hook_plot_tex("bar.tikz", opts_chunk$merge(list(dev = "tikz")))
[1] "\n\\includegraphics{bar} "
> 
> # <<foo, dev='pdf', fig.show='animate', interval=.1>>=
> 
> # 5 plots are generated in this chunk
> hook_plot_tex("foo5.pdf", opts_chunk$merge(list(fig.show = "animate", interval = 0.1, 
+     fig.cur = 5, fig.num = 5)))
[1] "\n\\animategraphics[,controls,loop]{10}{foo}{1}{5}"
> 
> 
> 
> cleanEx()
> nameEx("image_uri")
> ### * image_uri
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: image_uri
> ### Title: Encode an image file to a data URI
> ### Aliases: image_uri
> 
> ### ** Examples
> 
> uri = image_uri(file.path(R.home("doc"), "html", "logo.jpg"))
> cat(sprintf("<img src=\"%s\" />", uri), file = "logo.html")
> if (interactive()) browseURL("logo.html")  # you can check its HTML source
> 
> 
> 
> cleanEx()
> nameEx("imgur_upload")
> ### * imgur_upload
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: imgur_upload
> ### Title: Upload an image to imgur.com
> ### Aliases: imgur_upload
> 
> ### ** Examples
> 
> ## Not run: 
> ##D f = tempfile(fileext = ".png")
> ##D png(f)
> ##D plot(rnorm(100), main = R.version.string)
> ##D dev.off()
> ##D 
> ##D res = imgur_upload(f)
> ##D res  # link to original URL of the image
> ##D attr(res, "XML")  # all information
> ##D if (interactive()) 
> ##D     browseURL(res)
> ##D 
> ##D # to use your own key
> ##D opts_knit$set(upload.fun = function(file) imgur_upload(file, key = "your imgur key"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("inline_expr")
> ### * inline_expr
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: inline_expr
> ### Title: Wrap code using the inline R expression syntax
> ### Aliases: inline_expr
> 
> ### ** Examples
> 
> library(knitr)
> inline_expr("1+1", "rnw")
[1] "\\Sexpr{1+1}"
> inline_expr("1+1", "html")
[1] "<!--rinline 1+1 -->"
> inline_expr("1+1", "md")
[1] "`r 1+1`"
> 
> 
> 
> cleanEx()
> nameEx("kable")
> ### * kable
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: kable
> ### Title: Create tables in LaTeX, HTML, Markdown and reStructuredText
> ### Aliases: kable
> 
> ### ** Examples
> 
> kable(head(iris), format = "latex")

\begin{tabular}{r|r|r|r|l}
\hline
Sepal.Length & Sepal.Width & Petal.Length & Petal.Width & Species\\
\hline
5.1 & 3.5 & 1.4 & 0.2 & setosa\\
\hline
4.9 & 3.0 & 1.4 & 0.2 & setosa\\
\hline
4.7 & 3.2 & 1.3 & 0.2 & setosa\\
\hline
4.6 & 3.1 & 1.5 & 0.2 & setosa\\
\hline
5.0 & 3.6 & 1.4 & 0.2 & setosa\\
\hline
5.4 & 3.9 & 1.7 & 0.4 & setosa\\
\hline
\end{tabular}
> kable(head(iris), format = "html")
<table>
 <thead>
  <tr>
   <th style="text-align:right;"> Sepal.Length </th>
   <th style="text-align:right;"> Sepal.Width </th>
   <th style="text-align:right;"> Petal.Length </th>
   <th style="text-align:right;"> Petal.Width </th>
   <th style="text-align:left;"> Species </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:right;"> 5.1 </td>
   <td style="text-align:right;"> 3.5 </td>
   <td style="text-align:right;"> 1.4 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 4.9 </td>
   <td style="text-align:right;"> 3.0 </td>
   <td style="text-align:right;"> 1.4 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 4.7 </td>
   <td style="text-align:right;"> 3.2 </td>
   <td style="text-align:right;"> 1.3 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 4.6 </td>
   <td style="text-align:right;"> 3.1 </td>
   <td style="text-align:right;"> 1.5 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 5.0 </td>
   <td style="text-align:right;"> 3.6 </td>
   <td style="text-align:right;"> 1.4 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 5.4 </td>
   <td style="text-align:right;"> 3.9 </td>
   <td style="text-align:right;"> 1.7 </td>
   <td style="text-align:right;"> 0.4 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
</tbody>
</table>
> kable(head(iris), format = "latex", caption = "Title of the table")
\begin{table}

\caption{\label{tab:}Title of the table}
\centering
\begin{tabular}[t]{r|r|r|r|l}
\hline
Sepal.Length & Sepal.Width & Petal.Length & Petal.Width & Species\\
\hline
5.1 & 3.5 & 1.4 & 0.2 & setosa\\
\hline
4.9 & 3.0 & 1.4 & 0.2 & setosa\\
\hline
4.7 & 3.2 & 1.3 & 0.2 & setosa\\
\hline
4.6 & 3.1 & 1.5 & 0.2 & setosa\\
\hline
5.0 & 3.6 & 1.4 & 0.2 & setosa\\
\hline
5.4 & 3.9 & 1.7 & 0.4 & setosa\\
\hline
\end{tabular}
\end{table}
> kable(head(iris), format = "html", caption = "Title of the table")
<table>
<caption>Title of the table</caption>
 <thead>
  <tr>
   <th style="text-align:right;"> Sepal.Length </th>
   <th style="text-align:right;"> Sepal.Width </th>
   <th style="text-align:right;"> Petal.Length </th>
   <th style="text-align:right;"> Petal.Width </th>
   <th style="text-align:left;"> Species </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:right;"> 5.1 </td>
   <td style="text-align:right;"> 3.5 </td>
   <td style="text-align:right;"> 1.4 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 4.9 </td>
   <td style="text-align:right;"> 3.0 </td>
   <td style="text-align:right;"> 1.4 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 4.7 </td>
   <td style="text-align:right;"> 3.2 </td>
   <td style="text-align:right;"> 1.3 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 4.6 </td>
   <td style="text-align:right;"> 3.1 </td>
   <td style="text-align:right;"> 1.5 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 5.0 </td>
   <td style="text-align:right;"> 3.6 </td>
   <td style="text-align:right;"> 1.4 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 5.4 </td>
   <td style="text-align:right;"> 3.9 </td>
   <td style="text-align:right;"> 1.7 </td>
   <td style="text-align:right;"> 0.4 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
</tbody>
</table>
> # use the booktabs package
> kable(mtcars, format = "latex", booktabs = TRUE)

\begin{tabular}{lrrrrrrrrrrr}
\toprule
  & mpg & cyl & disp & hp & drat & wt & qsec & vs & am & gear & carb\\
\midrule
Mazda RX4 & 21.0 & 6 & 160.0 & 110 & 3.90 & 2.620 & 16.46 & 0 & 1 & 4 & 4\\
Mazda RX4 Wag & 21.0 & 6 & 160.0 & 110 & 3.90 & 2.875 & 17.02 & 0 & 1 & 4 & 4\\
Datsun 710 & 22.8 & 4 & 108.0 & 93 & 3.85 & 2.320 & 18.61 & 1 & 1 & 4 & 1\\
Hornet 4 Drive & 21.4 & 6 & 258.0 & 110 & 3.08 & 3.215 & 19.44 & 1 & 0 & 3 & 1\\
Hornet Sportabout & 18.7 & 8 & 360.0 & 175 & 3.15 & 3.440 & 17.02 & 0 & 0 & 3 & 2\\
\addlinespace
Valiant & 18.1 & 6 & 225.0 & 105 & 2.76 & 3.460 & 20.22 & 1 & 0 & 3 & 1\\
Duster 360 & 14.3 & 8 & 360.0 & 245 & 3.21 & 3.570 & 15.84 & 0 & 0 & 3 & 4\\
Merc 240D & 24.4 & 4 & 146.7 & 62 & 3.69 & 3.190 & 20.00 & 1 & 0 & 4 & 2\\
Merc 230 & 22.8 & 4 & 140.8 & 95 & 3.92 & 3.150 & 22.90 & 1 & 0 & 4 & 2\\
Merc 280 & 19.2 & 6 & 167.6 & 123 & 3.92 & 3.440 & 18.30 & 1 & 0 & 4 & 4\\
\addlinespace
Merc 280C & 17.8 & 6 & 167.6 & 123 & 3.92 & 3.440 & 18.90 & 1 & 0 & 4 & 4\\
Merc 450SE & 16.4 & 8 & 275.8 & 180 & 3.07 & 4.070 & 17.40 & 0 & 0 & 3 & 3\\
Merc 450SL & 17.3 & 8 & 275.8 & 180 & 3.07 & 3.730 & 17.60 & 0 & 0 & 3 & 3\\
Merc 450SLC & 15.2 & 8 & 275.8 & 180 & 3.07 & 3.780 & 18.00 & 0 & 0 & 3 & 3\\
Cadillac Fleetwood & 10.4 & 8 & 472.0 & 205 & 2.93 & 5.250 & 17.98 & 0 & 0 & 3 & 4\\
\addlinespace
Lincoln Continental & 10.4 & 8 & 460.0 & 215 & 3.00 & 5.424 & 17.82 & 0 & 0 & 3 & 4\\
Chrysler Imperial & 14.7 & 8 & 440.0 & 230 & 3.23 & 5.345 & 17.42 & 0 & 0 & 3 & 4\\
Fiat 128 & 32.4 & 4 & 78.7 & 66 & 4.08 & 2.200 & 19.47 & 1 & 1 & 4 & 1\\
Honda Civic & 30.4 & 4 & 75.7 & 52 & 4.93 & 1.615 & 18.52 & 1 & 1 & 4 & 2\\
Toyota Corolla & 33.9 & 4 & 71.1 & 65 & 4.22 & 1.835 & 19.90 & 1 & 1 & 4 & 1\\
\addlinespace
Toyota Corona & 21.5 & 4 & 120.1 & 97 & 3.70 & 2.465 & 20.01 & 1 & 0 & 3 & 1\\
Dodge Challenger & 15.5 & 8 & 318.0 & 150 & 2.76 & 3.520 & 16.87 & 0 & 0 & 3 & 2\\
AMC Javelin & 15.2 & 8 & 304.0 & 150 & 3.15 & 3.435 & 17.30 & 0 & 0 & 3 & 2\\
Camaro Z28 & 13.3 & 8 & 350.0 & 245 & 3.73 & 3.840 & 15.41 & 0 & 0 & 3 & 4\\
Pontiac Firebird & 19.2 & 8 & 400.0 & 175 & 3.08 & 3.845 & 17.05 & 0 & 0 & 3 & 2\\
\addlinespace
Fiat X1-9 & 27.3 & 4 & 79.0 & 66 & 4.08 & 1.935 & 18.90 & 1 & 1 & 4 & 1\\
Porsche 914-2 & 26.0 & 4 & 120.3 & 91 & 4.43 & 2.140 & 16.70 & 0 & 1 & 5 & 2\\
Lotus Europa & 30.4 & 4 & 95.1 & 113 & 3.77 & 1.513 & 16.90 & 1 & 1 & 5 & 2\\
Ford Pantera L & 15.8 & 8 & 351.0 & 264 & 4.22 & 3.170 & 14.50 & 0 & 1 & 5 & 4\\
Ferrari Dino & 19.7 & 6 & 145.0 & 175 & 3.62 & 2.770 & 15.50 & 0 & 1 & 5 & 6\\
\addlinespace
Maserati Bora & 15.0 & 8 & 301.0 & 335 & 3.54 & 3.570 & 14.60 & 0 & 1 & 5 & 8\\
Volvo 142E & 21.4 & 4 & 121.0 & 109 & 4.11 & 2.780 & 18.60 & 1 & 1 & 4 & 2\\
\bottomrule
\end{tabular}
> # use the longtable package
> kable(matrix(1000, ncol = 5), format = "latex", digits = 2, longtable = TRUE)

\begin{longtable}{r|r|r|r|r}
\hline
1000 & 1000 & 1000 & 1000 & 1000\\
\hline
\end{longtable}
> # add some table attributes
> kable(head(iris), format = "html", table.attr = "id=\"mytable\"")
<table id="mytable">
 <thead>
  <tr>
   <th style="text-align:right;"> Sepal.Length </th>
   <th style="text-align:right;"> Sepal.Width </th>
   <th style="text-align:right;"> Petal.Length </th>
   <th style="text-align:right;"> Petal.Width </th>
   <th style="text-align:left;"> Species </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:right;"> 5.1 </td>
   <td style="text-align:right;"> 3.5 </td>
   <td style="text-align:right;"> 1.4 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 4.9 </td>
   <td style="text-align:right;"> 3.0 </td>
   <td style="text-align:right;"> 1.4 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 4.7 </td>
   <td style="text-align:right;"> 3.2 </td>
   <td style="text-align:right;"> 1.3 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 4.6 </td>
   <td style="text-align:right;"> 3.1 </td>
   <td style="text-align:right;"> 1.5 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 5.0 </td>
   <td style="text-align:right;"> 3.6 </td>
   <td style="text-align:right;"> 1.4 </td>
   <td style="text-align:right;"> 0.2 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 5.4 </td>
   <td style="text-align:right;"> 3.9 </td>
   <td style="text-align:right;"> 1.7 </td>
   <td style="text-align:right;"> 0.4 </td>
   <td style="text-align:left;"> setosa </td>
  </tr>
</tbody>
</table>
> # reST output
> kable(head(mtcars), format = "rst")


=================  ====  ===  ====  ===  ====  =====  =====  ===  ===  ====  ====
\                   mpg  cyl  disp   hp  drat     wt   qsec   vs   am  gear  carb
=================  ====  ===  ====  ===  ====  =====  =====  ===  ===  ====  ====
Mazda RX4          21.0    6   160  110  3.90  2.620  16.46    0    1     4     4
Mazda RX4 Wag      21.0    6   160  110  3.90  2.875  17.02    0    1     4     4
Datsun 710         22.8    4   108   93  3.85  2.320  18.61    1    1     4     1
Hornet 4 Drive     21.4    6   258  110  3.08  3.215  19.44    1    0     3     1
Hornet Sportabout  18.7    8   360  175  3.15  3.440  17.02    0    0     3     2
Valiant            18.1    6   225  105  2.76  3.460  20.22    1    0     3     1
=================  ====  ===  ====  ===  ====  =====  =====  ===  ===  ====  ====
> # no row names
> kable(head(mtcars), format = "rst", row.names = FALSE)


====  ===  ====  ===  ====  =====  =====  ===  ===  ====  ====
 mpg  cyl  disp   hp  drat     wt   qsec   vs   am  gear  carb
====  ===  ====  ===  ====  =====  =====  ===  ===  ====  ====
21.0    6   160  110  3.90  2.620  16.46    0    1     4     4
21.0    6   160  110  3.90  2.875  17.02    0    1     4     4
22.8    4   108   93  3.85  2.320  18.61    1    1     4     1
21.4    6   258  110  3.08  3.215  19.44    1    0     3     1
18.7    8   360  175  3.15  3.440  17.02    0    0     3     2
18.1    6   225  105  2.76  3.460  20.22    1    0     3     1
====  ===  ====  ===  ====  =====  =====  ===  ===  ====  ====
> # R Markdown/Github Markdown tables
> kable(head(mtcars[, 1:5]), format = "markdown")


|                  |  mpg| cyl| disp|  hp| drat|
|:-----------------|----:|---:|----:|---:|----:|
|Mazda RX4         | 21.0|   6|  160| 110| 3.90|
|Mazda RX4 Wag     | 21.0|   6|  160| 110| 3.90|
|Datsun 710        | 22.8|   4|  108|  93| 3.85|
|Hornet 4 Drive    | 21.4|   6|  258| 110| 3.08|
|Hornet Sportabout | 18.7|   8|  360| 175| 3.15|
|Valiant           | 18.1|   6|  225| 105| 2.76|
> # no inner padding
> kable(head(mtcars), format = "markdown", padding = 0)


|                 | mpg|cyl|disp| hp|drat|   wt| qsec| vs| am|gear|carb|
|:----------------|---:|--:|---:|--:|---:|----:|----:|--:|--:|---:|---:|
|Mazda RX4        |21.0|  6| 160|110|3.90|2.620|16.46|  0|  1|   4|   4|
|Mazda RX4 Wag    |21.0|  6| 160|110|3.90|2.875|17.02|  0|  1|   4|   4|
|Datsun 710       |22.8|  4| 108| 93|3.85|2.320|18.61|  1|  1|   4|   1|
|Hornet 4 Drive   |21.4|  6| 258|110|3.08|3.215|19.44|  1|  0|   3|   1|
|Hornet Sportabout|18.7|  8| 360|175|3.15|3.440|17.02|  0|  0|   3|   2|
|Valiant          |18.1|  6| 225|105|2.76|3.460|20.22|  1|  0|   3|   1|
> # more padding
> kable(head(mtcars), format = "markdown", padding = 2)


|                   |   mpg|  cyl|  disp|   hp|  drat|     wt|   qsec|  vs|  am|  gear|  carb|
|:------------------|-----:|----:|-----:|----:|-----:|------:|------:|---:|---:|-----:|-----:|
|Mazda RX4          |  21.0|    6|   160|  110|  3.90|  2.620|  16.46|   0|   1|     4|     4|
|Mazda RX4 Wag      |  21.0|    6|   160|  110|  3.90|  2.875|  17.02|   0|   1|     4|     4|
|Datsun 710         |  22.8|    4|   108|   93|  3.85|  2.320|  18.61|   1|   1|     4|     1|
|Hornet 4 Drive     |  21.4|    6|   258|  110|  3.08|  3.215|  19.44|   1|   0|     3|     1|
|Hornet Sportabout  |  18.7|    8|   360|  175|  3.15|  3.440|  17.02|   0|   0|     3|     2|
|Valiant            |  18.1|    6|   225|  105|  2.76|  3.460|  20.22|   1|   0|     3|     1|
> # Pandoc tables
> kable(head(mtcars), format = "pandoc", caption = "Title of the table")


Table: Title of the table

                      mpg   cyl   disp    hp   drat      wt    qsec   vs   am   gear   carb
------------------  -----  ----  -----  ----  -----  ------  ------  ---  ---  -----  -----
Mazda RX4            21.0     6    160   110   3.90   2.620   16.46    0    1      4      4
Mazda RX4 Wag        21.0     6    160   110   3.90   2.875   17.02    0    1      4      4
Datsun 710           22.8     4    108    93   3.85   2.320   18.61    1    1      4      1
Hornet 4 Drive       21.4     6    258   110   3.08   3.215   19.44    1    0      3      1
Hornet Sportabout    18.7     8    360   175   3.15   3.440   17.02    0    0      3      2
Valiant              18.1     6    225   105   2.76   3.460   20.22    1    0      3      1
> # format numbers using , as decimal point, and ' as thousands separator
> x = as.data.frame(matrix(rnorm(60, 1e+06, 10000), 10))
> kable(x, format.args = list(decimal.mark = ",", big.mark = "'"))


|          V1|          V2|          V3|          V4|          V5|          V6|
|-----------:|-----------:|-----------:|-----------:|-----------:|-----------:|
|   993'735,5| 1'015'117,8| 1'009'189,8| 1'013'586,8|   998'354,8| 1'003'981,1|
| 1'001'836,4| 1'003'898,4| 1'007'821,4|   998'972,1|   997'466,4|   993'879,7|
|   991'643,7|   993'787,6| 1'000'745,6| 1'003'876,7| 1'006'969,6| 1'003'411,2|
| 1'015'952,8|   977'853,0|   980'106,5|   999'461,9| 1'005'566,6|   988'706,4|
| 1'003'295,1| 1'011'249,3| 1'006'198,3|   986'229,4|   993'112,4| 1'014'330,2|
|   991'795,3|   999'550,7|   999'438,7|   995'850,1|   992'925,0| 1'019'804,0|
| 1'004'874,3|   999'838,1|   998'442,0|   996'057,1| 1'003'645,8|   996'327,8|
| 1'007'383,2| 1'009'438,4|   985'292,5|   999'406,9| 1'007'685,3|   989'558,7|
| 1'005'757,8| 1'008'212,2|   995'218,5| 1'011'000,3|   998'876,5| 1'005'697,2|
|   996'946,1| 1'005'939,0| 1'004'179,4| 1'007'631,8| 1'008'811,1|   998'649,5|
> # save the value
> x = kable(mtcars, format = "html")
> cat(x, sep = "\n")
<table>
 <thead>
  <tr>
   <th style="text-align:left;">   </th>
   <th style="text-align:right;"> mpg </th>
   <th style="text-align:right;"> cyl </th>
   <th style="text-align:right;"> disp </th>
   <th style="text-align:right;"> hp </th>
   <th style="text-align:right;"> drat </th>
   <th style="text-align:right;"> wt </th>
   <th style="text-align:right;"> qsec </th>
   <th style="text-align:right;"> vs </th>
   <th style="text-align:right;"> am </th>
   <th style="text-align:right;"> gear </th>
   <th style="text-align:right;"> carb </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> Mazda RX4 </td>
   <td style="text-align:right;"> 21.0 </td>
   <td style="text-align:right;"> 6 </td>
   <td style="text-align:right;"> 160.0 </td>
   <td style="text-align:right;"> 110 </td>
   <td style="text-align:right;"> 3.90 </td>
   <td style="text-align:right;"> 2.620 </td>
   <td style="text-align:right;"> 16.46 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Mazda RX4 Wag </td>
   <td style="text-align:right;"> 21.0 </td>
   <td style="text-align:right;"> 6 </td>
   <td style="text-align:right;"> 160.0 </td>
   <td style="text-align:right;"> 110 </td>
   <td style="text-align:right;"> 3.90 </td>
   <td style="text-align:right;"> 2.875 </td>
   <td style="text-align:right;"> 17.02 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Datsun 710 </td>
   <td style="text-align:right;"> 22.8 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 108.0 </td>
   <td style="text-align:right;"> 93 </td>
   <td style="text-align:right;"> 3.85 </td>
   <td style="text-align:right;"> 2.320 </td>
   <td style="text-align:right;"> 18.61 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Hornet 4 Drive </td>
   <td style="text-align:right;"> 21.4 </td>
   <td style="text-align:right;"> 6 </td>
   <td style="text-align:right;"> 258.0 </td>
   <td style="text-align:right;"> 110 </td>
   <td style="text-align:right;"> 3.08 </td>
   <td style="text-align:right;"> 3.215 </td>
   <td style="text-align:right;"> 19.44 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Hornet Sportabout </td>
   <td style="text-align:right;"> 18.7 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 360.0 </td>
   <td style="text-align:right;"> 175 </td>
   <td style="text-align:right;"> 3.15 </td>
   <td style="text-align:right;"> 3.440 </td>
   <td style="text-align:right;"> 17.02 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Valiant </td>
   <td style="text-align:right;"> 18.1 </td>
   <td style="text-align:right;"> 6 </td>
   <td style="text-align:right;"> 225.0 </td>
   <td style="text-align:right;"> 105 </td>
   <td style="text-align:right;"> 2.76 </td>
   <td style="text-align:right;"> 3.460 </td>
   <td style="text-align:right;"> 20.22 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Duster 360 </td>
   <td style="text-align:right;"> 14.3 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 360.0 </td>
   <td style="text-align:right;"> 245 </td>
   <td style="text-align:right;"> 3.21 </td>
   <td style="text-align:right;"> 3.570 </td>
   <td style="text-align:right;"> 15.84 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Merc 240D </td>
   <td style="text-align:right;"> 24.4 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 146.7 </td>
   <td style="text-align:right;"> 62 </td>
   <td style="text-align:right;"> 3.69 </td>
   <td style="text-align:right;"> 3.190 </td>
   <td style="text-align:right;"> 20.00 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Merc 230 </td>
   <td style="text-align:right;"> 22.8 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 140.8 </td>
   <td style="text-align:right;"> 95 </td>
   <td style="text-align:right;"> 3.92 </td>
   <td style="text-align:right;"> 3.150 </td>
   <td style="text-align:right;"> 22.90 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Merc 280 </td>
   <td style="text-align:right;"> 19.2 </td>
   <td style="text-align:right;"> 6 </td>
   <td style="text-align:right;"> 167.6 </td>
   <td style="text-align:right;"> 123 </td>
   <td style="text-align:right;"> 3.92 </td>
   <td style="text-align:right;"> 3.440 </td>
   <td style="text-align:right;"> 18.30 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Merc 280C </td>
   <td style="text-align:right;"> 17.8 </td>
   <td style="text-align:right;"> 6 </td>
   <td style="text-align:right;"> 167.6 </td>
   <td style="text-align:right;"> 123 </td>
   <td style="text-align:right;"> 3.92 </td>
   <td style="text-align:right;"> 3.440 </td>
   <td style="text-align:right;"> 18.90 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Merc 450SE </td>
   <td style="text-align:right;"> 16.4 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 275.8 </td>
   <td style="text-align:right;"> 180 </td>
   <td style="text-align:right;"> 3.07 </td>
   <td style="text-align:right;"> 4.070 </td>
   <td style="text-align:right;"> 17.40 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 3 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Merc 450SL </td>
   <td style="text-align:right;"> 17.3 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 275.8 </td>
   <td style="text-align:right;"> 180 </td>
   <td style="text-align:right;"> 3.07 </td>
   <td style="text-align:right;"> 3.730 </td>
   <td style="text-align:right;"> 17.60 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 3 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Merc 450SLC </td>
   <td style="text-align:right;"> 15.2 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 275.8 </td>
   <td style="text-align:right;"> 180 </td>
   <td style="text-align:right;"> 3.07 </td>
   <td style="text-align:right;"> 3.780 </td>
   <td style="text-align:right;"> 18.00 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 3 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Cadillac Fleetwood </td>
   <td style="text-align:right;"> 10.4 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 472.0 </td>
   <td style="text-align:right;"> 205 </td>
   <td style="text-align:right;"> 2.93 </td>
   <td style="text-align:right;"> 5.250 </td>
   <td style="text-align:right;"> 17.98 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Lincoln Continental </td>
   <td style="text-align:right;"> 10.4 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 460.0 </td>
   <td style="text-align:right;"> 215 </td>
   <td style="text-align:right;"> 3.00 </td>
   <td style="text-align:right;"> 5.424 </td>
   <td style="text-align:right;"> 17.82 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Chrysler Imperial </td>
   <td style="text-align:right;"> 14.7 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 440.0 </td>
   <td style="text-align:right;"> 230 </td>
   <td style="text-align:right;"> 3.23 </td>
   <td style="text-align:right;"> 5.345 </td>
   <td style="text-align:right;"> 17.42 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Fiat 128 </td>
   <td style="text-align:right;"> 32.4 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 78.7 </td>
   <td style="text-align:right;"> 66 </td>
   <td style="text-align:right;"> 4.08 </td>
   <td style="text-align:right;"> 2.200 </td>
   <td style="text-align:right;"> 19.47 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Honda Civic </td>
   <td style="text-align:right;"> 30.4 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 75.7 </td>
   <td style="text-align:right;"> 52 </td>
   <td style="text-align:right;"> 4.93 </td>
   <td style="text-align:right;"> 1.615 </td>
   <td style="text-align:right;"> 18.52 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Toyota Corolla </td>
   <td style="text-align:right;"> 33.9 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 71.1 </td>
   <td style="text-align:right;"> 65 </td>
   <td style="text-align:right;"> 4.22 </td>
   <td style="text-align:right;"> 1.835 </td>
   <td style="text-align:right;"> 19.90 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Toyota Corona </td>
   <td style="text-align:right;"> 21.5 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 120.1 </td>
   <td style="text-align:right;"> 97 </td>
   <td style="text-align:right;"> 3.70 </td>
   <td style="text-align:right;"> 2.465 </td>
   <td style="text-align:right;"> 20.01 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Dodge Challenger </td>
   <td style="text-align:right;"> 15.5 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 318.0 </td>
   <td style="text-align:right;"> 150 </td>
   <td style="text-align:right;"> 2.76 </td>
   <td style="text-align:right;"> 3.520 </td>
   <td style="text-align:right;"> 16.87 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> AMC Javelin </td>
   <td style="text-align:right;"> 15.2 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 304.0 </td>
   <td style="text-align:right;"> 150 </td>
   <td style="text-align:right;"> 3.15 </td>
   <td style="text-align:right;"> 3.435 </td>
   <td style="text-align:right;"> 17.30 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Camaro Z28 </td>
   <td style="text-align:right;"> 13.3 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 350.0 </td>
   <td style="text-align:right;"> 245 </td>
   <td style="text-align:right;"> 3.73 </td>
   <td style="text-align:right;"> 3.840 </td>
   <td style="text-align:right;"> 15.41 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Pontiac Firebird </td>
   <td style="text-align:right;"> 19.2 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 400.0 </td>
   <td style="text-align:right;"> 175 </td>
   <td style="text-align:right;"> 3.08 </td>
   <td style="text-align:right;"> 3.845 </td>
   <td style="text-align:right;"> 17.05 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Fiat X1-9 </td>
   <td style="text-align:right;"> 27.3 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 79.0 </td>
   <td style="text-align:right;"> 66 </td>
   <td style="text-align:right;"> 4.08 </td>
   <td style="text-align:right;"> 1.935 </td>
   <td style="text-align:right;"> 18.90 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Porsche 914-2 </td>
   <td style="text-align:right;"> 26.0 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 120.3 </td>
   <td style="text-align:right;"> 91 </td>
   <td style="text-align:right;"> 4.43 </td>
   <td style="text-align:right;"> 2.140 </td>
   <td style="text-align:right;"> 16.70 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 5 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Lotus Europa </td>
   <td style="text-align:right;"> 30.4 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 95.1 </td>
   <td style="text-align:right;"> 113 </td>
   <td style="text-align:right;"> 3.77 </td>
   <td style="text-align:right;"> 1.513 </td>
   <td style="text-align:right;"> 16.90 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 5 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Ford Pantera L </td>
   <td style="text-align:right;"> 15.8 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 351.0 </td>
   <td style="text-align:right;"> 264 </td>
   <td style="text-align:right;"> 4.22 </td>
   <td style="text-align:right;"> 3.170 </td>
   <td style="text-align:right;"> 14.50 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 5 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Ferrari Dino </td>
   <td style="text-align:right;"> 19.7 </td>
   <td style="text-align:right;"> 6 </td>
   <td style="text-align:right;"> 145.0 </td>
   <td style="text-align:right;"> 175 </td>
   <td style="text-align:right;"> 3.62 </td>
   <td style="text-align:right;"> 2.770 </td>
   <td style="text-align:right;"> 15.50 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 5 </td>
   <td style="text-align:right;"> 6 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Maserati Bora </td>
   <td style="text-align:right;"> 15.0 </td>
   <td style="text-align:right;"> 8 </td>
   <td style="text-align:right;"> 301.0 </td>
   <td style="text-align:right;"> 335 </td>
   <td style="text-align:right;"> 3.54 </td>
   <td style="text-align:right;"> 3.570 </td>
   <td style="text-align:right;"> 14.60 </td>
   <td style="text-align:right;"> 0 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 5 </td>
   <td style="text-align:right;"> 8 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Volvo 142E </td>
   <td style="text-align:right;"> 21.4 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 121.0 </td>
   <td style="text-align:right;"> 109 </td>
   <td style="text-align:right;"> 4.11 </td>
   <td style="text-align:right;"> 2.780 </td>
   <td style="text-align:right;"> 18.60 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
</tbody>
</table>
> # can also set options(knitr.table.format = 'html') so that the output is HTML
> 
> 
> 
> cleanEx()
> nameEx("knit")
> ### * knit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit
> ### Title: Knit a document
> ### Aliases: knit purl
> 
> ### ** Examples
> 
> library(knitr)
> (f = system.file("examples", "knitr-minimal.Rnw", package = "knitr"))
[1] "/homero/tomas/cran/rlibro/lib/knitr/examples/knitr-minimal.Rnw"
> knit(f)  # compile to tex


processing file: /homero/tomas/cran/rlibro/lib/knitr/examples/knitr-minimal.Rnw
  ordinary text without R code

label: setup (with options) 
List of 2
 $ include: logi FALSE
 $ cache  : logi FALSE

  ordinary text without R code

label: boring-random
   inline R code fragments

label: boring-plots (with options) 
List of 3
 $ fig.width : num 4
 $ fig.height: num 4
 $ out.width : chr ".4\\linewidth"

  ordinary text without R code

output file: knitr-minimal.tex

[1] "knitr-minimal.tex"
> 
> purl(f)  # tangle R code


processing file: /homero/tomas/cran/rlibro/lib/knitr/examples/knitr-minimal.Rnw
output file: knitr-minimal.R

[1] "knitr-minimal.R"
> purl(f, documentation = 0)  # extract R code only


processing file: /homero/tomas/cran/rlibro/lib/knitr/examples/knitr-minimal.Rnw
output file: knitr-minimal.R

[1] "knitr-minimal.R"
> purl(f, documentation = 2)  # also include documentation


processing file: /homero/tomas/cran/rlibro/lib/knitr/examples/knitr-minimal.Rnw
output file: knitr-minimal.R

[1] "knitr-minimal.R"
> 
> 
> 
> cleanEx()
> nameEx("knit2html")
> ### * knit2html
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit2html
> ### Title: Convert markdown to HTML using knit() and markdownToHTML()
> ### Aliases: knit2html
> 
> ### ** Examples
> 
> # a minimal example
> writeLines(c("# hello markdown", "```{r hello-random, echo=TRUE}", "rnorm(5)", "```"), 
+     "test.Rmd")
> knit2html("test.Rmd")


processing file: test.Rmd
  ordinary text without R code

label: hello-random (with options) 
List of 1
 $ echo: logi TRUE

output file: test.md

> if (interactive()) browseURL("test.html")
> 
> 
> 
> cleanEx()
> nameEx("knit2pdf")
> ### * knit2pdf
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit2pdf
> ### Title: Convert Rnw or Rrst files to PDF using knit() and texi2pdf() or
> ###   rst2pdf()
> ### Aliases: knit2pdf
> 
> ### ** Examples
> 
> #' compile with xelatex
> ## knit2pdf(..., compiler = 'xelatex')
> 
> #' compile a reST file with rst2pdf
> ## knit2pdf(..., compiler = 'rst2pdf')
> 
> 
> 
> cleanEx()
> nameEx("knit2wp")
> ### * knit2wp
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit2wp
> ### Title: Knit an R Markdown document and post it to WordPress
> ### Aliases: knit2wp
> 
> ### ** Examples
> 
> # see the reference
> 
> 
> 
> cleanEx()
> nameEx("knit_child")
> ### * knit_child
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_child
> ### Title: Knit a child document
> ### Aliases: knit_child
> 
> ### ** Examples
> 
> # you can write \Sexpr{knit_child('child-doc.Rnw')} in an Rnw file 'main.Rnw'
> # to input results from child-doc.Rnw in main.tex
> 
> # comment out the child doc by \Sexpr{knit_child('child-doc.Rnw', eval =
> # FALSE)}
> 
> 
> 
> cleanEx()
> nameEx("knit_engines")
> ### * knit_engines
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_engines
> ### Title: Engines of other languages
> ### Aliases: knit_engines
> ### Keywords: datasets
> 
> ### ** Examples
> 
> knit_engines$get("python")
function (options) 
{
    if (isFALSE(options$python.reticulate)) {
        eng_interpreted(options)
    }
    else {
        if (!loadable("reticulate")) 
            warning2("The 'python' engine in knitr requires the reticulate package. ", 
                "If you do not want to use the reticulate package, set the chunk option ", 
                "python.reticulate = FALSE.")
        reticulate::eng_python(options)
    }
}
<environment: namespace:knitr>
> knit_engines$get("awk")
function (options) 
{
    engine = options$engine
    code = if (engine %in% c("highlight", "Rscript", "sas", "haskell", 
        "stata")) {
        f = basename(tempfile(engine, ".", switch(engine, sas = ".sas", 
            Rscript = ".R", stata = ".do", ".txt")))
        writeLines(c(switch(engine, sas = "OPTIONS NONUMBER NODATE PAGESIZE = MAX FORMCHAR = '|----|+|---+=|-/<>*' FORMDLIM=' ';title;", 
            NULL), options$code), f)
        on.exit(unlink(f), add = TRUE)
        switch(engine, haskell = paste("-e", shQuote(paste(":script", 
            f))), sas = {
            logf = sub("[.]sas$", ".lst", f)
            on.exit(unlink(c(logf, sub("[.]sas$", ".log", f))), 
                add = TRUE)
            f
        }, stata = {
            logf = sub("[.]do$", ".log", f)
            on.exit(unlink(c(logf)), add = TRUE)
            paste(switch(Sys.info()[["sysname"]], Windows = "/q /e do", 
                Darwin = "-q -e do", Linux = "-q -b do", "-q -b do"), 
                shQuote(normalizePath(f)))
        }, f)
    }
    else paste(switch(engine, bash = "-c", coffee = "-e", groovy = "-e", 
        lein = "exec -ep", mysql = "-e", node = "-e", octave = "--eval", 
        perl = "-e", psql = "-c", python = "-c", ruby = "-e", 
        scala = "-e", sh = "-c", zsh = "-c", NULL), shQuote(paste(options$code, 
        collapse = "\n")))
    code = if (engine %in% c("awk", "gawk", "sed", "sas")) 
        paste(code, options$engine.opts)
    else paste(options$engine.opts, code)
    cmd = get_engine_path(options$engine.path, engine)
    out = if (options$eval) {
        message("running: ", cmd, " ", code)
        tryCatch(system2(cmd, code, stdout = TRUE, stderr = TRUE, 
            env = options$engine.env), error = function(e) {
            if (!options$error) 
                stop(e)
            paste("Error in running command", cmd)
        })
    }
    else ""
    if (!options$error && !is.null(attr(out, "status"))) 
        stop(paste(out, collapse = "\n"))
    if (options$eval && engine %in% c("sas", "stata") && file.exists(logf)) 
        out = c(readLines(logf), out)
    engine_output(options, options$code, out)
}
<environment: namespace:knitr>
> names(knit_engines$get())
 [1] "awk"       "bash"      "coffee"    "gawk"      "groovy"    "haskell"  
 [7] "lein"      "mysql"     "node"      "octave"    "perl"      "psql"     
[13] "Rscript"   "ruby"      "sas"       "scala"     "sed"       "sh"       
[19] "stata"     "zsh"       "highlight" "Rcpp"      "tikz"      "dot"      
[25] "c"         "fortran"   "fortran95" "asy"       "cat"       "asis"     
[31] "stan"      "block"     "block2"    "js"        "css"       "sql"      
[37] "go"        "python"    "julia"    
> 
> 
> 
> cleanEx()
> nameEx("knit_exit")
> ### * knit_exit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_exit
> ### Title: Exit knitting early
> ### Aliases: knit_exit
> 
> ### ** Examples
> 
> # see https://github.com/yihui/knitr-examples/blob/master/096-knit-exit.Rmd
> 
> 
> 
> cleanEx()
> nameEx("knit_expand")
> ### * knit_expand
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_expand
> ### Title: A simple macro preprocessor for templating purposes
> ### Aliases: knit_expand
> 
> ### ** Examples
> 
> # see the knit_expand vignette
> if (interactive()) browseVignettes(package = "knitr")
> 
> 
> 
> cleanEx()
> nameEx("knit_filter")
> ### * knit_filter
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_filter
> ### Title: Spell check filter for source documents
> ### Aliases: knit_filter
> 
> ### ** Examples
> 
> library(knitr)
> knitr_example = function(...) system.file("examples", ..., package = "knitr")
> 
> 
> 
> cleanEx()
> nameEx("knit_hooks")
> ### * knit_hooks
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_hooks
> ### Title: Hooks for R code chunks, inline R code and output
> ### Aliases: knit_hooks
> ### Keywords: datasets
> 
> ### ** Examples
> 
> knit_hooks$get("source")
function (x, options) 
x
<environment: namespace:knitr>
> knit_hooks$get("inline")
function (x) 
{
    if (is.numeric(x)) 
        x = round_digits(x)
    paste(as.character(x), collapse = ", ")
}
<environment: namespace:knitr>
> 
> 
> 
> cleanEx()
> nameEx("knit_patterns")
> ### * knit_patterns
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_patterns
> ### Title: Patterns to match and extract R code in a document
> ### Aliases: knit_patterns
> ### Keywords: datasets
> 
> ### ** Examples
> 
> library(knitr)
> opat = knit_patterns$get()  # old pattern list (to restore later)
> 
> apats = all_patterns  # a list of all built-in patterns
> str(apats)
List of 8
 $ rnw     :List of 7
  ..$ chunk.begin   : chr "^\\s*<<(.*)>>=.*$"
  ..$ chunk.end     : chr "^\\s*@\\s*(%+.*|)$"
  ..$ inline.code   : chr "\\\\Sexpr\\{([^}]+)\\}"
  ..$ inline.comment: chr "^\\s*%.*"
  ..$ ref.chunk     : chr "^\\s*<<(.+)>>\\s*$"
  ..$ header.begin  : chr "(^|\n)\\s*\\\\documentclass[^}]+\\}"
  ..$ document.begin: chr "\\s*\\\\begin\\{document\\}"
 $ brew    :List of 1
  ..$ inline.code: chr "<%[=]{0,1}\\s+([^%]+)\\s+[-]*%>"
 $ tex     :List of 8
  ..$ chunk.begin   : chr "^\\s*%+\\s*begin.rcode\\s*(.*)"
  ..$ chunk.end     : chr "^\\s*%+\\s*end.rcode"
  ..$ chunk.code    : chr "^\\s*%+"
  ..$ ref.chunk     : chr "^%+\\s*<<(.+)>>\\s*$"
  ..$ inline.comment: chr "^\\s*%.*"
  ..$ inline.code   : chr "\\\\rinline\\{([^}]+)\\}"
  ..$ header.begin  : chr "(^|\n)\\s*\\\\documentclass[^}]+\\}"
  ..$ document.begin: chr "\\s*\\\\begin\\{document\\}"
 $ html    :List of 5
  ..$ chunk.begin : chr "^\\s*<!--\\s*begin.rcode\\s*(.*)"
  ..$ chunk.end   : chr "^\\s*end.rcode\\s*-->"
  ..$ ref.chunk   : chr "^\\s*<<(.+)>>\\s*$"
  ..$ inline.code : chr "<!--\\s*rinline(.+?)-->"
  ..$ header.begin: chr "\\s*<head>"
 $ md      :List of 4
  ..$ chunk.begin: chr "^[\t >]*```+\\s*\\{([a-zA-Z0-9]+.*)\\}\\s*$"
  ..$ chunk.end  : chr "^[\t >]*```+\\s*$"
  ..$ ref.chunk  : chr "^\\s*<<(.+)>>\\s*$"
  ..$ inline.code: chr "(?<!(^|\n)``)`r[ #]([^`]+)\\s*`"
 $ rst     :List of 5
  ..$ chunk.begin: chr "^\\s*[.][.]\\s+\\{r(.*)\\}\\s*$"
  ..$ chunk.end  : chr "^\\s*[.][.]\\s+[.][.]\\s*$"
  ..$ chunk.code : chr "^\\s*[.][.]"
  ..$ ref.chunk  : chr "^\\.*\\s*<<(.+)>>\\s*$"
  ..$ inline.code: chr ":r:`([^`]+)`"
 $ asciidoc:List of 6
  ..$ chunk.begin   : chr "^//\\s*begin[.]rcode(.*)$"
  ..$ chunk.end     : chr "^//\\s*end[.]rcode\\s*$"
  ..$ chunk.code    : chr "^//+"
  ..$ ref.chunk     : chr "^\\s*<<(.+)>>\\s*$"
  ..$ inline.code   : chr "`r +([^`]+)\\s*`|[+]r +([^+]+)\\s*[+]"
  ..$ inline.comment: chr "^//.*"
 $ textile :List of 5
  ..$ chunk.begin   : chr "^###[.]\\s+begin[.]rcode(.*)$"
  ..$ chunk.end     : chr "^###[.]\\s+end[.]rcode\\s*$"
  ..$ ref.chunk     : chr "^\\s*<<(.+)>>\\s*$"
  ..$ inline.code   : chr "@r +([^@]+)\\s*@"
  ..$ inline.comment: chr "^###[.].*"
> knit_patterns$set(apats[["rnw"]])  # set pattern list from apats
> 
> knit_patterns$get(c("chunk.begin", "chunk.end", "inline.code"))
$chunk.begin
[1] "^\\s*<<(.*)>>=.*$"

$chunk.end
[1] "^\\s*@\\s*(%+.*|)$"

$inline.code
[1] "\\\\Sexpr\\{([^}]+)\\}"

> 
> # a customized pattern list; has to empty the original patterns first!
> knit_patterns$restore()
> # we may want to use this in an HTML document
> knit_patterns$set(list(chunk.begin = "<!--helloR\\s+(.*)", chunk.end = "^byeR-->"))
> str(knit_patterns$get())
List of 9
 $ chunk.begin   : chr "<!--helloR\\s+(.*)"
 $ chunk.end     : chr "^byeR-->"
 $ chunk.code    : NULL
 $ inline.code   : NULL
 $ global.options: NULL
 $ input.doc     : NULL
 $ ref.chunk     : NULL
 $ header.begin  : NULL
 $ document.begin: NULL
> 
> knit_patterns$set(opat)  # put the old patterns back
> 
> 
> 
> cleanEx()
> nameEx("knit_print")
> ### * knit_print
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_print
> ### Title: A custom printing function
> ### Aliases: knit_print normal_print
> 
> ### ** Examples
> 
> library(knitr)
> # write tables for data frames
> knit_print.data.frame = function(x, ...) {
+     res = paste(c("", "", kable(x, output = FALSE)), collapse = "\n")
+     asis_output(res)
+ }
> # after you defined the above method, data frames will be printed as tables in
> # knitr, which is different with the default print() behavior
> 
> 
> 
> cleanEx()
> nameEx("knit_rd")
> ### * knit_rd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_rd
> ### Title: Knit package documentation
> ### Aliases: knit_rd knit_rd_all
> 
> ### ** Examples
> 
> library(knitr)
> ## Not run: 
> ##D 
> ##D knit_rd("maps")
> ##D knit_rd("rpart")
> ##D setwd(system.file("html", package = "ggplot2"))
> ##D knit_rd("ggplot2")  # time-consuming!
> ##D 
> ##D knit_rd_all()  # this may take really long time if you have many packages installed
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("knit_theme")
> ### * knit_theme
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_theme
> ### Title: Syntax highlighting themes
> ### Aliases: knit_theme
> ### Keywords: datasets
> 
> ### ** Examples
> 
> opts_knit$set(out.format = "latex")
> knit_theme$set("edit-vim")
> 
> knit_theme$get()  # names of all available themes
 [1] "acid"              "aiseered"          "andes"            
 [4] "anotherdark"       "autumn"            "baycomb"          
 [7] "bclear"            "biogoo"            "bipolar"          
[10] "blacknblue"        "bluegreen"         "breeze"           
[13] "bright"            "camo"              "candy"            
[16] "clarity"           "dante"             "darkblue"         
[19] "darkbone"          "darkness"          "darkslategray"    
[22] "darkspectrum"      "default"           "denim"            
[25] "dusk"              "earendel"          "easter"           
[28] "edit-anjuta"       "edit-eclipse"      "edit-emacs"       
[31] "edit-flashdevelop" "edit-gedit"        "edit-jedit"       
[34] "edit-kwrite"       "edit-matlab"       "edit-msvs2008"    
[37] "edit-nedit"        "edit-vim-dark"     "edit-vim"         
[40] "edit-xcode"        "ekvoli"            "fine_blue"        
[43] "freya"             "fruit"             "golden"           
[46] "greenlcd"          "greyscale0"        "greyscale1"       
[49] "greyscale2"        "kellys"            "leo"              
[52] "lucretia"          "manxome"           "maroloccio"       
[55] "matrix"            "moe"               "molokai"          
[58] "moria"             "navajo-night"      "navy"             
[61] "neon"              "night"             "nightshimmer"     
[64] "nuvola"            "olive"             "orion"            
[67] "oxygenated"        "pablo"             "peaksea"          
[70] "print"             "rand01"            "rdark"            
[73] "relaxedgreen"      "rootwater"         "seashell"         
[76] "solarized-dark"    "solarized-light"   "tabula"           
[79] "tcsoft"            "vampire"           "whitengrey"       
[82] "xoria256"          "zellner"           "zenburn"          
[85] "zmrok"            
> 
> thm = knit_theme$get("acid")  # parse the theme to a list
> knit_theme$set(thm)
> 
> opts_knit$set(out.format = NULL)  # restore option
> 
> 
> 
> cleanEx()
> nameEx("knit_watch")
> ### * knit_watch
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_watch
> ### Title: Watch an input file continuously and knit it when it is updated
> ### Aliases: knit_watch
> 
> ### ** Examples
> 
> # knit_watch('foo.Rnw', knit2pdf)
> 
> # knit_watch('foo.Rmd', rmarkdown::render)
> 
> 
> 
> cleanEx()
> nameEx("opts_chunk")
> ### * opts_chunk
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: opts_chunk
> ### Title: Default and current chunk options
> ### Aliases: opts_chunk opts_current
> ### Keywords: datasets
> 
> ### ** Examples
> 
> opts_chunk$get("prompt")
[1] FALSE
> opts_chunk$get("fig.keep")
[1] "high"
> 
> 
> 
> cleanEx()
> nameEx("opts_hooks")
> ### * opts_hooks
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: opts_hooks
> ### Title: Hooks for code chunk options
> ### Aliases: opts_hooks
> ### Keywords: datasets
> 
> ### ** Examples
> 
> # make sure the figure width is no smaller than fig.height
> opts_hooks$set(fig.width = function(options) {
+     if (options$fig.width < options$fig.height) {
+         options$fig.width = options$fig.height
+     }
+     options
+ })
> # remove all hooks
> opts_hooks$restore()
> 
> 
> 
> cleanEx()
> nameEx("opts_knit")
> ### * opts_knit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: opts_knit
> ### Title: Options for the knitr package
> ### Aliases: opts_knit
> ### Keywords: datasets
> 
> ### ** Examples
> 
> opts_knit$get("verbose")
[1] FALSE
> opts_knit$set(verbose = TRUE)  # change it
> if (interactive()) {
+     # for unnamed chunks, use 'fig' as the figure prefix
+     opts_knit$set(unnamed.chunk.label = "fig")
+     knit("001-minimal.Rmd")  # from https://github.com/yihui/knitr-examples
+ }
> 
> 
> 
> cleanEx()
> nameEx("opts_template")
> ### * opts_template
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: opts_template
> ### Title: Template for creating reusable chunk options
> ### Aliases: opts_template
> ### Keywords: datasets
> 
> ### ** Examples
> 
> opts_template$set(myfigures = list(fig.height = 4, fig.width = 4))
> # later you can reuse these chunk options by 'opts.label', e.g.
> 
> # <<foo, opts.label='myfigures'>>=
> 
> # the above is equivalent to <<foo, fig.height=4, fig.width=4>>=
> 
> 
> 
> cleanEx()
> nameEx("output_type")
> ### * output_type
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: is_latex_output
> ### Title: Check if the current output type is LaTeX or HTML
> ### Aliases: is_latex_output is_html_output
> 
> ### ** Examples
> 
> knitr::is_latex_output()
[1] FALSE
> knitr::is_html_output()
[1] FALSE
> knitr::is_html_output(excludes = c("markdown", "epub"))
[1] FALSE
> 
> 
> 
> cleanEx()
> nameEx("pandoc")
> ### * pandoc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pandoc
> ### Title: A Pandoc wrapper to convert documents to other formats
> ### Aliases: pandoc
> 
> ### ** Examples
> 
> system("pandoc -h")  # see possible output formats
sh: 1: pandoc: not found
Warning in system("pandoc -h") : error in running command
> 
> 
> 
> cleanEx()
> nameEx("pat_fun")
> ### * pat_fun
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pat_rnw
> ### Title: Set regular expressions to read input documents
> ### Aliases: pat_rnw pat_brew pat_tex pat_html pat_md pat_rst pat_asciidoc
> ###   pat_textile
> 
> ### ** Examples
> 
> # see how knit_patterns is modified
> knit_patterns$get()
$chunk.begin
NULL

$chunk.end
NULL

$chunk.code
NULL

$inline.code
NULL

$global.options
NULL

$input.doc
NULL

$ref.chunk
NULL

$header.begin
NULL

$document.begin
NULL

> pat_rnw()
> knit_patterns$get()
$chunk.begin
[1] "^\\s*<<(.*)>>=.*$"

$chunk.end
[1] "^\\s*@\\s*(%+.*|)$"

$inline.code
[1] "\\\\Sexpr\\{([^}]+)\\}"

$inline.comment
[1] "^\\s*%.*"

$ref.chunk
[1] "^\\s*<<(.+)>>\\s*$"

$header.begin
[1] "(^|\n)\\s*\\\\documentclass[^}]+\\}"

$document.begin
[1] "\\s*\\\\begin\\{document\\}"

> 
> knit_patterns$restore()  # empty the list
> 
> 
> 
> cleanEx()
> nameEx("rand_seed")
> ### * rand_seed
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rand_seed
> ### Title: An unevaluated expression to return .Random.seed if exists
> ### Aliases: rand_seed
> ### Keywords: datasets
> 
> ### ** Examples
> 
> eval(rand_seed)
  [1]         403         624  -169270483  -442010614  -603558397  -222347416
  [7]  1489374793   865871222  1734802815    98005428   268448037    63650722
 [13] -1754793285 -2135275840  -779982911  -864886130  1880007095   463784588
 [19]  1271615005  1390544442  -544608653  -251475688  -326549447 -1570483546
 [25]  1965989103  -784675228  1458985493  2146317266 -1103943381   289023600
 [31]  -436963407   109630910    69979943  1606475068  1441346829  -662821782
 [37]  -381252893  -311574840  1918496297   289721302   507975775  -209037548
 [43]  1665646341  -466864126   776139675  1704391200  -162823263 -1815571218
 [49]   471685271  1503042540    -9316355   773770906  1304642387  1931157624
 [55] -1378412519   965775622    19361743  1561398212  1879269365  1049118770
 [61]  1191074315   508275152 -1006204015  -639295458  1060781575  -724498788
 [67]   257177325 -1004075830   323426243   602271272  1516224009  -111500746
 [73]  -368663745  1624894580 -1946665755  -305830814  -779330437  1251167616
 [79] -2140893311  2068936526  1520009079  -673505972   406802909  -205928710
 [85]  1641613363  1751721944   454221817 -2089418906  1121694383  1689254180
 [91] -1984604715  -781808494  1892940523   409525552 -1134260367 -2025809282
 [97]   823270631  1407180796  1755457741   783947050  -213904221   536857992
[103]  1791983081 -1888114538 -2091016673 -1860292140  -276190523  2041495746
[109]   293352795 -2071504672  1489341281 -1448769106  -885320105  -724939092
[115]   -89408579   801828698 -2096939757  1355079480 -1942710311 -1985176122
[121] -1593612913 -2123393404  -410764363  1470169330  1508641739   174702736
[127]  1980138321  1530086622  -412390457   826632540  1682639533   709842314
[133]  1047101827  -678208280  2040606153 -1020403978  2130970879  -206624972
[139]   796133541  -318747358   441089595  1414206528  1684436801   291294222
[145]  1773804855   985411596  -953215587   -93698118   880402931   403064472
[151]  -717996103 -1580438490  1582729327  2024268772   149426581   -61889198
[157] -1132557141  -349809680 -1813747919  1851072318  -872535385  1834590908
[163] -1060709235  1425982954  -973382045 -1401381816  -657666647  -803519146
[169]  1303503839   602197140   690968197 -1194194558 -1271974117  -424247392
[175] -2076224735  1896824430 -1915841513 -1610038932  1514233725  -139472870
[181]   359986899   369450488  1175050137  1835887238 -1718805681  1001447748
[187] -1453795467  -158697038  -289178229 -1653172400 -1258931439 -1522652770
[193] -1534961273 -1267430372  -124936595  -656382390  1999481667  1820822440
[199]  1447714185  1037425590  1008676543  -384359948  -164391835  1513879010
[205]  1130520571  1419877120 -1790435583  1398071502  -349144329  1191707340
[211]  1281005917  1471383674  -517178445   244983128 -1431478407  -634939162
[217]  1298079279  -404582748 -1068593835 -1989575150  -487399829  -265123152
[223]  1949564657 -1333369858 -1833961369  1592665468  1108824141  1812739754
[229]  1530423331  1368926984  1007803753  -537550314  1929636255   916334420
[235]  -336018875  1515590210  -937690917 -1562089888  1886968545   247837486
[241] -1852321321   504493100  -235748547  -695373606  1859678355   832347320
[247]  1259788121   563279686  1350865167  -963318780 -2126433483    67416690
[253]   658812747 -1640878576  1754641105   214290014   339674951  1897819868
[259] -1881411027  1352283914 -1756130045    25328232  1343966537  -703424394
[265]  -149416833   735173812 -1678319579  1312317090  -560725573 -1034493504
[271]  -355891519  -973490802  -323184457 -1082223220  1535237405 -1135244998
[277] -1313811085   451200024  -348242119  -918059610  1437955055  1293941092
[283]  1537788181 -1049356590  -437194709  1313702256   622024369    43280574
[289]    48727591 -1688377284 -1873574899  1419929450  1823945187 -1910605368
[295]  -731992791 -1950040362 -1458327713   336216596  -744100347  -688203006
[301] -1090356581 -1882125024  -718134623  1737025518 -1000943721  1906697964
[307]  1434445565  -584855142 -1192383917  -766862472  -887384295 -1562557434
[313]  -341195057   484161220   -84062475   684698418  -449863413 -1822653232
[319]   950332049 -1500892386 -1805552377   973279644 -1376385555  -767768630
[325]   949698243  1967401256 -2032927479 -1197206218  1169078847  1721718644
[331] -1669469211 -1581938846  1033855867  -735385472   -55923071 -1374991794
[337]  1008629367   652208204  1751441629 -1726985734 -1345917133  -878304552
[343] -1499013383  -873713050  2098825647    52438052  1186383061 -1389400174
[349] -2026323477  -331925456   776105585  -650171010  1516557287  1432840956
[355]   255555533 -1350477782  1949809571 -1597273976 -1586283287  1615371158
[361]  1705063711  -957801260  1006033349  1736467394  -895304613  1144812512
[367]   707471969   538500270  -741634729  2105842092  -660026691  -600640934
[373]  -579558381  -422618568 -1244129575 -1374924602  1354546319  -112901756
[379]  1649224373  -844405774  -901492021 -1011508336 -1931222447  1196120030
[385]  1118413511 -1578994596 -1768171091  1585977482 -1262180221  1720489960
[391]  -634098487  -766881290  2107842559    71275060   864597925  -311201758
[397]  1917093179 -2132955328   581670465   273260302  1729500215 -1075053812
[403] -1497127779   514050746 -1523660557  1872642456 -1398325575   -19554522
[409] -1991549073   614665956 -1388805995   358320210  1217024939  1890561776
[415]  -679393743  1766240830 -1763188313  2144087484  -493933683  -580318998
[421] -1418066589 -2007017656  1661963433 -1438566314  -563316001   435861396
[427]  1084982661    78032002  -591610341   384211616 -1490816479 -1657433746
[433]   766905111  -462549908 -1892848003  1685771034 -2043847213   501930232
[439] -1156819303 -1075831418   628978255  -695104444 -1024407947   458742962
[445]   943899787   905802320 -1928160751 -2083963746   -52981625   -75720932
[451]  1301114221 -1237571254   630182467   874235560  -369320823  -809152842
[457] -1263188545   796036340  1557611365 -1976428318  1313040123  2133800448
[463]  1955347969 -1317751858 -1151110665 -1922904628   173942877  1037044602
[469]   464020147   361570392 -1929421191  1053019110      718127 -1939293788
[475]  2062416981 -2101845742  1806017899  1115088304   680517105 -1486162178
[481]  1982902119  -850677636  -301031603   -15107670   205393699    60417544
[487] -1728865175  1986958614   154501279 -1744891308 -1115426491  1731048770
[493] -1492090917   512721248  1138522593    60753454    -2733865   153239340
[499]  1288557117  -960793638   483907475  -430106696  1249400409   353937990
[505]  -810817521  -276785404  -391634379   -90892942  1357575755 -1326184176
[511]   552669649 -1329340066  1621835335  1502706140 -1769291475  1511586314
[517]  1690090499   -55462552   367823945   500501366 -1062917249  -755480652
[523]  -735473883 -1867415134  1666975931  1172274368  -905140799   374114446
[529]  1187418039  1376018572  1190423581 -1487598534  1559477363 -1942831336
[535] -1754317255   678869158   655903471  -718199708  1536636949  1040579026
[541]  -229984469 -2008228752  -382847567  1215036350  1979661607 -1331301572
[547]  -713436403  -179131798  1346623715 -1858390840 -2099286999 -1852788266
[553] -1682160033 -1950995180  1312824581   131431938 -1688338021   838281248
[559] -1206599263   940915438   938231447   241250796 -1521879555   330618010
[565]  -885780141  1860572792 -1814292967 -1435109626  1963466191  1053974980
[571]  1597193717   337841714  -167974901 -1151770672  -264287855  -486848994
[577]  -874206201 -1897849700  -179055379 -1965126966   202073539 -1626446808
[583]  2110012425  -382105546   926077247 -1718566284   356489957  -642667934
[589]    55470715   195986304 -1158886015 -2087641778  -687903369 -1869565108
[595]  -800690211  -873280262  1926288947  1649352152  -608772615   414082406
[601]    70475951  1505513252 -1158401067  1342460562 -1640396565   686920496
[607] -1591980687 -1056325506  -736916761  1553659388   -57620787  1624546090
[613]  -246717789  1879262088   546503657 -2006479210   197184543    -2095148
[619]  1319110853   526255810  -345685157  -404910368  2072824161  -547868754
[625] -2085092265  -689249108
> rnorm(1)  # .Random.seed is created (or modified)
[1] -0.6264538
> eval(rand_seed)
  [1]         403           2  1654269195 -1877109783  -961256264  1403523942
  [7]   124639233   261424787  1836448066  1034917620   -13630729   468718317
 [13]  1694379396  1559298986  1935866133 -1450855505  2105396150  1802260960
 [19]  1077391651   539731521   122505520   230898510 -1940184647  1223031755
 [25] -1597886342 -1854140036 -1783225921  1484611221  1365746860  -346485118
 [31]  1206044253  1201793367   956757054   350214264 -1324711077 -1071776071
 [37] -1831283960  1862871478  1826141937   268853539   607122290  1403468228
 [43] -1913257593  -346768547  -463801004  1625143162  1387501253  -280700897
 [49]   422985638   732086576  -725197869  1128169969 -1024391392 -1032957506
 [55]  -353082935 -1139485317   445858634  1224049580  -796824913   247650405
 [61]   542595100  -404965774  -423589651 -1999189721  1430762830 -1439787608
 [67] -1821953621  1808288457 -1668269352 -1099348090    24992353  -140278797
 [73]  1709299298   269218004  1210153431  -238785587  -383705244  -472446134
 [79]   -15672651  -538858993  1771793174   -40319552 -1632234109 -1613456479
 [85]  -109108336  2056208494   -22837735  -195336533   835590810    86083164
 [91]   517854047  -397095627 -1681163060   985204258   613283965  1720828279
 [97]   929066654  -293216936   348261563  1602155097  1188944360  -526197738
[103] -1056856175  -999184317 -1361965230 -1531694108  1775225383  1578975869
[109]  -305972364   499275610  -297283163 -1400910401  -628019642  -995328816
[115]  -416901389  -131985391   838014528   160971294   516863209 -1388986853
[121] -1140425174   -14278324  1980074767  1968938565  -674453508  1981972050
[127] -1121442867  -907997817   494782574  1629589576    57352779 -1057292375
[133]  2043531000 -1557378522 -2033982655 -1166473005 -1243272062  1507691188
[139]   519478839  -214579923   -15421884  -257117334   917217237  1604258159
[145] -1793932170  1404112800   895408227 -1228178175 -1129918352  1726708750
[151] -1514890119 -1503646709 -1385642694   530830396 -1346935937  1552658645
[157]   -31128340 -1631936958  1895821725   665429015  1197209982    25108280
[163]  1382701083 -1944495751  1482522568  1344742390  2075751985   887378019
[169]  2132045874   507710852 -1239616569 -1239992675  1300848148 -2078006086
[175]  1822724357  1779634911  -346210458    68638448  -651383277   408315825
[181] -2048675232  1331662846 -1134018679 -1715119941 -1026157430  -262084756
[187] -1837320977  -648290523  -685012516  -699648078 -1959870803  -939002265
[193]  1368704398  1604498024  -270455189   878774281 -1496090984  1651241414
[199]  -719838943  -170397261  1455721762   967288596  1974706071 -1131741299
[205]  1944879780   693669002   967713525   849937743  1265996374   507097344
[211]  -355466173  2106394593   467134288  1892604334   231167833   250371435
[217]  1139934426  -641921636  -858574433  -474934283 -2013707636 -1380890782
[223]   119355197   993660855 -2002084770 -1013984872  -379702021   925663385
[229]   -31002328  -442860704 -1075363102   641540264  1223098572 -1416033796
[235]  1656623026  -797919760  1826465220   503635800   479382394  -180521552
[241]   335149500  -762107820 -1027404862 -1827060960  1940004796   -55285168
[247]   820174306 -1241009816   780750156  1441990908   182952690   711513856
[253] -1637546380  2029275144  1579137466 -1032808496  -740935188  -653815916
[259]   804057810 -1415082400  1411310924     1021216  -350965118  1885104616
[265]   987875308  -131369412  1998212722 -1838333072   848054564  1637511736
[271] -1985453670   185338320  1063452092 -1501837164  -244441982  -655956544
[277]  1724949308  2018636944   664617762   824380936  -454972148  1579726236
[283] -1666261486  -245134464   802374420  1526755624   260631610 -1205064752
[289]  -361627028   937556532  -494404974   -99312288 -1390302900  1614862304
[295]   774509986  1360092584  -193173876 -1314447940 -1663111566 -1553441808
[301]  1474524740 -1146038184 -2113923014  1375914096 -1694107588  1286052116
[307]  -244301118 -1394274592 -1799518084  1647537872  -826656350   363032616
[313]   887266060  1523945916 -1606634702 -1705936192  1284490292  -611903800
[319]   -82717510  1223915152  1740148460 -1417786796   261071506  -232439520
[325]  -735589940 -1901903136    53278914 -1123929048  -739412052  1446503100
[331] -1800705038  1762987568 -1902032988 -1903022664   152627034   717533328
[337]   246260604  1132269844 -1594365630   343599360 -1585484356   763185488
[343] -1647048414  -696819128   134752268 -1533188516 -1147008558  1720888832
[349] -1992442540 -1205072664  1506019578   603356880  1553058604   599599348
[355]  -568221294   -26303136  1900303372  -891679520 -1327582622  -770317144
[361] -2141666228  1110458236 -1984349902   163365488  1002681156 -1830044712
[367]  -482759814  1341773872 -1905328196 -2080945580   830894146  1654662816
[373]   550937276  -155556912  -506636958  1307590376  1514790092  1301985788
[379] -2135581198  1363303552  2121865716  1892557448  1059986234  1182360912
[385] -1907645332 -1564824172  1223534674 -1003414048  1916359884  -428286304
[391]  -449023614 -1081851672  1379461868   -76178116    39708786 -1623293328
[397]   506321444  2118223928 -1103890150  -418716464 -1680746180 -1496452204
[403]   625145730  1623387072  1943565884  1450672528  1732028450  1481551112
[409]   487458956   872206108  -748118894  2140900736  -935907308   548710184
[415] -1376221638  1162922448 -1448468116   593599412 -1498189294 -1658751008
[421]   462232012   124672224   557945890  1357773608   781625868  1816482620
[427]  -142301198  -510500112  1926556228   -13969832  -233818310 -1136707600
[433]   460294844  -416275180  1083468994  -781480864  1355603324  1851695056
[439]   578619682  -798888280  1535516556  -172522308  1128772402  -958671296
[445] -1018973004  1397935176 -1571451462  1620720144  -804320020  -120377004
[451]   539237138  1130743200  -645778740  1151912544  1355687874  1031070504
[457] -1306313446   142889871   589573337 -1228012690 -1810984196 -1041194899
[463]  -926225385 -1469796896  1488304574 -1061851253  -338333683 -2027587526
[469]  -665470856  1572082721  -864508205  -357575180   -92260734  -727936233
[475] -1218739743 -1034735834  1959295524 -2018968363   970828927  2088100120
[481]  1582403638 -1341110589 -1107547387   214011554  -657752944 -1164080071
[487]  -795818773  -913533476   200285194   752745215    63615817 -1335801634
[493] -1217612148  -805518755 -1818050457 -1804608112   621505966   918960219
[499]   676442173  -402544982 -1789574328   224036721  -764759837  -670177308
[505]   261209874  -893263129  1281983665   362571510  1179824404  1440671269
[511]  -385713361  -963744536  2009648582 -1648018317  -719300907  1092938930
[517]   163127424   830016617  -184674085   343641132   154989626  -583638289
[523]   424254841   484102670 -1823956004   550505549  -397533257  -309821120
[529] -1833768930   947035883  1101549165  1819580122  1254016664   600796417
[535]  -119647565   507059668  1219230946   981013879   178359489 -1798344634
[541]   519307140  1302534453   -26966241  -277288328 -1009389738   145067491
[547]   844768165 -1768828350 -1545351120  -672619431 -1158866485    15817276
[553]  -881306518   -50051425 -1092056279  1196083134   248280748   296336381
[559]   891261767   207606832 -1985825458 -2102088325  1662966493 -1304487158
[565]   873339432   806441617  1094718083  1123275652   840202674   725952263
[571]  -597236399 -1409356586  -114177612  1521819077   401542415  1975999368
[577]   -10714458 -1167764909  1721318325 -2086876910   742005472   969609033
[583]  -890084997 -1277850548  -971870758  1665781711   -20106855  1492599214
[589]  1206353596   231206701  1215581399  -910904032  -626793858   303180875
[595]   704691789  1846420602 -1294941000 -2057982367   787944467 -1144544716
[601]  -630963134  1707080791   636622753  -866277274   434270308   154340245
[607]   835108031 -1921487784   511924342 -1737570173   907225285   803644898
[613]  -625275824 -1045666439 -1073554773 -1362001380  -645341878   459588927
[619] -1339341943   -24970338 -2003084724  -426558435 -1332570713  -956733232
[625]   355793518  1450597184
> 
> 
> 
> cleanEx()
> nameEx("raw_output")
> ### * raw_output
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: extract_raw_output
> ### Title: Mark character strings as raw output that should not be
> ###   converted
> ### Aliases: extract_raw_output restore_raw_output raw_output
> 
> ### ** Examples
> 
> library(knitr)
> out = c("*hello*", raw_output("<special>content</special> *protect* me!"), 
+     "*world*")
> pre = extract_raw_output(out)
> str(pre)
List of 2
 $ value : chr "*hello*\n!!!!!RAW-KNITR-CONTENTc249d7ecacd5f3afb5274321fec9b601RAW-KNITR-CONTENT!!!!!\n*world*"
 $ chunks: Named chr "<special>content</special> *protect* me!"
  ..- attr(*, "names")= chr "c249d7ecacd5f3afb5274321fec9b601"
> pre$value = gsub("[*]([^*]+)[*]", "<em>\\1</em>", 
+     pre$value)  # think this as Pandoc conversion
> pre$value
[1] "<em>hello</em>\n!!!!!RAW-KNITR-CONTENTc249d7ecacd5f3afb5274321fec9b601RAW-KNITR-CONTENT!!!!!\n<em>world</em>"
> # raw output was protected from the conversion (e.g.
> # *protect* was not converted)
> restore_raw_output(pre$value, pre$chunks)
[1] "<em>hello</em>\n<special>content</special> *protect* me!\n<em>world</em>"
> 
> 
> 
> cleanEx()
> nameEx("read_chunk")
> ### * read_chunk
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read_chunk
> ### Title: Read chunks from an external script
> ### Aliases: read_chunk read_demo
> 
> ### ** Examples
> 
> ## put this in foo.R and read_chunk('foo.R')
> 
> ## ---- my-label ----
> 1 + 1
[1] 2
> lm(y ~ x, data = data.frame(x = 1:10, y = rnorm(10)))

Call:
lm(formula = y ~ x, data = data.frame(x = 1:10, y = rnorm(10)))

Coefficients:
(Intercept)            x  
   -0.16882      0.05473  

> 
> ## later you can use <<my-label>>= to reference this chunk
> 
> ## the 2nd approach
> code = c("#@a", "1+1", "#@b", "#@a", "rnorm(10)", "#@b")
> read_chunk(lines = code, labels = "foo")  # put all code into one chunk named foo
> read_chunk(lines = code, labels = "foo", from = 2, to = 2)  # line 2 into chunk foo
> read_chunk(lines = code, labels = c("foo", "bar"), from = c(1, 4), to = c(3, 6))
> # automatically figure out 'to'
> read_chunk(lines = code, labels = c("foo", "bar"), from = c(1, 4))
> read_chunk(lines = code, labels = c("foo", "bar"), from = "^#@a", to = "^#@b")
> read_chunk(lines = code, labels = c("foo", "bar"), from = "^#@a", to = "^#@b", 
+     from.offset = 1, to.offset = -1)
> 
> ## later you can use, e.g., <<foo>>=
> knitr:::knit_code$get()  # use this to check chunks in the current session
$foo
[1] "1+1"

$bar
[1] "rnorm(10)"

> knitr:::knit_code$restore()  # clean up the session
> 
> 
> 
> cleanEx()
> nameEx("read_rforge")
> ### * read_rforge
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read_rforge
> ### Title: Read source code from R-Forge
> ### Aliases: read_rforge
> 
> ### ** Examples
> 
> library(knitr)
> 
> 
> 
> cleanEx()
> nameEx("rocco")
> ### * rocco
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rocco
> ### Title: Knit R Markdown using the classic Docco style
> ### Aliases: rocco
> 
> ### ** Examples
> 
> rocco_view = function(input) {
+     if (!file.exists(input)) 
+         return()
+     o = rocco(input, header = "", quiet = TRUE)
+     if (interactive()) 
+         browseURL(o)
+ }
> # knit these two vignettes using the docco style
> rocco_view(system.file("doc", "docco-classic.Rmd", package = "knitr"))
Warning in in_dir(input_dir(), evaluate(code, envir = env, new_device = FALSE,  :
  You changed the working directory to /home/tomas/cran/rlibro/check/knitr.Rcheck (probably via setwd()). It will be restored to /homero/tomas/cran/rlibro/lib/knitr/doc. See the Note section in ?knitr::knit
> rocco_view(system.file("doc", "knit_expand.Rmd", package = "knitr"))
Warning in in_dir(input_dir(), evaluate(code, envir = env, new_device = FALSE,  :
  You changed the working directory to /home/tomas/cran/rlibro/check/knitr.Rcheck (probably via setwd()). It will be restored to /homero/tomas/cran/rlibro/lib/knitr/doc. See the Note section in ?knitr::knit
> 
> 
> 
> cleanEx()
> nameEx("set_alias")
> ### * set_alias
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_alias
> ### Title: Set aliases for chunk options
> ### Aliases: set_alias
> 
> ### ** Examples
> 
> set_alias(w = "fig.width", h = "fig.height")
> # then we can use options w and h in chunk headers instead of fig.width and
> # fig.height
> 
> 
> 
> cleanEx()
> nameEx("set_header")
> ### * set_header
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_header
> ### Title: Set the header information
> ### Aliases: set_header
> 
> ### ** Examples
> 
> set_header(tikz = "\\usepackage{tikz}")
> opts_knit$get("header")
highlight 
"\\definecolor{fgcolor}{rgb}{0, 0, 0}\n\\newcommand{\\hlnum}[1]{\\textcolor[rgb]{0.502,0,0.502}{\\textbf{#1}}}%\n\\newcommand{\\hlstr}[1]{\\textcolor[rgb]{0.651,0.522,0}{#1}}%\n\\newcommand{\\hlcom}[1]{\\textcolor[rgb]{1,0.502,0}{#1}}%\n\\newcommand{\\hlopt}[1]{\\textcolor[rgb]{1,0,0.502}{\\textbf{#1}}}%\n\\newcommand{\\hlstd}[1]{\\textcolor[rgb]{0,0,0}{#1}}%\n\\newcommand{\\hlkwa}[1]{\\textcolor[rgb]{0.733,0.475,0.467}{\\textbf{#1}}}%\n\\newcommand{\\hlkwb}[1]{\\textcolor[rgb]{0.502,0.502,0.753}{\\textbf{#1}}}%\n\\newcommand{\\hlkwc}[1]{\\textcolor[rgb]{0,0.502,0.753}{#1}}%\n\\newcommand{\\hlkwd}[1]{\\textcolor[rgb]{0,0.267,0.4}{#1}}%\n\\let\\hlipl\\hlkwb" 
tikz 
usepackage{tikz}" 
framed 

> 
> 
> 
> cleanEx()
> nameEx("set_parent")
> ### * set_parent
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_parent
> ### Title: Specify the parent document of child documents
> ### Aliases: set_parent
> 
> ### ** Examples
> 
> ## can use, e.g. \Sexpr{set_parent('parent_doc.Rnw')} or
> 
> # <<setup-child, include=FALSE>>=
> 
> # set_parent('parent_doc.Rnw')
> 
> # @
> 
> 
> 
> cleanEx()
> nameEx("spin")
> ### * spin
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: spin
> ### Title: Spin goat's hair into wool
> ### Aliases: spin
> 
> ### ** Examples
> 
> #' write normal text like this and chunk options like below
> 
> #+ label, opt=value
> 
> # /*
> #' these lines are treated as comments in spin()
> 1 + 1
[1] 2
> # */
> 
> (s = system.file("examples", "knitr-spin.R", package = "knitr"))
[1] "/homero/tomas/cran/rlibro/lib/knitr/examples/knitr-spin.R"
> spin(s)  # default markdown
Warning in file(file, ifelse(append, "a", "w")) :
  cannot open file '/homero/tomas/cran/rlibro/lib/knitr/examples/knitr-spin.Rmd': Read-only file system
Error in file(file, ifelse(append, "a", "w")) : 
  cannot open the connection
Calls: spin -> cat -> file
Execution halted
