
R Under development (unstable) (2017-08-10 r73083) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "OpenCL"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('OpenCL')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("clFloat")
> ### * clFloat
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: clFloat
> ### Title: clFloat represents a single-precision vector that can be used
> ###   with OpenCL.
> ### Aliases: clFloat as.clFloat is.clFloat as.double.clFloat
> ###   as.integer.clFloat as.character.clFloat print.clFloat length.clFloat
> ###   length<-.clFloat [.clFloat [<-.clFloat
> ### Keywords: interface
> 
> ### ** Examples
> 
> x <- clFloat(1:10/2)
> print(x)
 Object of class clFloat:
 [1] 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0
> length(x)
[1] 10
> as.double(x)
 [1] 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0
> as.character(x)
 [1] "0.5" "1"   "1.5" "2"   "2.5" "3"   "3.5" "4"   "4.5" "5"  
> as.integer(x)
 [1] 0 1 1 2 2 3 3 4 4 5
> is.clFloat(x)
[1] TRUE
> identical(x, as.clFloat(as.numeric(x)))
[1] TRUE
> x[1:5]
 Object of class clFloat:
[1] 0.5 1.0 1.5 2.0 2.5
> x[1] <- 0
> 
> ## clFloat is the return type of oclRun(..., native.result=TRUE)
> ## for single-precision kernels. It can also be used instead of
> ## numeric vectors in such kernels to avoid conversions.
> ## See oclRun() examples.
> 
> 
> 
> cleanEx()
> nameEx("oclDevices")
> ### * oclDevices
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oclDevices
> ### Title: Get a list of OpenCL devices.
> ### Aliases: oclDevices
> ### Keywords: interface
> 
> ### ** Examples
> 
> p <- oclPlatforms()
Error in oclPlatforms() : clGetPlatformIDs failed
Execution halted
