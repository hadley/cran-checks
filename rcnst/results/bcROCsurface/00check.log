* using log directory ‘/home/tomas/cran/rcnst/check/bcROCsurface.Rcheck’
* using R Under development (unstable) (2017-08-15 r73096)
* using platform: x86_64-pc-linux-gnu (64-bit)
* using session charset: UTF-8
* checking for file ‘bcROCsurface/DESCRIPTION’ ... OK
* this is package ‘bcROCsurface’ version ‘1.0-2’
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘bcROCsurface’ can be installed ... WARNING
Found the following significant warnings:
  Warning: 'rgl_init' failed, running with rgl.useNULL = TRUE
See ‘/home/tomas/cran/rcnst/check/bcROCsurface.Rcheck/00install.out’ for details.
* checking package directory ... OK
* checking ‘build’ directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... OK
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for GNU extensions in Makefiles ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking compiled code ... NOTE
Note: information on .o files is not available
* checking installed files from ‘inst/doc’ ... OK
* checking files in ‘vignettes’ ... OK
* checking examples ... ERROR
Running examples in ‘bcROCsurface-Ex.R’ failed
The error most likely occurred in:

> ### Name: ROCsurface
> ### Title: Receiver operating characteristics surface for a continuous
> ###   diagnostic test
> ### Aliases: ROCsurface ROCs.tcf ROCs ROCs
> 
> ### ** Examples
> 
> data(EOC)
> head(EOC)
  D.full V  D        CA125       CA153 Age
1      3 1  3  3.304971965  1.42822875  41
2      1 0 NA  0.112479444  0.11665310  52
3      2 1  2  2.375011262 -0.04096794  50
4      1 0 NA -0.001545381  0.32111633  66
5      1 0 NA  0.278200345 -0.14283052  52
6      2 0 NA  0.167645382  0.81470563  50
> 
> ## Not run: 
> ##D # FULL data estimator
> ##D Dfull <- preDATA(EOC$D.full, EOC$CA125)
> ##D Dvec.full <- Dfull$Dvec
> ##D ROCs("full", T = EOC$CA125, Dvec = Dvec.full, , ncp = 30, ellipsoid = TRUE,
> ##D      cpst = c(-0.56, 2.31))
> ## End(Not run)
> 
> # Preparing the missing disease status
> Dna <- preDATA(EOC$D, EOC$CA125)
There are missing disease status.
The sample means of diagostic test based on three classes.
( 1 ) 1 : 0.555 
( 2 ) 2 : 2.112 
( 3 ) 3 : 3.347 
The sample median of diagostic test based on three classes.
( 1 ) 1 : 0.286 
( 2 ) 2 : 1.972 
( 3 ) 3 : 3.439 
The ordering based on median: 1 < 2 < 3  
> Dvec.na <- Dna$Dvec
> Dfact.na <- Dna$D
> 
> # FI estimator
> rho.out <- rhoMLogit(Dfact.na ~ CA125 + CA153 + Age, data = EOC, test = TRUE)
====================================================================
The p-value calculation for the regression coefficients:
                    1         2
(Intercept) 1.708e-05 0.0008529
CA125       1.303e-08 0.0417717
CA153       6.543e-02 0.0216723
Age         1.635e-03 0.0031442
====================================================================
> ROCs("fi", T = EOC$CA125, Dvec = Dvec.na, V = EOC$V, rhoEst = rho.out, ncp = 30)
Hmm, look likes the incomplete data
Number of observation: 278 
64% of the subjects receive disease verification. 
You required estimate ROC surface using FI approach 
The diagnostic test: CA125 
Processing .... 
Warning in rgl.open(useNULL) : RGL: no suitable visual available

 *** caught segfault ***
address (nil), cause 'memory not mapped'

Traceback:
 1: rgl.open(useNULL)
 2: open3d()
 3: ROCs("fi", T = EOC$CA125, Dvec = Dvec.na, V = EOC$V, rhoEst = rho.out,     ncp = 30)
An irrecoverable exception occurred. R is aborting now ...
Segmentation fault (core dumped)
* checking for unstated dependencies in vignettes ... OK
* checking package vignettes in ‘inst/doc’ ... OK
* checking running R code from vignettes ... NONE
* checking re-building of vignette outputs ... WARNING
Error in re-building vignettes:
  ...
 6: withVisible(eval(expr, envir, enclos))
 7: withCallingHandlers(withVisible(eval(expr, envir, enclos)), warning = wHandler,     error = eHandler, message = mHandler)
 8: handle(ev <- withCallingHandlers(withVisible(eval(expr, envir,     enclos)), warning = wHandler, error = eHandler, message = mHandler))
 9: timing_fn(handle(ev <- withCallingHandlers(withVisible(eval(expr,     envir, enclos)), warning = wHandler, error = eHandler, message = mHandler)))
10: evaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos,     debug = debug, last = i == length(out), use_try = stop_on_error !=         2L, keep_warning = keep_warning, keep_message = keep_message,     output_handler = output_handler, include_timing = include_timing)
11: evaluate(code, envir = env, new_device = FALSE, keep_warning = !isFALSE(options$warning),     keep_message = !isFALSE(options$message), stop_on_error = if (options$error &&         options$include) 0L else 2L, output_handler = knit_handlers(options$render,         options))
12: in_dir(input_dir(), evaluate(code, envir = env, new_device = FALSE,     keep_warning = !isFALSE(options$warning), keep_message = !isFALSE(options$message),     stop_on_error = if (options$error && options$include) 0L else 2L,     output_handler = knit_handlers(options$render, options)))
13: block_exec(params)
14: call_block(x)
15: process_group.block(group)
16: process_group(group)
17: withCallingHandlers(if (tangle) process_tangle(group) else process_group(group),     error = function(e) {        setwd(wd)        cat(res, sep = "\n", file = output %n% "")        message("Quitting from lines ", paste(current_lines(i),             collapse = "-"), " (", knit_concord$get("infile"),             ") ")    })
18: process_file(text, output)
19: knit(input, text = text, envir = envir, encoding = encoding,     quiet = quiet)
20: knit2html(..., force_v1 = TRUE)
21: (if (grepl("\\.[Rr]md$", file)) knit2html_v1 else if (grepl("\\.[Rr]rst$",     file)) knit2pandoc else knit)(file, encoding = encoding,     quiet = quiet, envir = globalenv())
22: vweave(...)
23: engine$weave(file, quiet = quiet, encoding = enc)
24: doTryCatch(return(expr), name, parentenv, handler)
25: tryCatchOne(expr, names, parentenv, handlers[[1L]])
26: tryCatchList(expr, classes, parentenv, handlers)
27: tryCatch({    engine$weave(file, quiet = quiet, encoding = enc)    setwd(startdir)    find_vignette_product(name, by = "weave", engine = engine)}, error = function(e) {    stop(gettextf("processing vignette '%s' failed with diagnostics:\n%s",         file, conditionMessage(e)), domain = NA, call. = FALSE)})
28: buildVignettes(dir = "/home/tomas/cran/rcnst/check/bcROCsurface.Rcheck/vign_test/bcROCsurface")
An irrecoverable exception occurred. R is aborting now ...
Segmentation fault (core dumped)

* checking PDF version of manual ... OK
* DONE
Status: 1 ERROR, 2 WARNINGs, 1 NOTE
