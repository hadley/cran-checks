
R Under development (unstable) (2017-08-14 r73093) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "RMark"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('RMark')
This is RMark 2.2.4
 Documentation available at http://www.phidot.org/software/mark/rmark/RMarkDocumentation.zip

Warning: Software mark not found in path.
         If you have mark executable, you will need to set MarkPath object to its location (e.g. MarkPath="C:/Users/Jeff Laake/Desktop"> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("Blackduck")
> ### * Blackduck
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Blackduck
> ### Title: Black duck known fate data
> ### Aliases: Blackduck
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(Blackduck)
> # Change BirdAge to numeric; starting with version 1.6.3 factor variables are
> # no longer allowed.  They can work as in this example but they can be misleading
> # and fail if the levels are non-numeric.  The real parameters will remain 
> # unchanged but the betas will be different.
> Blackduck$BirdAge=as.numeric(Blackduck$BirdAge)-1
> run.Blackduck=function()
+ {
+ #
+ # Process data
+ #
+ bduck.processed=process.data(Blackduck,model="Known")
+ #
+ # Create default design data
+ #
+ bduck.ddl=make.design.data(bduck.processed)
+ #
+ #  Add occasion specific data min < 0; I have no idea what it is
+ #
+ bduck.ddl$S$min=c(4,6,7,7,7,6,5,5)
+ #
+ #  Define range of models for S
+ #
+ S.dot=list(formula=~1)
+ S.time=list(formula=~time)
+ S.min=list(formula=~min)
+ S.BirdAge=list(formula=~BirdAge)
+ #
+ # Note that in the following model in the MARK example, the covariates
+ # have been standardized.  That means that the beta parameters will be different
+ # for BirdAge, Weight and their interaction but the likelihood and real parameter
+ # estimates are the same.
+ #
+ S.BirdAgexWeight.min=list(formula=~min+BirdAge*Weight)
+ S.BirdAge.Weight=list(formula=~BirdAge+Weight)
+ #
+ # Create model list and run assortment of models
+ #
+ model.list=create.model.list("Known")
+ bduck.results=mark.wrapper(model.list,data=bduck.processed,ddl=bduck.ddl,
+                invisible=FALSE,threads=1)
+ 
+ #
+ # Return model table and list of models
+ #
+ return(bduck.results)
+ }
> bduck.results=run.Blackduck()

S.BirdAge

sh: 1: mark: not found
Error in run.mark.model(model, invisible = invisible, adjust = adjust,  : 
  
Output file does not exist. Unable to find or run mark.exe


S.BirdAge.Weight

sh: 1: mark: not found
Error in run.mark.model(model, invisible = invisible, adjust = adjust,  : 
  
Output file does not exist. Unable to find or run mark.exe


S.BirdAgexWeight.min

sh: 1: mark: not found
Error in run.mark.model(model, invisible = invisible, adjust = adjust,  : 
  
Output file does not exist. Unable to find or run mark.exe


S.dot

sh: 1: mark: not found
Error in run.mark.model(model, invisible = invisible, adjust = adjust,  : 
  
Output file does not exist. Unable to find or run mark.exe


S.min

sh: 1: mark: not found
Error in run.mark.model(model, invisible = invisible, adjust = adjust,  : 
  
Output file does not exist. Unable to find or run mark.exe


S.time

sh: 1: mark: not found
Error in run.mark.model(model, invisible = invisible, adjust = adjust,  : 
  
Output file does not exist. Unable to find or run mark.exe


No mark models found

Error in collect.models() : 
Calls: run.Blackduck -> mark.wrapper -> collect.models
Execution halted
