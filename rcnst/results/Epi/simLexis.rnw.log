
> options(width = 90)

> library(Epi)

Attaching package: ‘Epi’

The following object is masked from ‘package:base’:

    merge.data.frame


> print(sessionInfo(), l = F)
R Under development (unstable) (2017-08-14 r73093)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 17.04

Matrix products: default
BLAS: /home/tomas/cran/rcnst/build/lib/libRblas.so
LAPACK: /home/tomas/cran/rcnst/build/lib/libRlapack.so

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] Epi_2.19

loaded via a namespace (and not attached):
 [1] cmprsk_2.2-7      zoo_1.8-0         MASS_7.3-47       compiler_3.5.0   
 [5] Matrix_1.2-10     plyr_1.8.4        parallel_3.5.0    tools_3.5.0      
 [9] survival_2.41-3   etm_0.6-2         Rcpp_0.12.12      splines_3.5.0    
[13] grid_3.5.0        numDeriv_2016.8-1 lattice_0.20-35  

> data(DMlate)

> dml <- Lexis(entry = list(Per = dodm, Age = dodm - 
+     dobth, DMdur = 0), exit = list(Per = dox), exit.status = factor(!is.na(dodth), 
+     labe .... [TRUNCATED] 
NOTE: entry.status has been set to "DM" for all.
Warning in Lexis(entry = list(Per = dodm, Age = dodm - dobth, DMdur = 0),  :
  Dropping 4 rows with duration of follow up < tol


> dmi <- cutLexis(dml, cut = dml$doins, pre = "DM", 
+     new.state = "Ins", new.scale = "t.Ins", split.states = TRUE)

> summary(dmi)
     
Transitions:
     To
From    DM  Ins Dead Dead(Ins)  Records:  Events: Risk time:  Persons:
  DM  6157 1694 2048         0      9899     3742   45885.49      9899
  Ins    0 1340    0       451      1791      451    8387.77      1791
  Sum 6157 3034 2048       451     11690     4193   54273.27      9996

> str(dmi)
Classes ‘Lexis’ and 'data.frame':	11690 obs. of  15 variables:
 $ Per    : num  1999 2003 2005 2009 2009 ...
 $ Age    : num  58.7 64.1 86.3 44 75.8 ...
 $ DMdur  : num  0 0 0 0 0 0 0 0 0 0 ...
 $ t.Ins  : num  NA NA NA NA NA NA NA NA NA NA ...
 $ lex.dur: num  11.08 6.689 5.446 0.736 1.344 ...
 $ lex.Cst: Factor w/ 4 levels "DM","Ins","Dead",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ lex.Xst: Factor w/ 4 levels "DM","Ins","Dead",..: 1 1 1 1 1 3 1 1 3 1 ...
 $ lex.id : int  1 2 3 4 5 6 7 8 9 10 ...
 $ sex    : Factor w/ 2 levels "M","F": 2 1 2 2 1 2 1 1 2 1 ...
 $ dobth  : num  1940 1939 1918 1965 1933 ...
 $ dodm   : num  1999 2003 2005 2009 2009 ...
 $ dodth  : num  NA NA NA NA NA ...
 $ dooad  : num  NA 2007 NA NA NA ...
 $ doins  : num  NA NA NA NA NA NA NA NA NA NA ...
 $ dox    : num  2010 2010 2010 2010 2010 ...
 - attr(*, "time.scales")= chr  "Per" "Age" "DMdur" "t.Ins"
 - attr(*, "time.since")= chr  "" "" "" "Ins"
 - attr(*, "breaks")=List of 4
  ..$ Per  : NULL
  ..$ Age  : NULL
  ..$ DMdur: NULL
  ..$ t.Ins: NULL

> boxes(dmi, boxpos = list(x = c(20, 20, 80, 80), y = c(80, 
+     20, 80, 20)), scale.R = 1000, show.BE = TRUE)

> Si <- splitLexis(dmi, 0:30/2, "DMdur")

> dim(Si)
[1] 115370     15

> print(subset(Si, lex.id == 97)[, 1:10], digits = 6)
     lex.id     Per     Age   DMdur    t.Ins   lex.dur lex.Cst   lex.Xst sex   dobth
1105     97 1997.55 58.9268 0.00000       NA 0.5000000      DM        DM   F 1938.62
1106     97 1998.05 59.4268 0.50000       NA 0.5000000      DM        DM   F 1938.62
1107     97 1998.55 59.9268 1.00000       NA 0.5000000      DM        DM   F 1938.62
1108     97 1999.05 60.4268 1.50000       NA 0.5000000      DM        DM   F 1938.62
1109     97 1999.55 60.9268 2.00000       NA 0.1793292      DM       Ins   F 1938.62
1110     97 1999.72 61.1061 2.17933 0.000000 0.3206708     Ins       Ins   F 1938.62
1111     97 2000.05 61.4268 2.50000 0.320671 0.5000000     Ins       Ins   F 1938.62
1112     97 2000.55 61.9268 3.00000 0.820671 0.0116359     Ins Dead(Ins)   F 1938.62

> nk <- 5

> (ai.kn <- with(subset(Si, lex.Xst == "Ins" & lex.Cst != 
+     lex.Xst), quantile(Age + lex.dur, probs = (1:nk - 0.5)/nk)))
     10%      30%      50%      70%      90% 
23.23751 48.82218 58.63244 67.79028 78.88542 

> (ad.kn <- with(subset(Si, lex.Xst == "Dead"), quantile(Age + 
+     lex.dur, probs = (1:nk - 0.5)/nk)))
     10%      30%      50%      70%      90% 
61.91951 72.52731 78.43121 83.32348 90.15195 

> (di.kn <- with(subset(Si, lex.Xst == "Ins" & lex.Cst != 
+     lex.Xst), c(0, quantile(DMdur + lex.dur, probs = (1:(nk - 
+     1))/nk))))
                  20%        40%        60%        80% 
0.00000000 0.06570842 0.45448323 3.28761123 6.63764545 

> (dd.kn <- with(subset(Si, lex.Xst == "Dead"), c(0, 
+     quantile(DMdur + lex.dur, probs = (1:(nk - 1))/nk))))
                20%       40%       60%       80% 
0.0000000 0.7687885 2.1327858 4.0465435 6.5232033 

> (ti.kn <- with(subset(Si, lex.Xst == "Dead(Ins)"), 
+     c(0, quantile(t.Ins + lex.dur, probs = (1:(nk - 1))/nk))))
                20%       40%       60%       80% 
0.0000000 0.3093771 1.1307324 2.5489391 4.9117043 

> library(splines)

> DM.Ins <- glm((lex.Xst == "Ins") ~ Ns(Age, knots = ai.kn) + 
+     Ns(DMdur, knots = di.kn) + I(Per - 2000) + sex, family = poisson, 
+     offset = .... [TRUNCATED] 

> DM.Dead <- glm((lex.Xst == "Dead") ~ Ns(Age, knots = ad.kn) + 
+     Ns(DMdur, knots = dd.kn) + I(Per - 2000) + sex, family = poisson, 
+     offset .... [TRUNCATED] 

> Ins.Dead <- glm((lex.Xst == "Dead(Ins)") ~ Ns(Age, 
+     knots = ad.kn) + Ns(DMdur, knots = dd.kn) + Ns(t.Ins, knots = ti.kn) + 
+     I(Per - 2000 .... [TRUNCATED] 

> with(Si, table(lex.Cst))
lex.Cst
       DM       Ins      Dead Dead(Ins) 
    97039     18331         0         0 

> All.Dead <- glm((lex.Xst %in% c("Dead(Ins)", "Dead")) ~ 
+     Ns(Age, knots = ad.kn) + Ns(DMdur, knots = dd.kn) + lex.Cst + 
+         I(Per - 2000 .... [TRUNCATED] 

> round(ci.exp(All.Dead), 3)
                          exp(Est.)   2.5%  97.5%
(Intercept)                   0.049  0.043  0.056
Ns(Age, knots = ad.kn)1       4.120  3.479  4.879
Ns(Age, knots = ad.kn)2       4.652  4.054  5.338
Ns(Age, knots = ad.kn)3      15.460 13.575 17.608
Ns(Age, knots = ad.kn)4       7.529  6.711  8.447
Ns(DMdur, knots = dd.kn)1     0.520  0.429  0.629
Ns(DMdur, knots = dd.kn)2     0.707  0.622  0.803
Ns(DMdur, knots = dd.kn)3     0.319  0.238  0.428
Ns(DMdur, knots = dd.kn)4     0.829  0.742  0.926
lex.CstIns                    2.168  1.946  2.414
I(Per - 2000)                 0.965  0.954  0.977
sexF                          0.665  0.614  0.720

> what <- c("null.deviance", "df.null", "deviance", 
+     "df.residual")

> (rD <- unlist(DM.Dead[what]))
null.deviance       df.null      deviance   df.residual 
     19957.95      97038.00      17849.90      97028.00 

> (rI <- unlist(Ins.Dead[what]))
null.deviance       df.null      deviance   df.residual 
     4329.880     18330.000      3674.067     18316.000 

> (rA <- unlist(All.Dead[what]))
null.deviance       df.null      deviance   df.residual 
     24300.15     115369.00      21608.79     115358.00 

> round(c(dd <- rA - (rI + rD), pVal = 1 - pchisq(dd[3], 
+     dd[4] + 1)), 3)
null.deviance       df.null      deviance   df.residual pVal.deviance 
       12.314         1.000        84.822        14.000         0.000 

> pr.rates <- NArray(list(DMdur = seq(0, 12, 0.1), DMage = 4:7 * 
+     10, r.Ins = c(NA, 0, 2, 5), model = c("DM/Ins", "All"), what = c("rate", 
+    .... [TRUNCATED] 

> str(pr.rates)
 logi [1:121, 1:4, 1:4, 1:2, 1:3] NA NA NA NA NA NA ...
 - attr(*, "dimnames")=List of 5
  ..$ DMdur: chr [1:121] "0" "0.1" "0.2" "0.3" ...
  ..$ DMage: chr [1:4] "40" "50" "60" "70"
  ..$ r.Ins: chr [1:4] NA "0" "2" "5"
  ..$ model: chr [1:2] "DM/Ins" "All"
  ..$ what : chr [1:3] "rate" "lo" "hi"

> ci.pred
function (obj, newdata, Exp = NULL, alpha = 0.05) 
{
    if (!inherits(obj, "glm")) 
        stop("Not usable for non-glm objects")
    zz <- predict(obj, newdata = newdata, se.fit = TRUE, type = "link")
    zz <- cbind(zz$fit, zz$se.fit) %*% ci.mat(alpha = alpha)
    if (missing(Exp)) {
        return(obj$family$linkinv(zz))
    }
    else {
        if (Exp) {
            return(exp(zz))
        }
        else if (!Exp) 
            return(zz)
    }
}
<bytecode: 0x562a52dcaa28>
<environment: namespace:Epi>

> nd <- data.frame(DMdur = as.numeric(dimnames(pr.rates)[[1]]), 
+     lex.Cst = factor(1, levels = 1:4, labels = levels(Si$lex.Cst)), 
+     sex = fa .... [TRUNCATED] 

> for (ia in dimnames(pr.rates)[[2]]) {
+     dnew <- transform(nd, Age = as.numeric(ia) + DMdur, Per = 1998 + 
+         DMdur)
+     pr.rates[, ia,  .... [TRUNCATED] 

> par(mar = c(3, 3, 1, 1), mgp = c(3, 1, 0)/1.6, las = 1)

> plot(NA, xlim = c(40, 82), ylim = c(5, 300), bty = "n", 
+     log = "y", xlab = "Age", ylab = "Mortality rate per 1000 PY")

> abline(v = seq(40, 80, 5), h = outer(1:9, 10^(0:2), 
+     "*"), col = gray(0.8))

> for (aa in 4:7 * 10) for (ii in 1:4) matlines(aa + 
+     as.numeric(dimnames(pr.rates)[[1]]), cbind(pr.rates[, paste(aa), 
+     ii, "DM/Ins", ], p .... [TRUNCATED] 

> Tr <- list(DM = list(Ins = DM.Ins, Dead = DM.Dead), 
+     Ins = list(`Dead(Ins)` = Ins.Dead))

> str(Si[NULL, 1:9])
Classes ‘Lexis’ and 'data.frame':	0 obs. of  9 variables:
 $ lex.id : int 
 $ Per    : num 
 $ Age    : num 
 $ DMdur  : num 
 $ t.Ins  : num 
 $ lex.dur: num 
 $ lex.Cst: Factor w/ 4 levels "DM","Ins","Dead",..: 
 $ lex.Xst: Factor w/ 4 levels "DM","Ins","Dead",..: 
 $ sex    : Factor w/ 2 levels "M","F": 
 - attr(*, "time.scales")= chr  "Per" "Age" "DMdur" "t.Ins"
 - attr(*, "time.since")= chr  "" "" "" "Ins"
 - attr(*, "breaks")=List of 4
  ..$ Per  : NULL
  ..$ Age  : NULL
  ..$ DMdur: num  0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 ...
  ..$ t.Ins: NULL

> ini <- subset(Si, FALSE, select = 1:9)

> str(ini)
Classes ‘Lexis’ and 'data.frame':	0 obs. of  9 variables:
 $ lex.id : int 
 $ Per    : num 
 $ Age    : num 
 $ DMdur  : num 
 $ t.Ins  : num 
 $ lex.dur: num 
 $ lex.Cst: Factor w/ 4 levels "DM","Ins","Dead",..: 
 $ lex.Xst: Factor w/ 4 levels "DM","Ins","Dead",..: 
 $ sex    : Factor w/ 2 levels "M","F": 
 - attr(*, "time.scales")= chr  "Per" "Age" "DMdur" "t.Ins"
 - attr(*, "time.since")= chr  "" "" "" "Ins"
 - attr(*, "breaks")=List of 4
  ..$ Per  : NULL
  ..$ Age  : NULL
  ..$ DMdur: num  0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 ...
  ..$ t.Ins: NULL

> ini <- subset(Si, select = 1:9)[NULL, ]

> str(ini)
Classes ‘Lexis’ and 'data.frame':	0 obs. of  9 variables:
 $ lex.id : int 
 $ Per    : num 
 $ Age    : num 
 $ DMdur  : num 
 $ t.Ins  : num 
 $ lex.dur: num 
 $ lex.Cst: Factor w/ 4 levels "DM","Ins","Dead",..: 
 $ lex.Xst: Factor w/ 4 levels "DM","Ins","Dead",..: 
 $ sex    : Factor w/ 2 levels "M","F": 
 - attr(*, "time.scales")= chr  "Per" "Age" "DMdur" "t.Ins"
 - attr(*, "time.since")= chr  "" "" "" "Ins"
 - attr(*, "breaks")=List of 4
  ..$ Per  : NULL
  ..$ Age  : NULL
  ..$ DMdur: num  0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 ...
  ..$ t.Ins: NULL

> ini[1:2, "lex.id"] <- 1:2

> ini[1:2, "lex.Cst"] <- "DM"

> ini[1:2, "Per"] <- 1995

> ini[1:2, "Age"] <- 60

> ini[1:2, "DMdur"] <- 5

> ini[1:2, "sex"] <- c("M", "F")

> ini
  lex.id  Per Age DMdur t.Ins lex.dur lex.Cst lex.Xst sex
1      1 1995  60     5    NA      NA      DM    <NA>   M
2      2 1995  60     5    NA      NA      DM    <NA>   F

> set.seed(52381764)

> Nsim <- 1000

> system.time(simL <- simLexis(Tr, ini, t.range = 12, 
+     N = Nsim))
   user  system elapsed 
 10.708   0.072  10.805 

> summary(simL, by = "sex")
$M
     
Transitions:
     To
From   DM Ins Dead Dead(Ins)  Records:  Events: Risk time:  Persons:
  DM  291 400  309         0      1000      709    7414.21      1000
  Ins   0 269    0       131       400      131    2161.43       400
  Sum 291 669  309       131      1400      840    9575.64      1000

$F
     
Transitions:
     To
From   DM Ins Dead Dead(Ins)  Records:  Events: Risk time:  Persons:
  DM  416 358  226         0      1000      584    8507.18      1000
  Ins   0 285    0        73       358       73    1807.59       358
  Sum 416 643  226        73      1358      657   10314.77      1000


> Tr.p <- list(DM = list(Ins = DM.Ins, Dead = All.Dead), 
+     Ins = list(`Dead(Ins)` = All.Dead))

> system.time(simP <- simLexis(Tr.p, ini, t.range = 12, 
+     N = Nsim))
   user  system elapsed 
 11.872   0.084  11.960 

> summary(simP, by = "sex")
$M
     
Transitions:
     To
From   DM Ins Dead Dead(Ins)  Records:  Events: Risk time:  Persons:
  DM  307 425  268         0      1000      693    7491.30      1000
  Ins   0 235    0       190       425      190    2002.44       425
  Sum 307 660  268       190      1425      883    9493.73      1000

$F
     
Transitions:
     To
From   DM Ins Dead Dead(Ins)  Records:  Events: Risk time:  Persons:
  DM  419 376  205         0      1000      581    8480.93      1000
  Ins   0 259    0       117       376      117    1897.21       376
  Sum 419 635  205       117      1376      698   10378.14      1000


> library(survival)

> Cox.Dead <- coxph(Surv(DMdur, DMdur + lex.dur, lex.Xst %in% 
+     c("Dead(Ins)", "Dead")) ~ Ns(Age - DMdur, knots = ad.kn) + 
+     I(lex.Cst == "I ..." ... [TRUNCATED] 
Warning in coxph(Surv(DMdur, DMdur + lex.dur, lex.Xst %in% c("Dead(Ins)",  :
  a variable appears on both the left and right sides of the formula

> round(ci.exp(Cox.Dead), 3)
                                exp(Est.)   2.5%  97.5%
Ns(Age - DMdur, knots = ad.kn)1     4.172  3.535  4.924
Ns(Age - DMdur, knots = ad.kn)2     4.503  3.825  5.301
Ns(Age - DMdur, knots = ad.kn)3    16.077 14.087 18.348
Ns(Age - DMdur, knots = ad.kn)4     7.479  6.500  8.605
I(lex.Cst == "Ins")TRUE             2.171  1.949  2.419
I(Per - 2000)                       0.965  0.954  0.977
sexF                                0.667  0.616  0.723

> round(ci.exp(All.Dead), 3)
                          exp(Est.)   2.5%  97.5%
(Intercept)                   0.049  0.043  0.056
Ns(Age, knots = ad.kn)1       4.120  3.479  4.879
Ns(Age, knots = ad.kn)2       4.652  4.054  5.338
Ns(Age, knots = ad.kn)3      15.460 13.575 17.608
Ns(Age, knots = ad.kn)4       7.529  6.711  8.447
Ns(DMdur, knots = dd.kn)1     0.520  0.429  0.629
Ns(DMdur, knots = dd.kn)2     0.707  0.622  0.803
Ns(DMdur, knots = dd.kn)3     0.319  0.238  0.428
Ns(DMdur, knots = dd.kn)4     0.829  0.742  0.926
lex.CstIns                    2.168  1.946  2.414
I(Per - 2000)                 0.965  0.954  0.977
sexF                          0.665  0.614  0.720

> Tr.c <- list(DM = list(Ins = Tr$DM$Ins, Dead = Cox.Dead), 
+     Ins = list(`Dead(Ins)` = Cox.Dead))

> system.time(simC <- simLexis(Tr.c, ini, t.range = 12, 
+     N = Nsim))
   user  system elapsed 
 14.912   0.060  15.004 

> summary(simC, by = "sex")
$M
     
Transitions:
     To
From   DM Ins Dead Dead(Ins)  Records:  Events: Risk time:  Persons:
  DM  334 378  288         0      1000      666    7471.19      1000
  Ins   0 260    0       118       378      118    1851.35       378
  Sum 334 638  288       118      1378      784    9322.54      1000

$F
     
Transitions:
     To
From   DM Ins Dead Dead(Ins)  Records:  Events: Risk time:  Persons:
  DM  468 356  176         0      1000      532    8570.58      1000
  Ins   0 277    0        79       356       79    1816.50       356
  Sum 468 633  176        79      1356      611   10387.08      1000


> system.time(nSt <- nState(subset(simL, sex == "M"), 
+     at = seq(0, 11, 0.2), from = 1995, time.scale = "Per"))
   user  system elapsed 
  0.248   0.000   0.246 

> nSt[1:10, ]
        State
when       DM  Ins Dead Dead(Ins)
  1995   1000    0    0         0
  1995.2  991    8    1         0
  1995.4  972   18   10         0
  1995.6  948   33   19         0
  1995.8  936   40   24         0
  1996    917   47   35         1
  1996.2  899   56   43         2
  1996.4  884   66   48         2
  1996.6  872   75   51         2
  1996.8  859   82   57         2

> pM <- pState(nSt, perm = c(1, 2, 4, 3))

> head(pM)
        State
when        DM   Ins Dead(Ins) Dead
  1995   1.000 1.000     1.000    1
  1995.2 0.991 0.999     0.999    1
  1995.4 0.972 0.990     0.990    1
  1995.6 0.948 0.981     0.981    1
  1995.8 0.936 0.976     0.976    1
  1996   0.917 0.964     0.965    1

> par(mfrow = c(1, 2), mar = c(3, 3, 1, 1), mgp = c(3, 
+     1, 0)/1.6)

> plot(pM)

> plot(pM, border = "black", col = "transparent", lwd = 3)

> text(rep(as.numeric(rownames(pM)[nrow(pM) - 1]), ncol(pM)), 
+     pM[nrow(pM), ] - diff(c(0, pM[nrow(pM), ]))/5, colnames(pM), 
+     adj = 1)

> box(col = "white", lwd = 3)

> box()

> clr <- c("limegreen", "orange")

> clx <- c(clr, rgb(t(col2rgb(clr[2:1]) * 2 + rep(255, 
+     3))/3, max = 255))

> par(mfrow = c(1, 2), las = 1, mar = c(3, 3, 4, 2), 
+     mgp = c(3, 1, 0)/1.6)

> plot(pM, col = clx)

> lines(as.numeric(rownames(pM)), pM[, 2], lwd = 3)

> mtext("60 year old male, diagnosed 1990, aged 55", 
+     side = 3, line = 2.5, adj = 0, col = gray(0.6))

> mtext("Survival curve", side = 3, line = 1.5, adj = 0)

> mtext("DM, no insulin   DM, Insulin", side = 3, line = 0.5, 
+     adj = 0, col = clr[1])

> mtext("DM, no insulin", side = 3, line = 0.5, adj = 0, 
+     col = clr[2])

> axis(side = 4)

> axis(side = 4, at = 1:19/20, labels = FALSE)

> axis(side = 4, at = 1:99/100, labels = FALSE, tcl = -0.3)

> pF <- pState(nState(subset(simL, sex == "F"), at = seq(0, 
+     11, 0.2), from = 1995, time.scale = "Per"), perm = c(1, 2, 
+     4, 3))

> plot(pF, col = clx)

> lines(as.numeric(rownames(pF)), pF[, 2], lwd = 3)

> mtext("60 year old female, diagnosed 1990, aged 55", 
+     side = 3, line = 2.5, adj = 0, col = gray(0.6))

> mtext("Survival curve", side = 3, line = 1.5, adj = 0)

> mtext("DM, no insulin   DM, Insulin", side = 3, line = 0.5, 
+     adj = 0, col = clr[1])

> mtext("DM, no insulin", side = 3, line = 0.5, adj = 0, 
+     col = clr[2])

> axis(side = 4)

> axis(side = 4, at = 1:19/20, labels = FALSE)

> axis(side = 4, at = 1:99/100, labels = FALSE, tcl = -0.3)

> par(mfrow = c(1, 2), las = 1, mar = c(3, 3, 4, 2), 
+     mgp = c(3, 1, 0)/1.6)

> pM <- pState(nState(subset(simL, sex == "M"), at = seq(0, 
+     11, 0.2), from = 60, time.scale = "Age"), perm = c(1, 2, 
+     4, 3))

> plot(pM, col = clx, xlab = "Age")

> lines(as.numeric(rownames(pM)), pM[, 2], lwd = 3)

> mtext("60 year old male, diagnosed 1990, aged 55", 
+     side = 3, line = 2.5, adj = 0, col = gray(0.6))

> mtext("Survival curve", side = 3, line = 1.5, adj = 0)

> mtext("DM, no insulin   DM, Insulin", side = 3, line = 0.5, 
+     adj = 0, col = clr[1])

> mtext("DM, no insulin", side = 3, line = 0.5, adj = 0, 
+     col = clr[2])

> axis(side = 4)

> axis(side = 4, at = 1:19/20, labels = FALSE)

> axis(side = 4, at = 1:19/20, labels = FALSE, tcl = -0.4)

> axis(side = 4, at = 1:99/100, labels = FALSE, tcl = -0.3)

> pF <- pState(nState(subset(simL, sex == "F"), at = seq(0, 
+     11, 0.2), from = 60, time.scale = "Age"), perm = c(1, 2, 
+     4, 3))

> plot(pF, col = clx, xlab = "Age")

> lines(as.numeric(rownames(pF)), pF[, 2], lwd = 3)

> mtext("60 year old female, diagnosed 1990, aged 55", 
+     side = 3, line = 2.5, adj = 0, col = gray(0.6))

> mtext("Survival curve", side = 3, line = 1.5, adj = 0)

> mtext("DM, no insulin   DM, Insulin", side = 3, line = 0.5, 
+     adj = 0, col = clr[1])

> mtext("DM, no insulin", side = 3, line = 0.5, adj = 0, 
+     col = clr[2])

> axis(side = 4)

> axis(side = 4, at = 1:9/10, labels = FALSE)

> axis(side = 4, at = 1:19/20, labels = FALSE, tcl = -0.4)

> axis(side = 4, at = 1:99/100, labels = FALSE, tcl = -0.3)

> PrM <- pState(nState(subset(simP, sex == "M"), at = seq(0, 
+     11, 0.2), from = 60, time.scale = "Age"), perm = c(1, 2, 
+     4, 3))

> PrF <- pState(nState(subset(simP, sex == "F"), at = seq(0, 
+     11, 0.2), from = 60, time.scale = "Age"), perm = c(1, 2, 
+     4, 3))

> CoxM <- pState(nState(subset(simC, sex == "M"), at = seq(0, 
+     11, 0.2), from = 60, time.scale = "Age"), perm = c(1, 2, 
+     4, 3))

> CoxF <- pState(nState(subset(simC, sex == "F"), at = seq(0, 
+     11, 0.2), from = 60, time.scale = "Age"), perm = c(1, 2, 
+     4, 3))

> par(mfrow = c(1, 2), mar = c(3, 3, 1, 1), mgp = c(3, 
+     1, 0)/1.6)

> plot(pM, border = "black", col = "transparent", lwd = 3)

> lines(PrM, border = "blue", col = "transparent", lwd = 3)

> lines(CoxM, border = "red", col = "transparent", lwd = 3)

> text(60.5, 0.05, "M")

> box(lwd = 3)

> plot(pF, border = "black", col = "transparent", lwd = 3)

> lines(PrF, border = "blue", col = "transparent", lwd = 3)

> lines(CoxF, border = "red", col = "transparent", lwd = 3)

> text(60.5, 0.05, "F")

> box(lwd = 3)

> source("../R/simLexis.R", keep.source = TRUE)
Warning in file(filename, "r", encoding = encoding) :
  cannot open file '../R/simLexis.R': No such file or directory

  When sourcing ‘simLexis.R’:
Error: cannot open the connection
Execution halted
