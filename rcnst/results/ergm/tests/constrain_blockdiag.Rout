
R Under development (unstable) (2017-08-15 r73096) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #  File tests/constrain_blockdiag.R in package ergm, part of the Statnet suite
> #  of packages for network analysis, http://statnet.org .
> #
> #  This software is distributed under the GPL-3 license.  It is free,
> #  open source, and has the attribution requirements (GPL Section 7) at
> #  http://statnet.org/attribution
> #
> #  Copyright 2003-2017 Statnet Commons
> #######################################################################
> 
> library(ergm)
Loading required package: statnet.common

Attaching package: 'statnet.common'

The following object is masked from 'package:base':

    order

Loading required package: network
network: Classes for Relational Data
Version 1.13.0 created on 2015-08-31.
copyright (c) 2005, Carter T. Butts, University of California-Irvine
                    Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Martina Morris, University of Washington
                    Skye Bender-deMoll, University of Washington
 For citation information, type citation("network").
 Type help("network-package") to get started.


ergm: version 3.7.1, created on 2017-03-20
Copyright (c) 2017, Mark S. Handcock, University of California -- Los Angeles
                    David R. Hunter, Penn State University
                    Carter T. Butts, University of California -- Irvine
                    Steven M. Goodreau, University of Washington
                    Pavel N. Krivitsky, University of Wollongong
                    Martina Morris, University of Washington
                    with contributions from
                    Li Wang
                    Kirk Li, University of Washington
                    Skye Bender-deMoll, University of Washington
Based on "statnet" project software (statnet.org).
For license and citation information see statnet.org/attribution
or type citation("ergm").

NOTE: Versions before 3.6.1 had a bug in the implementation of the bd()
constriant which distorted the sampled distribution somewhat. In
addition, Sampson's Monks datasets had mislabeled verteces. See the
NEWS and the documentation for more details.

> n <- 10
> m <- 7
> a <- rep(1:4,1:4)
> 
> M <- matrix(0,n,n)
> 
> for(i in unique(a)){
+   M[a==i,a==i]<-1
+ }
> diag(M)<-0
> 
> #### Directed ####
> 
> y0 <- network.initialize(n, directed=TRUE)
> y0 %v% "b" <- a
> 
> y <- simulate(y0~edges, coef=100, constraints=~blockdiag("b"), control=control.simulate.formula(MCMC.burnin=10000))
Warning message:
In 'simulate.formula': Autodetection of acceptable control parameter generators and of the calling function name has been deprecated and will be removed in a future version. They must be set explicitly. 
> 
> stopifnot(all(as.matrix(y)==M))
> 
> #### Undirected ####
> 
> y0 <- network.initialize(n, directed=FALSE)
> y0 %v% "b" <- a
> 
> y <- simulate(y0~edges, coef=100, constraints=~blockdiag("b"), control=control.simulate.formula(MCMC.burnin=10000))
> 
> stopifnot(all(as.matrix(y)==M))
> 
> #### Unobserved ####
> 
> y0 <- network.initialize(n, directed=TRUE)
> y0 %v% "b" <- a
> y0[2,3]<-NA
> y0[2,10]<-NA
> 
> y <- simulate(y0~edges, coef=100, constraints=~blockdiag("b")+observed, control=control.simulate.formula(MCMC.burnin=10000))
> 
> M[]<-0
> M[2,3]<-1
> 
> stopifnot(all(as.matrix(y)==M))
> 
> #### Bipartite ####
> 
> y0 <- network.initialize(n, directed=FALSE, bipartite=m)
> a <- unlist(split(a, rep(1:2, n/2)))
> a <- c(sort(a[1:m]), sort(a[-(1:m)]))
> y0 %v% "b" <- a
> 
> M <- matrix(0,m,n-m)
> 
> for(i in unique(a)){
+   M[a[1:m]==i,a[-(1:m)]==i]<-1
+ }
> 
> y <- simulate(y0~edges, coef=100, constraints=~blockdiag("b"), control=control.simulate.formula(MCMC.burnin=10000))
> 
> stopifnot(all(as.matrix(y)==M))
> 
> #### Bipartite Unobserved ####
> 
> y0 <- network.initialize(n, directed=FALSE, bipartite=m)
> y0 %v% "b" <- a
> y0[7,8]<-NA
> y0[6,9]<-NA
> 
> y <- simulate(y0~edges, coef=100, constraints=~blockdiag("b")+observed, control=control.simulate.formula(MCMC.burnin=10000))
> 
> M[]<-0
> M[6,2]<-1
> 
> stopifnot(all(as.matrix(y)==M))
> 
> proc.time()
   user  system elapsed 
 10.876   0.692  11.581 
