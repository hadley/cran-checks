
> options(prompt = "R> ", continue = "+ ", width = 70, 
+     useFancyQuotes = FALSE)

> library("HardyWeinberg")
Loading required package: mice

Attaching package: 'mice'

The following objects are masked from 'package:base':

    cbind, rbind

Loading required package: Rsolnp

> x <- c(MM = 298, MN = 489, NN = 213)

> HW.test <- HWChisq(x, verbose = TRUE)
Chi-square test with continuity correction for Hardy-Weinberg equilibrium (autosomal)
Chi2 =  0.1789563 DF =  1 p-value =  0.6722717 D =  -3.69375 f =  0.01488253 

> HW.test <- HWChisq(x, cc = 0, verbose = TRUE)
Chi-square test for Hardy-Weinberg equilibrium (autosomal)
Chi2 =  0.2214896 DF =  1 p-value =  0.6379073 D =  -3.69375 f =  0.01488253 

> HW.lrtest <- HWLratio(x, verbose = TRUE)
Likelihood ratio test for Hardy-Weinberg equilibrium
G2 = 0.2214663 DF = 1 p-value = 0.637925 

> HW.exacttest <- HWExact(x, verbose = TRUE)
Haldane Exact test for Hardy-Weinberg equilibrium (autosomal)
using SELOME p-value
sample counts: nMM =  298 nMN =  489 nNN =  213 
H0: HWE (D==0), H1: D <> 0 
D =  -3.69375 p-value =  0.6556635 

> set.seed(123)

> HW.permutationtest <- HWPerm(x, verbose = TRUE)
Permutation test for Hardy-Weinberg equilibrium
Observed statistic: 0.2214896   17000 permutations. p-value: 0.6551765 

> x <- c(MN = 489, NN = 213, MM = 298)

> HW.test <- HWChisq(x, verbose = TRUE)
Chi-square test with continuity correction for Hardy-Weinberg equilibrium (autosomal)
Chi2 =  0.1789563 DF =  1 p-value =  0.6722717 D =  -3.69375 f =  0.01488253 

> HW.results <- HWAlltests(x, verbose = TRUE, include.permutation.test = TRUE)
                                            Statistic   p-value
Chi-square test:                            0.2214896 0.6379073
Chi-square test with continuity correction: 0.1789563 0.6722717
Likelihood-ratio test:                      0.2214663 0.6379250
Exact test with selome p-value:                    NA 0.6556635
Exact test with dost p-value:                      NA 0.6723356
Exact test with mid p-value:                       NA 0.6330965
Permutation test:                           0.2214896 0.6422941

> data(Markers)

> Markers[1:12, ]
   SNP1   iG   iT SNP2 SNP3
1    TT  641 1037   AA   GG
2    GT 1207  957   AC   AG
3    TT 1058 1686   AA   GG
4    GG 1348  466   CC   AA
5    GT 1176  948   AC   AG
6    GG 1906  912   CC   AA
7    GG 1844  705   CC   AA
8    GG 2007  599   CC   AA
9    GT 1369 1018   AC   AG
10   GG 1936  953   CC   AA
11   GG 1952  632   AC   AG
12 <NA>  947  920   AC   AG

> Xt <- table(Markers[, 1])

> Xv <- as.vector(Xt)

> names(Xv) <- names(Xt)

> HW.test <- HWChisq(Xv, cc = 0, verbose = TRUE)
Chi-square test for Hardy-Weinberg equilibrium (autosomal)
Chi2 =  8.67309 DF =  1 p-value =  0.003229431 D =  -6.77551 f =  0.297491 

> set.seed(123)

> Results <- HWMissing(Markers[, 1], m = 50, method = "sample", 
+     verbose = TRUE)
Test for Hardy-Weinberg equilibrium in the presence of missing values
Inbreeding coefficient f =  0.2936 
95 % Confidence interval ( 0.1058 , 0.4813 )
p-value =  0.0022 
Relative increase in variance of f due to missings: r =  0.3351 
Fraction of missing information about f: lambda =  0.2529 

> set.seed(123)

> Results <- HWMissing(Markers[, 1:5], m = 50, verbose = TRUE)
Warning: Number of logged events: 1
Test for Hardy-Weinberg equilibrium in the presence of missing values
Inbreeding coefficient f =  0.0608 
95 % Confidence interval ( -0.1061 , 0.2278 )
p-value =  0.4751 
Relative increase in variance of f due to missings: r =  0.0596 
Fraction of missing information about f: lambda =  0.0564 

> set.seed(123)

> Results <- HWMissing(Markers[, 1:5], m = 50, statistic = "exact", 
+     verbose = TRUE)
Warning: Number of logged events: 1
Two-sided Exact test for Hardy-Weinberg equilibrium in the presence of missing values
 p-value =  0.4426941 

> data(JPTsnps)

> Results <- HWPosterior(JPTsnps[1, ], x.linked = FALSE, 
+     precision = 0.05)
  M_11   M_12   M_13   M_14   M_15   M_21   M_22   M_23   M_24   M_25 
0.6065 0.0061 0.0032 0.2595 0.0010 0.0675 0.0230 0.0246 0.0002 0.0084 
Best fitting M_11 0.606523 

> data(JPTsnps)

> AICs <- HWAIC(JPTsnps[1, 1:3], JPTsnps[1, 4:6])
Best fitting M_11 99.54001 

> AICs
     M_11      M_12      M_13      M_14      M_15      M_21      M_22 
 99.54001 100.81297 100.55911  99.83219 101.83219 101.51680 102.78852 
     M_23      M_24      M_25 
102.53483 101.83219 103.80656 

> SNP1 <- c(A = 399, B = 205, AA = 230, AB = 314, BB = 107)

> HWChisq(SNP1, cc = 0, x.linked = TRUE, verbose = TRUE)
Chi-square test for Hardy-Weinberg equilibrium (X-chromosomal)
Chi2 =  7.624175 DF = 2 p-value =  0.022102 D =  NA f =  -0.0003817242 

> HWChisq(SNP1[3:5], cc = 0)
Chi-square test for Hardy-Weinberg equilibrium (autosomal)
Chi2 =  9.485941e-05 DF =  1 p-value =  0.9922291 D =  0.05990783 f =  -0.0003817242 

> HWExact(SNP1, x.linked = TRUE)
Graffelman-Weir exact test for Hardy-Weinberg equilibrium on the X-chromosome
using SELOME p-value
Sample probability 5.682963e-05 p-value =  0.02085798 

> HWExact(SNP1, x.linked = TRUE, pvaluetype = "midp")
Graffelman-Weir exact test for Hardy-Weinberg equilibrium on the X-chromosome
using MID p-value
Sample probability 5.682963e-05 p-value =  0.02082957 

> HWExact(SNP1[3:5])
Haldane Exact test for Hardy-Weinberg equilibrium (autosomal)
using SELOME p-value
sample counts: nAA =  230 nAB =  314 nBB =  107 
H0: HWE (D==0), H1: D <> 0 
D =  0.05990783 p-value =  1 

> HWPerm(SNP1, x.linked = TRUE)
Permutation test for Hardy-Weinberg equilibrium of an X-linked marker
Observed statistic: 7.624175   17000 permutations. p-value: 0.02152941 

> HWLratio(SNP1, x.linked = TRUE)
Likelihood ratio test for Hardy-Weinberg equilibrium for an X-linked marker
G2 = 7.693436 DF = 2 p-value = 0.02134969 

> HWAlltests(SNP1, x.linked = TRUE, include.permutation.test = TRUE)
                                            Statistic    p-value
Chi-square test:                             7.624175 0.02210200
Chi-square test with continuity correction:  7.242011 0.02675576
Likelihood-ratio test:                       7.693436 0.02134969
Exact test with selome p-value:                    NA 0.02085798
Exact test with dost p-value:                      NA         NA
Exact test with mid p-value:                       NA 0.02082957
Permutation test:                            7.624175 0.02129412

> AFtest(SNP1)
Fisher Exact test for equality of allele frequencies for males and females.

Table of allele counts:
    A   B
M 399 205
F 774 528

Sample of 1255 indivduals with 1906 alleles. p-value = 0.006268363
> HWPosterior(SNP1, x.linked = TRUE)
Bayesian test for Hardy-Weinberg equilibrium of X-chromosomal variants.

                  Posterior_Prob log10(Bayes Factor)
M0 (HWE):                 0.3384              0.1859
M1 (f!=0):                0.0138             -1.3774
M2 (d!=1):                0.6222              0.6939
M3 (f!=0 & d!=1:)         0.0256             -1.1035

> x <- c(MM = 298, MN = 489, NN = 213)

> n <- sum(x)

> nM <- mac(x)

> pw4 <- HWPower(n, nM, alpha = 0.05, test = "exact", 
+     theta = 4, pvaluetype = "selome")

> print(pw4)
[1] 0.04822774

> pw8 <- HWPower(n, nM, alpha = 0.05, test = "exact", 
+     theta = 8, pvaluetype = "selome")

> print(pw8)
[1] 0.9996853

> set.seed(123)

> n <- 100

> m <- 100

> X1 <- HWData(m, n, p = rep(0.5, m))

> X2 <- HWData(m, n)

> X3 <- HWData(m, n, p = rep(0.5, m), f = rep(0.5, m))

> X4 <- HWData(m, n, f = rep(0.5, m))

> X5 <- HWData(m, n, p = rep(c(0.2, 0.4, 0.6, 0.8), 
+     25), pfixed = TRUE)

> X6 <- HWData(m, n, exactequilibrium = TRUE)

> opar <- par(mfrow = c(3, 2), mar = c(1, 0, 3, 0) + 
+     0.1)

> par(mfg = c(1, 1))

> HWTernaryPlot(X1, main = "(a)", vbounds = FALSE)

> par(mfg = c(1, 2))

> HWTernaryPlot(X2, main = "(b)", vbounds = FALSE)

> par(mfg = c(2, 1))

> HWTernaryPlot(X3, main = "(c)", vbounds = FALSE)

> par(mfg = c(2, 2))

> HWTernaryPlot(X4, main = "(d)", vbounds = FALSE)

> par(mfg = c(3, 1))

> HWTernaryPlot(X5, main = "(e)", vbounds = FALSE)

> par(mfg = c(3, 2))

> HWTernaryPlot(X6, main = "(f)", vbounds = FALSE)

> par(opar)

> x <- c(fA = 182, fB = 60, nAB = 17, nOO = 176)

> al.fre <- HWABO(x)
Iteration history:
          p          q         r          ll
0 0.3333333 0.33333333 0.3333333 -194.706389
1 0.2984674 0.11149425 0.5900383  -13.488684
2 0.2709650 0.09445916 0.6345758   -9.196185
3 0.2655411 0.09328308 0.6411759   -9.099231
4 0.2646231 0.09318236 0.6421945   -9.096756
5 0.2644732 0.09317075 0.6423560   -9.096691
6 0.2644490 0.09316911 0.6423819   -9.096690
              fA       fB     nAB     nOO
Observed 182.000 60.00000 17.0000 176.000
Expected 178.212 55.84582 21.4351 179.507
X2 =  1.375706 p-value =  0.2408339 

> x <- c(AA = 20, AB = 31, AC = 26, BB = 15, BC = 12, 
+     CC = 0)

> results <- HWTriExact(x)
Tri-allelic Exact test for HWE (autosomal).
Allele counts: A = 38 B = 73 C = 97 
sum probabilities all outcomes 1 
probability of the sample 0.0001122091 
p-value =  0.03370688 

> x <- c(AA = 20, AB = 31, AC = 26, BB = 15, BC = 12, 
+     CC = 0)

> x <- toTriangular(x)

> m <- c(A = 0, B = 0, C = 0)

> results <- HWNetwork(ma = m, fe = x)
ERROR: modification of compiler constant of type double, length 4
ERROR: the modified value of the constant is:
[1] 0.00000000 0.03370688 0.00000000 0.00000000
ERROR: the original value of the constant is:
[1] 0 0 0 0
ERROR: the modified constant is at index 94
ERROR: the modified constant is in this function body:
{
    if (is.null(ma) & is.null(fe)) {
        alleles <- unique(sort(c(a1, a2)))
        k <- length(alleles)
        allelenames <- paste("A", as.character(alleles), sep = "")
        acounts <- numeric(k)
        for (i in 1:length(alleles)) {
            acounts[i] <- sum(a1 == alleles[i], na.rm = TRUE) + 
                sum(a2 == alleles[i], na.rm = TRUE)
        }
        names(acounts) <- allelenames
        ii <- order(acounts, decreasing = TRUE)
        acounts <- acounts[ii]
        alleles <- alleles[ii]
        allelenames <- allelenames[ii]
        acounts <- as.integer(acounts)
        names(acounts) <- allelenames
        if (is.null(gender)) {
        }
        else {
            n <- length(gender)
            if (any(gender != 1 & gender != 2)) 
                stop("gender not properly coded (1 for males, 2 for females)")
            nm <- sum(gender == 1, na.rm = TRUE)
            nf <- sum(gender == 2, na.rm = TRUE)
            MaleFemaleCounts <- c(nm, nf)
            Pvalues <- c(0, 0, 0, 0)
            acounts.males <- numeric(k)
            for (i in 1:length(alleles)) {
                acounts.males[i] <- sum(a1[gender == 1] == alleles[i], 
                  na.rm = TRUE) + sum(a2[gender == 1] == alleles[i], 
                  na.rm = TRUE)
            }
            names(acounts.males) <- allelenames
            acounts.females <- numeric(k)
            for (i in 1:length(alleles)) {
                acounts.females[i] <- sum(a1[gender == 2] == 
                  alleles[i], na.rm = TRUE) + sum(a2[gender == 
                  2] == alleles[i], na.rm = TRUE)
            }
            names(acounts.females) <- allelenames
            f.a1 <- paste("A", as.character(a1[gender == 2]), 
                sep = "")
            f.a2 <- paste("A", as.character(a2[gender == 2]), 
                sep = "")
            fem <- paste(f.a1, f.a2, sep = "/")
            fa1 <- factor(f.a1, levels = allelenames)
            fa2 <- factor(f.a2, levels = allelenames)
            M <- table(fa1, fa2)
            Mn <- as.matrix(unclass(M))
            Fec <- fold(Mn)
            prob.of.sample <- density.ma.gender(acounts.males, 
                Fec)
            ostats <- c(0, prob.of.sample, 0, 0)
            observed = as.double(ostats)
            pval <- xChromosomal(acounts, MaleFemaleCounts, k, 
                observed, Pvalues, 0, 0, 0, 0, 0, 0)
        }
    }
    else {
        nm <- sum(ma, na.rm = TRUE)
        nf <- sum(fe, na.rm = TRUE)
        MaleFemaleCounts <- c(nm, nf)
        k <- length(ma)
        Pvalues <- c(0, 0, 0, 0)
        ft <- rowSums(fe) + colSums(fe)
        acounts <- ma + ft
        acounts.males <- ma
        acounts.females <- ft
        ii <- order(acounts, decreasing = TRUE)
        acounts <- acounts[ii]
        acounts.males <- acounts.males[ii]
        acounts.females <- acounts.females[ii]
        prob.of.sample <- density.ma.gender(ma, fe)
        ostats <- c(0, prob.of.sample, 0, 0)
        observed = as.double(ostats)
        acounts <- as.integer(acounts)
        pval <- xChromosomal(acounts, MaleFemaleCounts, k, observed, 
            Pvalues, 0, 0, 0, 0, 0, 0)
    }
    if (verbose) {
        cat("Network algorithm for HWE Exact test with multiple alleles\n")
        cat(k, "alleles detected.\n")
        cat(nm, "males and ", nf, "females\n")
        cat("Allele counts:\n")
        res.counts <- rbind(acounts.males, acounts.females, acounts)
        rownames(res.counts) <- c("Males", "Females", "All")
        print(res.counts)
        cat("Probability of the sample:", prob.of.sample, "\n")
        cat("p-value:", pval, "\n")
    }
    out <- list(pval = pval)
}
Function HWNetwork in namespace HardyWeinberg has this body.
ERROR: detected compiler constant(s) modification after .Call invocation of function _HardyWeinberg_xChromosomal from library HardyWeinberg (/var/scratch2/tomas/cran/rcnst/lib/HardyWeinberg/libs/HardyWeinberg.so).
NOTE: .Call function _HardyWeinberg_xChromosomal modified its argument (number 5, type double, length 4)
Fatal error: compiler constants were modified (in .Call?)!

ERROR: modification of compiler constant of type double, length 4
ERROR: the modified value of the constant is:
[1] 0.00000000 0.03370688 0.00000000 0.00000000
ERROR: the original value of the constant is:
[1] 0 0 0 0
ERROR: the modified constant is at index 94
ERROR: the modified constant is in this function body:
{
    if (is.null(ma) & is.null(fe)) {
        alleles <- unique(sort(c(a1, a2)))
        k <- length(alleles)
        allelenames <- paste("A", as.character(alleles), sep = "")
        acounts <- numeric(k)
        for (i in 1:length(alleles)) {
            acounts[i] <- sum(a1 == alleles[i], na.rm = TRUE) + 
                sum(a2 == alleles[i], na.rm = TRUE)
        }
        names(acounts) <- allelenames
        ii <- order(acounts, decreasing = TRUE)
        acounts <- acounts[ii]
        alleles <- alleles[ii]
        allelenames <- allelenames[ii]
        acounts <- as.integer(acounts)
        names(acounts) <- allelenames
        if (is.null(gender)) {
        }
        else {
            n <- length(gender)
            if (any(gender != 1 & gender != 2)) 
                stop("gender not properly coded (1 for males, 2 for females)")
            nm <- sum(gender == 1, na.rm = TRUE)
            nf <- sum(gender == 2, na.rm = TRUE)
            MaleFemaleCounts <- c(nm, nf)
            Pvalues <- c(0, 0, 0, 0)
            acounts.males <- numeric(k)
            for (i in 1:length(alleles)) {
                acounts.males[i] <- sum(a1[gender == 1] == alleles[i], 
                  na.rm = TRUE) + sum(a2[gender == 1] == alleles[i], 
                  na.rm = TRUE)
            }
            names(acounts.males) <- allelenames
            acounts.females <- numeric(k)
            for (i in 1:length(alleles)) {
                acounts.females[i] <- sum(a1[gender == 2] == 
                  alleles[i], na.rm = TRUE) + sum(a2[gender == 
                  2] == alleles[i], na.rm = TRUE)
            }
            names(acounts.females) <- allelenames
            f.a1 <- paste("A", as.character(a1[gender == 2]), 
                sep = "")
            f.a2 <- paste("A", as.character(a2[gender == 2]), 
                sep = "")
            fem <- paste(f.a1, f.a2, sep = "/")
            fa1 <- factor(f.a1, levels = allelenames)
            fa2 <- factor(f.a2, levels = allelenames)
            M <- table(fa1, fa2)
            Mn <- as.matrix(unclass(M))
            Fec <- fold(Mn)
            prob.of.sample <- density.ma.gender(acounts.males, 
                Fec)
            ostats <- c(0, prob.of.sample, 0, 0)
            observed = as.double(ostats)
            pval <- xChromosomal(acounts, MaleFemaleCounts, k, 
                observed, Pvalues, 0, 0, 0, 0, 0, 0)
        }
    }
    else {
        nm <- sum(ma, na.rm = TRUE)
        nf <- sum(fe, na.rm = TRUE)
        MaleFemaleCounts <- c(nm, nf)
        k <- length(ma)
        Pvalues <- c(0, 0, 0, 0)
        ft <- rowSums(fe) + colSums(fe)
        acounts <- ma + ft
        acounts.males <- ma
        acounts.females <- ft
        ii <- order(acounts, decreasing = TRUE)
        acounts <- acounts[ii]
        acounts.males <- acounts.males[ii]
        acounts.females <- acounts.females[ii]
        prob.of.sample <- density.ma.gender(ma, fe)
        ostats <- c(0, prob.of.sample, 0, 0)
        observed = as.double(ostats)
        acounts <- as.integer(acounts)
        pval <- xChromosomal(acounts, MaleFemaleCounts, k, observed, 
            Pvalues, 0, 0, 0, 0, 0, 0)
    }
    if (verbose) {
        cat("Network algorithm for HWE Exact test with multiple alleles\n")
        cat(k, "alleles detected.\n")
        cat(nm, "males and ", nf, "females\n")
        cat("Allele counts:\n")
        res.counts <- rbind(acounts.males, acounts.females, acounts)
        rownames(res.counts) <- c("Males", "Females", "All")
        print(res.counts)
        cat("Probability of the sample:", prob.of.sample, "\n")
        cat("p-value:", pval, "\n")
    }
    out <- list(pval = pval)
}
Function HWNetwork in namespace HardyWeinberg has this body.
Fatal error: compiler constants were modified!

