Package CRF version 0.4-1
Package built using 76078/R 3.6.0; x86_64-pc-linux-gnu; 2019-02-10 09:56:39 UTC; unix   
Checked with rchk version c132302c5d39a55c436a06df73e539a1bace7486
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md

Function CRF::Init_Belief()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:188

Function CRF::Init_EdgeBel()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:168

Function CRF::Init_Labels()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:142

Function CRF::Init_LogZ()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:176

Function CRF::Init_NodeBel()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:151

Function CRF::Init_Samples(int)
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:198

Function CRF::Set_Data(SEXPREC*)
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:134

Function CRF::Set_Samples(SEXPREC*)
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:211

Function CRF_NLL
  [UP] allocating function CRF::Update_Pot(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*) may destroy its unprotected argument (_edgeFeaN <arg 3>), which is later used. CRF/src/Train.cpp:434
  [UP] allocating function CRF::Update_Pot(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*) may destroy its unprotected argument (_nodeFeaN <arg 2>), which is later used. CRF/src/Train.cpp:434
  [UP] calling allocating function CRF::Update_Pot(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*) with a fresh pointer (_edgeFeaN <arg 3>) CRF/src/Train.cpp:434
  [UP] calling allocating function CRF::Update_Pot(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*) with a fresh pointer (_nodeFeaN <arg 2>) CRF/src/Train.cpp:434
  [UP] unprotected variable _edgeFeaN while calling allocating function Rf_eval CRF/src/Train.cpp:440
  [UP] unprotected variable _nodeFeaN while calling allocating function Rf_eval CRF/src/Train.cpp:440
  [UP] unprotected variable _edgeFeaN while calling allocating function GetListElement(SEXPREC*, char const*) CRF/src/Train.cpp:443
  [UP] unprotected variable _edgeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:443
  [UP] unprotected variable _nodeFeaN while calling allocating function GetListElement(SEXPREC*, char const*) CRF/src/Train.cpp:443
  [UP] unprotected variable _nodeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:443
  [UP] unprotected variable _edgeFeaN while calling allocating function GetListElement(SEXPREC*, char const*) CRF/src/Train.cpp:447
  [UP] unprotected variable _nodeFeaN while calling allocating function GetListElement(SEXPREC*, char const*) CRF/src/Train.cpp:447
  [UP] unprotected variable _edgeFeaN while calling allocating function R_alloc CRF/src/Train.cpp:448
  [UP] unprotected variable _nodeFeaN while calling allocating function R_alloc CRF/src/Train.cpp:448
  [UP] unprotected variable _edgeFeaN while calling allocating function Rf_allocVector CRF/src/Train.cpp:450
  [UP] unprotected variable _nodeFeaN while calling allocating function Rf_allocVector CRF/src/Train.cpp:450
  [UP] unprotected variable _edgeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:453
  [UP] unprotected variable _nodeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:453
  [UP] unprotected variable _edgeFeaN while calling allocating function GetListElement(SEXPREC*, char const*) CRF/src/Train.cpp:457
  [UP] unprotected variable _edgeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:457
  [UP] unprotected variable _nodeFeaN while calling allocating function GetListElement(SEXPREC*, char const*) CRF/src/Train.cpp:457
  [UP] unprotected variable _nodeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:457
  [UP] unprotected variable _edgeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:461
  [UP] unprotected variable _nodeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:494
  [UP] unprotected variable _edgeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:532
  [UP] unprotected variable _nodeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:532
  [UP] unprotected variable _edgeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:567
  [UP] unprotected variable _nodeFeaN while calling allocating function Rf_coerceVector CRF/src/Train.cpp:567
  [PB] has possible protection stack imbalance CRF/src/Train.cpp:595

Function CRFclamped::CRFclamped(SEXPREC*)
  [PB] has possible protection stack imbalance CRF/src/Clamp.cpp:29
