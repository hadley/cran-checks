Package largeList version 0.3.1
Package built using 75465/R 3.6.0; x86_64-pc-linux-gnu; 2018-10-19 11:09:57 UTC; unix   
Checked with rchk version 469bf6658025c101b69dc0a915b0cf1edf4c98f2
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md

Function large_list::ListObject::ListObject()
  [PB] has possible protection stack imbalance largeList/src/list_object.cpp:102

Function large_list::ListObject::ListObject(SEXPREC*, bool)
  [PB] has possible protection stack imbalance largeList/src/list_object.cpp:137

Function large_list::ListObject::ListObject(int, bool)
  [PB] has possible protection stack imbalance largeList/src/list_object.cpp:114

Function large_list::ListObject::~ListObject()
  [PB] has negative depth largeList/src/list_object.cpp:140
  [PB] has possible protection stack imbalance largeList/src/list_object.cpp:141

Function large_list::UnitObject::UnitObject()
  [PB] has possible protection stack imbalance largeList/src/unit_object.cpp:7

Function large_list::UnitObject::UnitObject(SEXPREC*)
  [PB] has possible protection stack imbalance largeList/src/unit_object.cpp:17

Function large_list::UnitObject::read(large_list::ConnectionFile&, large_list::MemorySlot&, long, bool)
  [PB] has negative depth largeList/src/unit_object.cpp:58
  [PB] has possible protection stack imbalance largeList/src/unit_object.cpp:61

Function large_list::UnitObject::set(SEXPREC*)
  [PB] has negative depth largeList/src/unit_object.cpp:21
  [PB] has possible protection stack imbalance largeList/src/unit_object.cpp:23

Function large_list::UnitObject::~UnitObject()
  [PB] has negative depth largeList/src/unit_object.cpp:11
  [PB] has possible protection stack imbalance largeList/src/unit_object.cpp:12
