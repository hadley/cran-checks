Package BeSS version 1.0.8
Package built using 78011/R 4.0.0; x86_64-pc-linux-gnu; 2020-03-20 00:15:28 UTC; unix   
Checked with rchk version 490627e4fb8e93244230dbbd61455730aa43c328
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_EigenR
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:136
  [PB] has negative depth BeSS/src/RcppExports.cpp:144
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:144
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:145

Function _BeSS_EigenR_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_bess_lm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:35
  [PB] has negative depth BeSS/src/RcppExports.cpp:43
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:43
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:44

Function _BeSS_bess_lm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_gbess_lm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:177
  [PB] has negative depth BeSS/src/RcppExports.cpp:185
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:185
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:186

Function _BeSS_gbess_lm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_get_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:71
  [PB] has negative depth BeSS/src/RcppExports.cpp:79
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:79
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:80

Function _BeSS_get_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_getcox_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:106
  [PB] has negative depth BeSS/src/RcppExports.cpp:114
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:114
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:115

Function _BeSS_getcox_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_gget_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:218
  [PB] has negative depth BeSS/src/RcppExports.cpp:226
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:226
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:227

Function _BeSS_gget_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %44 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _BeSS_ggetcox_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr BeSS/src/RcppExports.cpp:258
  [PB] has negative depth BeSS/src/RcppExports.cpp:266
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete BeSS/src/RcppExports.cpp:266
  [PB] has possible protection stack imbalance BeSS/src/RcppExports.cpp:267

Function _BeSS_ggetcox_A_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %41 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
