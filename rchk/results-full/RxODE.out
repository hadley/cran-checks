Package RxODE version 0.9.1-4
Package built using 77089/R 3.7.0; x86_64-pc-linux-gnu; 2019-08-29 12:21:25 UTC; unix   
Checked with rchk version 6400f4a0aa14a4379fcc72d8dbf07a49b4725e07
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::BindingPolicy<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >::Binding::operator Rcpp::Environment_Impl<Rcpp::PreserveStorage><Rcpp::Environment_Impl<Rcpp::PreserveStorage> >() const
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::BindingPolicy<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >::Binding::get() const Rcpp/include/Rcpp/api/meat/proxy.h:138

Function Rcpp::BindingPolicy<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >::Binding::operator bool<bool>() const
  [UP] calling allocating function bool Rcpp::as<bool>(SEXPREC*) with argument allocated using Rcpp::BindingPolicy<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >::Binding::get() const Rcpp/include/Rcpp/api/meat/proxy.h:138

Function Rcpp::BindingPolicy<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >::Binding::operator int<int>() const
  [UP] calling allocating function int Rcpp::as<int>(SEXPREC*) with argument allocated using Rcpp::BindingPolicy<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >::Binding::get() const Rcpp/include/Rcpp/api/meat/proxy.h:138

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::as_environment(SEXPREC*)
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rf_lang2(S:as.environment,?) Rcpp/include/Rcpp/Environment.h:36

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
  [UP] calling allocating function Rcpp::internal::Rcpp_eval_impl(SEXPREC*, SEXPREC*) with a fresh pointer (res <arg 1>) Rcpp/include/Rcpp/Environment.h:112

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<10, Rcpp::PreserveStorage>::push_back_name__impl(int const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, false>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:710

Function Rcpp::Vector<16, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating function Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:684

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back_name__impl(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, Rcpp::traits::integral_constant<bool, true>)
  [UP] unprotected variable names while calling allocating fuERROR: too many states (abstraction error?) in function RxODE_df
nction Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:684

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rf_lang2 Rcpp/include/Rcpp/r_cast.h:34

Function Rcpp::internal::generic_name_proxy<19, Rcpp::PreserveStorage>::set(SEXPREC*)
  [UP] ignoring variable rhs as it has address taken, results will be incomplete 

Function Rcpp::sugar::IndexHash<16>::add_value(int)
  [UP] ignoring variable val as it has address taken, results will be incomplete 

Function RxODE_df
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete RxODE/src/par_solve.c:2709

Function _RxODE_atolRtolFactor_
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:549
  [PB] has negative depth RxODE/src/RcppExports.cpp:561
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:561
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:562

Function _RxODE_cvPost
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_dropUnitsRxSolve
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1293
  [PB] has negative depth RxODE/src/RcppExports.cpp:1305
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1305
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1306

Function _RxODE_dropUnitsRxSolve_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_dynLoad
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:234
  [PB] has negative depth RxODE/src/RcppExports.cpp:246
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:246
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:247

Function _RxODE_dynLoad_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_etRep_
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_etSeq_
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_etTrans
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_etUpdate
  [UP] ignoring variable <unnamed var:   %21 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_et_
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_getProgSupported
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1223
  [PB] has negative depth RxODE/src/RcppExports.cpp:1235
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1235
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1236

Function _RxODE_getProgSupported_try()
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_getRxFn
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:200
  [PB] has negative depth RxODE/src/RcppExports.cpp:212
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:212
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:213

Function _RxODE_getRxFn_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_removableDrive
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rinvchisq
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxAssignPtr
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:885
  [PB] has negative depth RxODE/src/RcppExports.cpp:897
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:897
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:898

Function _RxODE_rxC
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:986
  [PB] has negative depth RxODE/src/RcppExports.cpp:998
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:998
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:999

Function _RxODE_rxC_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxCores
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:918
  [PB] has negative depth RxODE/src/RcppExports.cpp:930
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:930
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:931

Function _RxODE_rxCores_try()
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxDelete
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1122
  [PB] has negative depth RxODE/src/RcppExports.cpp:1134
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1134
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1135

Function _RxODE_rxDelete_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxDfdy
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:371
  [PB] has negative depth RxODE/src/RcppExports.cpp:383
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:383
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:384

Function _RxODE_rxDfdy_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxDll
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:952
  [PB] has negative depth RxODE/src/RcppExports.cpp:964
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:964
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:965

Function _RxODE_rxDll_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxDynLoad
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1054
  [PB] has negative depth RxODE/src/RcppExports.cpp:1066
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1066
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1067

Function _RxODE_rxDynLoad_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxDynUnload
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1088
  [PB] has negative depth RxODE/src/RcppExports.cpp:1100
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1100
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1101

Function _RxODE_rxDynUnload_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxGetRxODE
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:818
  [PB] has negative depth RxODE/src/RcppExports.cpp:830
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:830
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:831

Function _RxODE_rxGetRxODE_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxInits
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:445
  [PB] has negative depth RxODE/src/RcppExports.cpp:457
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:457
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:458

Function _RxODE_rxInits_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxInv
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1361
  [PB] has negative depth RxODE/src/RcppExports.cpp:1373
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1373
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1374

Function _RxODE_rxInv_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxIs
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:166
  [PB] has negative depth RxODE/src/RcppExports.cpp:178
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:178
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:179

Function _RxODE_rxIsCurrent
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:852
  [PB] has negative depth RxODE/src/RcppExports.cpp:864
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:864
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:865

Function _RxODE_rxIsCurrent_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxIsLoaded
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1020
  [PB] has negative depth RxODE/src/RcppExports.cpp:1032
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1032
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1033

Function _RxODE_rxIsLoaded_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxIs_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxLhs
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:405
  [PB] has negative depth RxODE/src/RcppExports.cpp:417
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:417
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:418

Function _RxODE_rxLhs_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxModelVars_
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:268
  [PB] has negative depth RxODE/src/RcppExports.cpp:280
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:280
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:281

Function _RxODE_rxModelVars__try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxParams_
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:337
  [PB] has negative depth RxODE/src/RcppExports.cpp:349
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:349
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:350

Function _RxODE_rxParams__try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxRmModelLib_
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:784
  [PB] has negative depth RxODE/src/RcppExports.cpp:796
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:796
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:797

Function _RxODE_rxSetIni0
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSetSilentErr
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1327
  [PB] has negative depth RxODE/src/RcppExports.cpp:1339
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1339
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1340

Function _RxODE_rxSetSilentErr_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSetupIni
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:480
  [PB] has negative depth RxODE/src/RcppExports.cpp:492
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:492
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:493

Function _RxODE_rxSetupIni_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSetupScale
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:516
  [PB] has negative depth RxODE/src/RcppExports.cpp:528
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:528
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:529

Function _RxODE_rxSetupScale_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSimThetaOmega
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:605
  [PB] has negative depth RxODE/src/RcppExports.cpp:617
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:617
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:618

Function _RxODE_rxSimThetaOmega_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %77 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSolveFree
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:638
  [PB] has negative depth RxODE/src/RcppExports.cpp:650
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:650
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:651

Function _RxODE_rxSolveFree_try()
  [UP] ignoring variable <unnamed var:   %8 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSolveGet
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:715
  [PB] has negative depth RxODE/src/RcppExports.cpp:727
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:727
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:728

Function _RxODE_rxSolveGet_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSolveUpdate
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:751
  [PB] has negative depth RxODE/src/RcppExports.cpp:763
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:763
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:764

Function _RxODE_rxSolveUpdate_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSolve_
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:679
  [PB] has negative depth RxODE/src/RcppExports.cpp:691
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:691
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:692

Function _RxODE_rxSolve__try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %32 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxStack
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxState
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:303
  [PB] has negative depth RxODE/src/RcppExports.cpp:315
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:315
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:316

Function _RxODE_rxState_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSymInvChol
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1398
  [PB] has negative depth RxODE/src/RcppExports.cpp:1410
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1410
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1411

Function _RxODE_rxSymInvCholEnvCalculate
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1434
  [PB] has negative depth RxODE/src/RcppExports.cpp:1446
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1446
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1447

Function _RxODE_rxSymInvCholEnvCalculate_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxSymInvChol_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_rxUpdateTrans_
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1259
  [PB] has negative depth RxODE/src/RcppExports.cpp:1271
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1271
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1272

Function _RxODE_rxUpdateTrans__try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_setProgSupported
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1190
  [PB] has negative depth RxODE/src/RcppExports.cpp:1202
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1202
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1203

Function _RxODE_setProgSupported_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RxODE_setRstudio
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RxODE/src/RcppExports.cpp:1156
  [PB] has negative depth RxODE/src/RcppExports.cpp:1168
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RxODE/src/RcppExports.cpp:1168
  [PB] has possible protection stack imbalance RxODE/src/RcppExports.cpp:1169

Function _RxODE_setRstudio_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function etAddWindow(Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, Rcpp::RObject_Impl<Rcpp::PreserveStorage>, bool, Rcpp::Vector<19, Rcpp::PreserveStorage>)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/et.cpp:383

Function etEmpty(Rcpp::Vector<16, Rcpp::PreserveStorage>)
  [UP] ignoring variable <unnamed var:   %102 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %114 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %126 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %138 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %150 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %162 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %174 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %186 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %198 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %208 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %220 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %232 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %244 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %256 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %268 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %280 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %292 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %304 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %316 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %328 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %40 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %53 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %65 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %77 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %90 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %16 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function etImportEventTable(Rcpp::Vector<19, Rcpp::PreserveStorage>)
  [UP] ignoring variable <unnamed var:   %343 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %307 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %317 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %326 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %352 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %354 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %379 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %388 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function etRep_(Rcpp::RObject_Impl<Rcpp::PreserveStorage>, int, Rcpp::Vector<14, Rcpp::PreserveStorage>, Rcpp::Vector<13, Rcpp::PreserveStorage>, int, int, double)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/et.cpp:3125

Function etSeq_(Rcpp::Vector<19, Rcpp::PreserveStorage>, int, int, double, bool, int, int, bool, Rcpp::Vector<16, Rcpp::PreserveStorage>, Rcpp::Vector<10, Rcpp::PreserveStorage>, bool)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/et.cpp:2841
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/et.cpp:2849
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/et.cpp:2857
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/et.cpp:2865
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/et.cpp:2971

Function etTrans(Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, bool, bool, bool, bool, Rcpp::Nullable<Rcpp::Vector<10, Rcpp::PreserveStorage> >, Rcpp::Vector<16, Rcpp::PreserveStorage>)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/etTran.cpp:276

Function et_(Rcpp::Vector<19, Rcpp::PreserveStorage>, Rcpp::Vector<19, Rcpp::PreserveStorage>)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/et.cpp:2362
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/et.cpp:2474

Function getEtRxsolve(Rcpp::Environment_Impl<Rcpp::PreserveStorage>)
  [UP] ignoring variable <unnamed var:   %105 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %107 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %118 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %120 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %131 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %133 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %144 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %146 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %157 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %159 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %170 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %172 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %29 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %40 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %42 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %53 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %55 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %68 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %79 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %81 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %92 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %94 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function getEtSolve(Rcpp::Vector<19, Rcpp::PreserveStorage>)
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/et.cpp:1996

Function rxAssignPtr(SEXPREC*)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:4263
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:4269
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:4277

Function rxC(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:4365

Function rxDll(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:4323

Function rxDynUnload(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:4463

Function rxGetModelLib
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function rxInv(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function rxIsCurrent(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:4243

Function rxIsLoaded(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:4403

Function rxIs_list(Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:108

Function rxModelVars_(Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&)
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:652

Function rxModelVars_character(Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&)
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:596

Function rxRxODEenv(Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:4197
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:4203

Function rxSolveGet_rxSolve(Rcpp::RObject_Impl<Rcpp::PreserveStorage>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, Rcpp::Vector<10, Rcpp::PreserveStorage>&, Rcpp::Vector<19, Rcpp::PreserveStorage>&)
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:3769
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:3776
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:3851

Function rxSolveUpdate(Rcpp::RObject_Impl<Rcpp::PreserveStorage>, Rcpp::RObject_Impl<Rcpp::PreserveStorage>, Rcpp::RObject_Impl<Rcpp::PreserveStorage>)
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:3954
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:3985
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:3991

Function rxSolve_(Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Nullable<Rcpp::Vector<16, Rcpp::PreserveStorage> > const&, Rcpp::Nullable<Rcpp::Vector<19, Rcpp::PreserveStorage> > const&, Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, int)
  [UP] ignoring variable <unnamed var:   %176 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:2793
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*)(?,V) with argument allocated using Rcpp::internal::string_name_proxy<16, Rcpp::PreserveStorage>::operator SEXPREC*() const RxODE/src/rxData.cpp:2794

Function rxSolve_update(Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, Rcpp::Nullable<Rcpp::Vector<16, Rcpp::PreserveStorage> > const&, Rcpp::Nullable<Rcpp::Vector<19, Rcpp::PreserveStorage> > const&, Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, Rcpp::RObject_Impl<Rcpp::PreserveStorage> const&, bool const&, bool const&, bool const&)
  [UP] calling allocating function Rcpp::Environment_Impl<Rcpp::PreserveStorage> Rcpp::as<Rcpp::Environment_Impl<Rcpp::PreserveStorage> >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<16, Rcpp::PreserveStorage> >::AttributeProxy::operator SEXPREC*() const RxODE/src/rxData.cpp:2451

Function rxSymInvCholEnvCalculate(Rcpp::Vector<19, Rcpp::PreserveStorage>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Rcpp::Nullable<Rcpp::Vector<14, Rcpp::PreserveStorage> >)
  [UP] ignoring variable <unnamed var:   %110 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function setInits
  [UP] ignoring variable init as it has address taken, results will be incomplete 

Function void Rcpp::Vector<16, Rcpp::PreserveStorage>::push_back<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %7 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
