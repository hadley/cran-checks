Package flars version 1.0
Package built using 77499/R 4.0.0; x86_64-pc-linux-gnu; 2019-12-03 04:21:45 UTC; unix   
Checked with rchk version cede4f646f845c905144756ebbbff418431a70f7
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::AttributeProxyPolicy<Rcpp::Vector<19, Rcpp::PreserveStorage> >::AttributeProxy::set(SEXPREC*)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<14, Rcpp::PreserveStorage>::Vector(SEXPREC*)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function Rcpp::Vector<19, Rcpp::PreserveStorage> Rcpp::Vector<19, Rcpp::PreserveStorage>::create__dispatch<Rcpp::traits::named_object<Eigen::Matrix<double, -1, 1, 0, -1, 1> >, Rcpp::traits::named_object<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Rcpp::traits::named_object<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Rcpp::traits::named_object<double>, Rcpp::traits::named_object<double>, Rcpp::traits::named_object<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >, Rcpp::traits::named_object<double>, Rcpp::traits::named_object<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Rcpp::traits::named_object<double> >(Rcpp::traits::integral_constant<bool, true>, Rcpp::traits::named_object<Eigen::Matrix<double, -1, 1, 0, -1, 1> > const&, Rcpp::traits::named_object<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&, Rcpp::traits::named_object<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&, Rcpp::traits::named_object<double> const&, Rcpp::traits::named_object<double> const&, Rcpp::traits::named_object<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > > const&, Rcpp::traits::named_object<double> const&, Rcpp::traits::named_object<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const&, Rcpp::traits::named_object<double> const&)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0
  [UP] calling allocating function Rcpp::AttributeProxyPolicy<Rcpp::Vector<19, Rcpp::PreserveStorage> >::AttributeProxy::set(SEXPREC*)(?,V) with argument allocated using Rf_allocVector /unknown:0

Function Rcpp::exception::exception(char const*, bool)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function Rcpp::internal::generic_proxy<19, Rcpp::PreserveStorage>& Rcpp::internal::generic_proxy<19, Rcpp::PreserveStorage>::operator=<Eigen::Matrix<double, -1, -1, 0, -1, -1> >(Eigen::Matrix<double, -1, -1, 0, -1, -1> const&)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function Rcpp::internal::generic_proxy<19, Rcpp::PreserveStorage>& Rcpp::internal::generic_proxy<19, Rcpp::PreserveStorage>::operator=<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> const> const, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >(Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 1, -1, -1> const> const, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const&)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function Rcpp::internal::generic_proxy<19, Rcpp::PreserveStorage>& Rcpp::internal::generic_proxy<19, Rcpp::PreserveStorage>::operator=<Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >(Eigen::Product<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> const>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> const&)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function Rcpp::traits::MatrixExporterForEigen<Eigen::Matrix<double, -1, -1, 0, -1, -1>, double>::get()
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function SEXPREC* Rcpp::internal::primitive_range_wrap__impl__nocast<double const*, double>(double const*, double const*, std::__1::random_access_iterator_tag)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function SEXPREC* Rcpp::internal::primitive_wrap__impl__cast<double>(double const&, Rcpp::traits::integral_constant<bool, false>)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function flars_FccaXYdir
  [PB] has possible protection stack imbalance flars/src/RcppExports.cpp:63

Function flars_FccaXYdir0
  [PB] has possible protection stack imbalance flars/src/RcppExports.cpp:42

Function void Rcpp::Vector<14, Rcpp::PreserveStorage>::assign_sugar_expression<Rcpp::sugar::Minus_Vector_Primitive<14, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > >(Rcpp::sugar::Minus_Vector_Primitive<14, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > const&)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0

Function void Rcpp::Vector<14, Rcpp::PreserveStorage>::import_sugar_expression<true, Rcpp::sugar::Minus_Vector_Primitive<14, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > >(Rcpp::VectorBase<14, true, Rcpp::sugar::Minus_Vector_Primitive<14, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > > const&, Rcpp::traits::integral_constant<bool, false>)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector /unknown:0

Function void Rcpp::internal::export_indexing__impl<double*, double>(SEXPREC*, double*&, Rcpp::traits::integral_constant<bool, false>)
  [PB] has negative depth /unknown:0
  [PB] has possible protection stack imbalance /unknown:0
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete /unknown:0
