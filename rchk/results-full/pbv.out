Package pbv version 0.2-16
Package built using 76738/R 3.7.0; x86_64-pc-linux-gnu; 2019-06-27 00:00:30 UTC; unix   
Checked with rchk version 6400f4a0aa14a4379fcc72d8dbf07a49b4725e07
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function _pbv_pbv_rcpp_dbvnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:211
  [PB] has negative depth pbv/src/RcppExports.cpp:223
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:223
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:224

Function _pbv_pbv_rcpp_dbvnorm0
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:174
  [PB] has negative depth pbv/src/RcppExports.cpp:186
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:186
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:187

Function _pbv_pbv_rcpp_dbvnorm0_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_dbvnorm_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_pbvnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:137
  [PB] has negative depth pbv/src/RcppExports.cpp:149
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:149
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:150

Function _pbv_pbv_rcpp_pbvnorm0
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:101
  [PB] has negative depth pbv/src/RcppExports.cpp:113
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:113
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:114

Function _pbv_pbv_rcpp_pbvnorm0_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_pbvnorm_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_pnorm
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:65
  [PB] has negative depth pbv/src/RcppExports.cpp:77
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:77
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:78

Function _pbv_pbv_rcpp_pnorm0
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr pbv/src/RcppExports.cpp:31
  [PB] has negative depth pbv/src/RcppExports.cpp:43
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete pbv/src/RcppExports.cpp:43
  [PB] has possible protection stack imbalance pbv/src/RcppExports.cpp:44

Function _pbv_pbv_rcpp_pnorm0_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _pbv_pbv_rcpp_pnorm_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
