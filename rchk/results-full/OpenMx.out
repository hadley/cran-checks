Package OpenMx version 2.13.2
Package built using 76761/R 3.7.0; x86_64-pc-linux-gnu; 2019-07-01 12:19:43 UTC; unix   
Checked with rchk version 6400f4a0aa14a4379fcc72d8dbf07a49b4725e07
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function BA81Expect::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxExpectationBA81.cpp:348

Function ComputeBootstrap::computeImpl(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:4283

Function ComputeBootstrap::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:4155

Function ComputeCI::computeImpl(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:1531

Function ComputeCI::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:689

Function ComputeCI::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:1582

Function ComputeCheckpoint::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:5653

Function ComputeEM::MengRubinFamily(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3355

Function ComputeEM::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2868

Function ComputeEM::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3410

Function ComputeGenSA::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:1939

Function ComputeLoop::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2655

Function ComputeNR::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeNR.cpp:319

Function ComputeReportDeriv::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:4063

Function ComputeReportExpectation::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:4084

Function ComputeStandardError::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3899

Function ComputeTryCatch::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2487

Function ComputeTryH::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:1640

Function MLFitState::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxMLFitFunction.cpp:301

Function MxRList::add(char const*, SEXPREC*)
  [UP] ignoring variable rkey as it has address taken, results will be incomplete 
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:447

Function MxRList::asR()
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:334

Function ProtectAutoBalanceDoodad::~ProtectAutoBalanceDoodad()
  [PB] has an unsupported form of unprotect (not constant, not variable), results will be incomplete OpenMx/src/./omxDefines.h:506
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete OpenMx/src/./omxDefines.h:506

Function ProtectedSEXP::ProtectedSEXP(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:477

Function ProtectedSEXP::~ProtectedSEXP()
  [PB] has negative depth OpenMx/src/./omxDefines.h:483
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete OpenMx/src/./omxDefines.h:483
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:484

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::S4_Impl<Rcpp::PreserveStorage>::S4_Impl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] calling allocating function R_do_new_object with argument allocated using R_do_MAKE_CLASS Rcpp/include/Rcpp/S4.h:58

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rf_lang2 Rcpp/include/Rcpp/r_cast.h:34

Function RelationalRAMExpectation::independentGroup::exportInternalState(MxRList&, MxRList&)
  [PB] has possible protection stack imbalance OpenMx/src/omxRAMExpectation.cpp:2179

Function RelationalRAMExpectation::independentGroup::prep(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/omxRAMExpectation.cpp:1466

Function RelationalRAMExpectation::state::exportInternalState(MxRList&)
  [UP] ignoring variable fk1 as it has address taken, results will be incomplete 
  [UP] ignoring variable hmean as it has address taken, results will be incomplete 
  [UP] ignoring variable numKids as it has address taken, results will be incomplete 
  [UP] ignoring variable parent1 as it has address taken, results will be incomplete 
  [UP] ignoring variable row as it has address taken, results will be incomplete 
  [UP] ignoring variable rscale as it has address taken, results will be incomplete 
  [UP] ignoring variable rset as it has address taken, results will be incomplete 
  [UP] ignoring variable ugroup as it has address taken, results will be incomplete 
  [UP] ignoring variable numJoins as it has address taken, results wERROR: too many states (abstraction error?) in function ifaGroup::import(SEXPREC*)
ill be incomplete 
  [UP] ignoring variable skipMean as it has address taken, results will be incomplete 
  [PB] has possible protection stack imbalance OpenMx/src/omxRAMExpectation.cpp:2236

Function RelationalRAMExpectation::state::simulate(FitContext*, MxRList&)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/omxRAMExpectation.cpp:1978

Function ScopedProtect::ScopedProtect(SEXPREC*&, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:458

Function ScopedProtect::~ScopedProtect()
  [PB] has negative depth OpenMx/src/./omxDefines.h:464
  [UP] attempt to unprotect more items (2) than protected (1), results will be incomplete OpenMx/src/./omxDefines.h:464
  [PB] has possible protection stack imbalance OpenMx/src/./omxDefines.h:465

Function ifaGroup::import(SEXPREC*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/ba81quad.cpp:426

Function ifaGroup::verifyFactorNames(SEXPREC*, char const*)
  [PB] has possible protection stack imbalance OpenMx/src/ba81quad.cpp:191

Function makeFactor(SEXPREC*, int, char const**)
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:96

Function omxBackend2(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, bool)
  [UP] unprotected variable Rlb while calling allocating function Rf_allocVector OpenMx/src/glue.cpp:705
  [UP] unprotected variable Rlb while calling allocating function MxRList::add(char const*, SEXPREC*)(?,?,V) OpenMx/src/glue.cpp:706
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:750

Function omxCallAlgebra2(SEXPREC*, SEXPREC*, SEXPREC*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:505

Function omxComputeGD::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeGD.cpp:591

Function omxComputeIterate::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2556

Function omxComputeNM::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/ComputeNM.cpp:514

Function omxComputeNumericDeriv::computeImpl(FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/omxHessianCalculation.cpp:533

Function omxComputeNumericDeriv::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxHessianCalculation.cpp:339

Function omxComputeNumericDeriv::reportResults(FitContext*, MxRList*, MxRList*)
  [PB] has possible protection stack imbalance OpenMx/src/omxHessianCalculation.cpp:553

Function omxComputeOnce::initFromFrontend(omxState*, SEXPREC*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:3543

Function omxComputeSequence::initFromFrontend(omxState*, SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:2455

Function omxData::connectDynamicData(omxState*)
  [PB] has possible protection stack imbalance OpenMx/src/omxData.cpp:141

Function omxExportMatrix(omxMatrix*)
  [PB] has possible protection stack imbalance OpenMx/src/omxMatrix.cpp:232

Function omxFIMLFitFunction::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxFIMLFitFunction.cpp:452

Function omxGlobal::omxProcessConfidenceIntervals(SEXPREC*, omxState*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unprotected variable names while calling allocating function Rf_asChar OpenMx/src/omxImportFrontendState.cpp:403
  [UP] unprotected variable names while calling allocating function Rf_asInteger OpenMx/src/omxImportFrontendState.cpp:404
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:417

Function omxGlobal::omxProcessMxComputeEntities(SEXPREC*, omxState*)
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:195

Function omxProcessCheckpointOptions(SEXPREC*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:311

Function omxState::omxExportResults(MxRList*, FitContext*)
  [PB] has possible protection stack imbalance OpenMx/src/omxExportBackendState.cpp:79

Function omxState::omxProcessConstraints(SEXPREC*, FitContext*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unprotected variable names while calling allocating function omxMatrixLookupFromState1(SEXPREC*, omxState*) OpenMx/src/omxImportFrontendState.cpp:431
  [UP] unprotected variable names while calling allocating function omxMatrixLookupFromState1(SEXPREC*, omxState*) OpenMx/src/omxImportFrontendState.cpp:433
  [UP] unprotected variable names while calling allocating function Rf_asChar OpenMx/src/omxImportFrontendState.cpp:435
  [UP] unprotected variable names while calling allocating function Rf_warning OpenMx/src/omxImportFrontendState.cpp:438
  [UP] unprotected variable names while calling allocating function omxMatrixLookupFromState1(SEXPREC*, omxState*) OpenMx/src/omxImportFrontendState.cpp:442
  [UP] unprotected variable names while calling allocating function Rf_asInteger OpenMx/src/omxImportFrontendState.cpp:445
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:453

Function omxState::omxProcessMxExpectationEntities(SEXPREC*)
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] unprotected variable eNames while calling allocating function omxNewIncompleteExpectation(SEXPREC*, int, omxState*) OpenMx/src/omxImportFrontendState.cpp:164
  [PB] has possible protection stack imbalance OpenMx/src/omxImportFrontendState.cpp:168

Function omxStateSpaceExpectation::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxStateSpaceExpectation.cpp:440

Function omxWLSFitFunction::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/omxWLSFitFunction.cpp:196

Function readOpts(SEXPREC*, int*, int*)
  [PB] has possible protection stack imbalance OpenMx/src/glue.cpp:441

Function sparseInvert_wrapper(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/Compute.cpp:452

Function ssMLFitState::populateAttr(SEXPREC*)
  [PB] has possible protection stack imbalance OpenMx/src/ssMLFit.cpp:60
