Package duckdb version 0.2.1
Package built using 79182/R 4.1.0; x86_64-pc-linux-gnu; 2020-09-10 23:00:41 UTC; unix   
Checked with rchk version 36c7ad2294619ba0a81109c9acb675eea2c96e6d
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function DataFrameScanFunction::dataframe_scan_bind(duckdb::ClientContext&, std::__1::vector<duckdb::Value, std::__1::allocator<duckdb::Value> >&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, duckdb::Value, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, duckdb::Value> > >&, std::__1::vector<duckdb::LogicalType, std::__1::allocator<duckdb::LogicalType> >&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
  [UP] ignoring variable df as it has address taken, results will be incomplete 

Function duckdb_execute_R
  [UP] unprotected variable <unnamed var:   %2 = alloca %struct.SEXPREC*, align 8> while calling allocating function std::__1::unique_ptr<duckdb::QueryResult, std::__1::default_delete<duckdb::QueryResult> >::~unique_ptr() duckdb/src/duckdbr.cpp:613
