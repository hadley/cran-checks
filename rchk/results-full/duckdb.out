Package duckdb version 0.2.2-1
Package built using 79411/R 4.1.0; x86_64-pc-linux-gnu; 2020-11-10 09:56:49 UTC; unix   
Checked with rchk version 1df3a0cc105e4278d3a4b8e1215f64bf6611d1e8 LLVM version 10.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function DataFrameScanFunction::dataframe_scan_bind(duckdb::ClientContext&, std::__1::vector<duckdb::Value, std::__1::allocator<duckdb::Value> >&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, duckdb::Value, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, duckdb::Value> > >&, std::__1::vector<duckdb::LogicalType, std::__1::allocator<duckdb::LogicalType> >&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
  [UP] ignoring variable df as it has address taken, results will be incomplete 
