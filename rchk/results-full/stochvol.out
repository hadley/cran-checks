Package stochvol version 2.0.4
Package built using 77499/R 4.0.0; x86_64-pc-linux-gnu; 2019-12-03 04:06:07 UTC; unix   
Checked with rchk version cede4f646f845c905144756ebbbff418431a70f7
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _stochvol_svlsample_cpp
  [UP] ignoring variable <unnamed var:   %87 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _stochvol_svsample_cpp
  [UP] ignoring variable <unnamed var:   %90 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function int* std::__1::transform<Rcpp::internal::Proxy_Iterator<Rcpp::internal::const_string_proxy<16, Rcpp::PreserveStorage> >, int*, svlsample_cpp(arma::Col<double> const&, int, int, arma::Mat<double> const&, int, int, int, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, arma::Col<double> const&, double, double, double, double, double, double, double, double, double, double, bool, double, arma::Mat<double> const&, bool, bool, Rcpp::Vector<16, Rcpp::PreserveStorage> const&, bool)::$_1>(Rcpp::internal::Proxy_Iterator<Rcpp::internal::const_string_proxy<16, Rcpp::PreserveStorage> >, Rcpp::internal::Proxy_Iterator<Rcpp::internal::const_string_proxy<16, Rcpp::PreserveStorage> >, int*, svlsample_cpp(arma::Col<double> const&, int, int, arma::Mat<double> const&, int, int, int, Rcpp::Vector<19, Rcpp::PreserveStorage> const&, arma::Col<double> const&, double, double, double, double, double, double, double, double, double, double, bool, double, arma::Mat<double> const&, bool, bool, Rcpp::Vector<16, Rcpp::PreserveStorage> const&, bool)::$_1)
  [UP] ignoring variable <unnamed var:   %6 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
