Package CRF version 0.4-2
Package built using 76403/R 3.7.0; x86_64-pc-linux-gnu; 2019-04-17 13:27:23 UTC; unix   
Checked with rchk version 8de4e6e0566199e4662b2716e5acf000dd84f60b
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function CRF::Init_Belief()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:188

Function CRF::Init_EdgeBel()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:168

Function CRF::Init_Labels()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:142

Function CRF::Init_LogZ()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:176

Function CRF::Init_NodeBel()
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:151

Function CRF::Init_Samples(int)
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:198

Function CRF::Set_Data(SEXPREC*)
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:134

Function CRF::Set_Samples(SEXPREC*)
  [PB] has possible protection stack imbalance CRF/src/CRF.cpp:211

Function CRF::~CRF()
  [PB] has an unsupported form of unprotect (not constant, not variable), results will be incomplete CRF/src/CRF.cpp:89
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete CRF/src/CRF.cpp:89

Function CRF_NLL
  [PB] has possible protection stack imbalance CRF/src/Train.cpp:597

Function CRFclamped::CRFclamped(SEXPREC*)
  [PB] has possible protection stack imbalance CRF/src/Clamp.cpp:29
