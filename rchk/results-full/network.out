Package network version 1.16.0
Package built using 77519/R 4.0.0; x86_64-pc-linux-gnu; 2019-12-05 07:30:17 UTC; unix   
Checked with rchk version 490627e4fb8e93244230dbbd61455730aa43c328
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function addEdge_R
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] allocating function getListElement may destroy its unprotected argument (x <arg 1>), which is later used. network/src/access.c:938
  [UP] calling allocating function getListElement with a fresh pointer (x <arg 1>) network/src/access.c:938
  [UP] unprotected variable x while calling allocating function Rf_coerceVector network/src/access.c:940
  [UP] unprotected variable x while calling allocating function Rf_allocVector network/src/access.c:942
  [UP] unprotected variable x while calling allocating function Rf_coerceVector network/src/access.c:943
  [UP] unprotected variable x while calling allocating function getListElement network/src/access.c:943
  [UP] unprotected variable x while calling allocating function Rf_allocVector network/src/access.c:950
  [UP] allocating function getListElement may destroy its unprotected argument (x <arg 1>), which is later used. network/src/access.c:958
  [UP] calling allocating function getListElement with a fresh pointer (x <arg 1>) network/src/access.c:958
  [UP] unprotected variable x while calling allocating function Rf_coerceVector network/src/access.c:960
  [UP] unprotected variable x while calling allocating function Rf_allocVector network/src/access.c:962
  [UP] unprotected variable x while calling allocating function Rf_coerceVector network/src/access.c:963
  [UP] unprotected variable x while calling allocating function getListElement network/src/access.c:963
  [UP] unprotected variable x while calling allocating function Rf_allocVector network/src/access.c:970
  [UP] allocating function getListElement may destroy its unprotected argument (x <arg 1>), which is later used. network/src/access.c:977
  [UP] calling allocating function getListElement with a fresh pointer (x <arg 1>) network/src/access.c:977
  [UP] unprotected variable x while calling allocating function getListElement network/src/access.c:977
  [UP] unprotected variable x while calling allocating function Rf_allocVector network/src/access.c:979
  [UP] allocating function getListElement may destroy its unprotected argument (x <arg 1>), which is later used. network/src/access.c:981
  [UP] calling allocating function getListElement with a fresh pointer (x <arg 1>) network/src/access.c:981
  [UP] unprotected variable x while calling allocating function setListElement(?,?,V) network/src/access.c:982
  [UP] calling allocating function setListElement with a fresh pointer (x <arg 1>) network/src/access.c:983
  [UP] unprotected variable x while calling allocating function Rf_coerceVector network/src/access.c:985
  [UP] allocating function getListElement may destroy its unprotected argument (x <arg 1>), which is later used. network/src/access.c:986
  [UP] calling allocating function getListElement with a fresh pointer (x <arg 1>) network/src/access.c:986
  [UP] unprotected variable x while calling allocating function setListElement network/src/access.c:987
  [UP] calling allocating function setListElement with a fresh pointer (x <arg 1>) network/src/access.c:988
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete network/src/access.c:994

Function addEdges
  [PB] has too high protection stack depth results will be incomplete
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [PB] has too high protection stack depth results will be incomplete
  [PB] has an unsupported form of unprotect with a variable - binary operation results will be incomplete network/src/access.c:699
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete network/src/access.c:699
  [PB] has an unsupported form of unprotect with a variable results will be incomplete network/src/access.c:708
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete network/src/access.c:708

Function addVertices_R
  [UP] protect stack is too deep, unprotecting all variables, results will be incomplete
  [UP] allocating function getListElement may destroy its unprotected argument (x <arg 1>), which is later used. network/src/access.c:1031
  [UP] calling allocating function getListElement with a fresh pointer (x <arg 1>) network/src/access.c:1031
  [UP] unprotected variable x while calling allocating function enlargeList network/src/access.c:1031
  [UP] allocating function getListElement may destroy its unprotected argument (x <arg 1>), which is later used. network/src/access.c:1032
  [UP] calling allocating function getListElement with a fresh pointer (x <arg 1>) network/src/access.c:1032
  [UP] unprotected variable x while calling allocating function enlargeList network/src/access.c:1032
  [UP] unprotected variable x while calling allocating function Rf_allocVector network/src/access.c:1034
  [UP] unprotected variable x while calling allocating function Rf_allocVector network/src/access.c:1036
  [UP] calling allocating function setListElement with a fresh pointer (x <arg 1>) network/src/access.c:1039
  [UP] calling allocating function setListElement with a fresh pointer (x <arg 1>) network/src/access.c:1040
  [UP] allocating function getListElement may destroy its unprotected argument (x <arg 1>), which is later used. network/src/access.c:1044
  [UP] calling allocating function getListElement with a fresh pointer (x <arg 1>) network/src/access.c:1044
  [UP] unprotected variable x while calling allocating function enlargeList network/src/access.c:1044
  [UP] unprotected variable x while calling allocating function Rf_allocVector network/src/access.c:1048
  [UP] unprotected variable x while calling allocating function Rf_allocVector network/src/access.c:1049
  [UP] unprotected variable x while calling allocating function setListElement(V,?,V) network/src/access.c:1051
  [ERROR: too many states (abstraction error?) in function deleteEdges
