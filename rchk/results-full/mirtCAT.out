Package mirtCAT version 1.10
Package built using 79393/R 4.1.0; x86_64-pc-linux-gnu; 2020-11-02 15:04:17 UTC; unix   
Checked with rchk version 1df3a0cc105e4278d3a4b8e1215f64bf6611d1e8 LLVM version 10.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function I_nominal(arma::Mat<double>&, Rcpp::S4_Impl<Rcpp::PreserveStorage> const&, std::__1::vector<double, std::__1::allocator<double> > const&, std::__1::vector<double, std::__1::allocator<double> > const&, int const&, int const&)
  [UP] calling allocating function int Rcpp::as<int>(SEXPREC*) with argument allocated using Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::const_SlotProxy::operator SEXPREC*() const mirtCAT/src/item_functions.cpp:306

Function Info(Rcpp::S4_Impl<Rcpp::PreserveStorage> const&, std::__1::vector<double, std::__1::allocator<double> > const&)
  [UP] calling allocating function int Rcpp::as<int>(SEXPREC*) with argument allocated using Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::const_SlotProxy::operator SEXPREC*() const mirtCAT/src/item_functions.cpp:362

Function ProbTrace(Rcpp::S4_Impl<Rcpp::PreserveStorage> const&, std::__1::vector<double, std::__1::allocator<double> > const&)
  [UP] calling allocating function int Rcpp::as<int>(SEXPREC*) with argument allocated using Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::const_SlotProxy::operator SEXPREC*() const mirtCAT/src/item_functions.cpp:193
  [UP] calling allocating function int Rcpp::as<int>(SEXPREC*) with argument allocated using Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::const_SlotProxy::operator SEXPREC*() const mirtCAT/src/item_functions.cpp:195
  [UP] calling allocating function int Rcpp::as<int>(SEXPREC*) with argument allocated using Rcpp::SlotProxyPolicy<Rcpp::S4_Impl<Rcpp::PreserveStorage> >::const_SlotProxy::operator SEXPREC*() const mirtCAT/src/item_functions.cpp:196

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<14, Rcpp::PreserveStorage>::Vector(SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*) with argument allocated using SEXPREC* Rcpp::r_cast<14>(SEXPREC*) Rcpp/include/Rcpp/vector/Vector.h:74

Function Rcpp::Vector<19, Rcpp::PreserveStorage>::Vector(int const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<19, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:130

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _ZN4Rcpp6VectorILi16ENS_15PreserveStorageEEC2ImEET_PNS_6traits9enable_ifIXsr6traits13is_arithmeticIS4_EE5valueEvE4typeE
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<16, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:125
