Package coga version 1.1.0
Package built using 79387/R 4.1.0; x86_64-pc-linux-gnu; 2020-10-31 04:17:09 UTC; unix   
Checked with rchk version 1df3a0cc105e4278d3a4b8e1215f64bf6611d1e8 LLVM version 10.0.1
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::Vector<14, Rcpp::PreserveStorage>::Vector(SEXPREC*)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*) with argument allocated using SEXPREC* Rcpp::r_cast<14>(SEXPREC*) Rcpp/include/Rcpp/vector/Vector.h:74

Function Rcpp::Vector<14, Rcpp::PreserveStorage>::Vector(int const&)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:130

Function _ZN4Rcpp6VectorILi14ENS_15PreserveStorageEEC2IlEET_PNS_6traits9enable_ifIXsr6traits13is_arithmeticIS4_EE5valueEvE4typeE
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:125

Function _coga_GNB
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:352
  [PB] has negative depth coga/src/RcppExports.cpp:364
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:364
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:365

Function _coga_GNB_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_NB
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:388
  [PB] has negative depth coga/src/RcppExports.cpp:400
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:400
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:401

Function _coga_NB_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_dcoga
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:758
  [PB] has negative depth coga/src/RcppExports.cpp:770
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:770
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:771

Function _coga_dcoga2dim
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:608
  [PB] has negative depth coga/src/RcppExports.cpp:620
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:620
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:621

Function _coga_dcoga2dim_nv
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:570
  [PB] has negative depth coga/src/RcppExports.cpp:582
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:582
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:583

Function _coga_dcoga2dim_nv_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_dcoga2dim_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_dcoga_approx
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:460
  [PB] has negative depth coga/src/RcppExports.cpp:472
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:472
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:473

Function _coga_dcoga_approx_nv
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:424
  [PB] has negative depth coga/src/RcppExports.cpp:436
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:436
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:437

Function _coga_dcoga_approx_nv_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_dcoga_approx_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_dcoga_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_get_A
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:138
  [PB] has negative depth coga/src/RcppExports.cpp:150
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:150
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:151

Function _coga_get_A_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_get_b_GNB
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:208
  [PB] has negative depth coga/src/RcppExports.cpp:220
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:220
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:221

Function _coga_get_b_GNB_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_get_mu
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:32
  [PB] has negative depth coga/src/RcppExports.cpp:44
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:44
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:45

Function _coga_get_mu2
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:67
  [PB] has negative depth coga/src/RcppExports.cpp:79
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:79
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:80

Function _coga_get_mu2_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_get_mu3
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:102
  [PB] has negative depth coga/src/RcppExports.cpp:114
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:114
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:115

Function _coga_get_mu3_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_get_mu_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_get_p_GNB
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:172
  [PB] has negative depth coga/src/RcppExports.cpp:184
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:184
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:185

Function _coga_get_p_GNB_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_get_p_NB
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:279
  [PB] has negative depth coga/src/RcppExports.cpp:291
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:291
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:292

Function _coga_get_p_NB_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_get_r_GNB
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:244
  [PB] has negative depth coga/src/RcppExports.cpp:256
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:256
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:257

Function _coga_get_r_GNB_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_get_r_NB
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:314
  [PB] has negative depth coga/src/RcppExports.cpp:326
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:326
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:327

Function _coga_get_r_NB_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_pcoga
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:794
  [PB] has negative depth coga/src/RcppExports.cpp:806
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:806
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:807

Function _coga_pcoga2dim
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:684
  [PB] has negative depth coga/src/RcppExports.cpp:696
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:696
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:697

Function _coga_pcoga2dim_diff_shape
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:722
  [PB] has negative depth coga/src/RcppExports.cpp:734
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:734
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:735

Function _coga_pcoga2dim_diff_shape_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_pcoga2dim_nv
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:646
  [PB] has negative depth coga/src/RcppExports.cpp:658
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:658
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:659

Function _coga_pcoga2dim_nv_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_pcoga2dim_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %23 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_pcoga_approx
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:532
  [PB] has negative depth coga/src/RcppExports.cpp:544
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:544
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:545

Function _coga_pcoga_approx_nv
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:496
  [PB] has negative depth coga/src/RcppExports.cpp:508
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:508
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:509

Function _coga_pcoga_approx_nv_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_pcoga_approx_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_pcoga_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_salvo_integrand
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:831
  [PB] has negative depth coga/src/RcppExports.cpp:843
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:843
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:844

Function _coga_salvo_integrand_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %20 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _coga_salvo_multi_comp
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr coga/src/RcppExports.cpp:867
  [PB] has negative depth coga/src/RcppExports.cpp:879
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete coga/src/RcppExports.cpp:879
  [PB] has possible protection stack imbalance coga/src/RcppExports.cpp:880

Function _coga_salvo_multi_comp_try(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %17 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<10, Rcpp::PreserveStorage>::import_sugar_expression<true, Rcpp::sugar::Comparator_With_One_Value<14, Rcpp::sugar::greater<14>, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > >(Rcpp::VectorBase<10, true, Rcpp::sugar::Comparator_With_One_Value<14, Rcpp::sugar::greater<14>, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > > const&, Rcpp::traits::integral_constant<bool, false>)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<10, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:1070

Function void Rcpp::Vector<14, Rcpp::PreserveStorage>::import_sugar_expression<true, Rcpp::sugar::Divides_Primitive_Vector<14, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > >(Rcpp::VectorBase<14, true, Rcpp::sugar::Divides_Primitive_Vector<14, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > > const&, Rcpp::traits::integral_constant<bool, false>)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:1070

Function void Rcpp::Vector<14, Rcpp::PreserveStorage>::import_sugar_expression<true, Rcpp::sugar::Minus_Primitive_Vector<14, true, Rcpp::sugar::Divides_Primitive_Vector<14, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > > >(Rcpp::VectorBase<14, true, Rcpp::sugar::Minus_Primitive_Vector<14, true, Rcpp::sugar::Divides_Primitive_Vector<14, true, Rcpp::Vector<14, Rcpp::PreserveStorage> > > > const&, Rcpp::traits::integral_constant<bool, false>)
  [UP] calling allocating function Rcpp::PreserveStorage<Rcpp::Vector<14, Rcpp::PreserveStorage> >::set__(SEXPREC*)(?,V) with argument allocated using Rf_allocVector Rcpp/include/Rcpp/vector/Vector.h:1070
