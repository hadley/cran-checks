Package lme4 version 1.1-21
Package built using 77888/R 4.0.0; x86_64-pc-linux-gnu; 2020-03-03 01:44:34 UTC; unix   
Checked with rchk version 490627e4fb8e93244230dbbd61455730aa43c328
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::as_environment(SEXPREC*)
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rf_lang2(S:as.environment,?) Rcpp/include/Rcpp/Environment.h:36

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
  [UP] calling allocating function Rcpp::internal::Rcpp_eval_impl(SEXPREC*, SEXPREC*) with a fresh pointer (res <arg 1>) Rcpp/include/Rcpp/Environment.h:112

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::S4_Impl<Rcpp::PreserveStorage>::S4_Impl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] calling allocating function R_do_new_object with argument allocated using R_do_MAKE_CLASS Rcpp/include/Rcpp/S4.h:58

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function SEXPREC* lme4::Eigen_cholmod_wrap<double>(lme4::lme4CholmodDecomposition<Eigen::SparseMatrix<double, 0, int>, 1> const&)
  [UP] ignoring variable <unnamed var:   %12 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %15 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %22 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %25 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %31 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %34 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %37 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %40 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %43 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %46 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %49 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %52 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function glm::glmDist::aic(Eigen::Array<double, -1, 1, 0, -1, 1> const&, Eigen::Array<double, -1, 1, 0, -1, 1> const&, Eigen::Array<double, -1, 1, 0, -1, 1> const&, Eigen::Array<double, -1, 1, 0, -1, 1> const&, double) const
  [UP] calling allocating function Rf_asReal with argument allocated using Rf_eval lme4/src/glmFamily.cpp:469
  [UP] calling allocating function Rf_eval with argument allocated using Rf_lang6(?,?,?,?,?,V) lme4/src/glmFamily.cpp:469

Function glm::glmDist::devResid(Eigen::Array<double, -1, 1, 0, -1, 1> const&, Eigen::Array<double, -1, 1, 0, -1, 1> const&, Eigen::Array<double, -1, 1, 0, -1, 1> const&) const
  [UP] calling allocating function Rf_eval with argument allocated using Rf_lang4 lme4/src/glmFamily.cpp:458

Function glm::glmDist::variance(Eigen::Array<double, -1, 1, 0, -1, 1> const&) const
  [UP] calling allocating function Rf_eval with argument allocated using Rf_lang2 lme4/src/glmFamily.cpp:450

Function glm::glmLink::linkFun(Eigen::Array<double, -1, 1, 0, -1, 1> const&) const
  [UP] calling allocating function Rf_eval with argument allocated using Rf_lang2 lme4/src/glmFamily.cpp:429

Function glm::glmLink::linkInv(Eigen::Array<double, -1, 1, 0, -1, 1> const&) const
  [UP] calling allocating function Rf_eval with argument allocated using Rf_lang2 lme4/src/glmFamily.cpp:436

Function glm::glmLink::muEta(Eigen::Array<double, -1, 1, 0, -1, 1> const&) const
  [UP] calling allocating function Rf_eval with argument allocated using Rf_lang2 lme4/src/glmFamily.cpp:443

Function lmer_opt1
  [UP] ignoring variable <unnamed var:   %28 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %32 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
