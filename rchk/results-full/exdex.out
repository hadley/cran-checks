Package exdex version 1.0.1
Package built using 76922/R 3.7.0; x86_64-pc-linux-gnu; 2019-08-06 22:43:49 UTC; unix   
Checked with rchk version 6400f4a0aa14a4379fcc72d8dbf07a49b4725e07
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rf_lang2 Rcpp/include/Rcpp/r_cast.h:34

Function _exdex_arma_rowSums_minus_col
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr exdex/src/RcppExports.cpp:32
  [PB] has negative depth exdex/src/RcppExports.cpp:44
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete exdex/src/RcppExports.cpp:44
  [PB] has possible protection stack imbalance exdex/src/RcppExports.cpp:45

Function _exdex_arma_rowSums_minus_col_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _exdex_cpp_col_ms
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr exdex/src/RcppExports.cpp:101
  [PB] has negative depth exdex/src/RcppExports.cpp:113
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete exdex/src/RcppExports.cpp:113
  [PB] has possible protection stack imbalance exdex/src/RcppExports.cpp:114

Function _exdex_cpp_col_ms_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _exdex_cpp_log0const
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr exdex/src/RcppExports.cpp:67
  [PB] has negative depth exdex/src/RcppExports.cpp:79
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete exdex/src/RcppExports.cpp:79
  [PB] has possible protection stack imbalance exdex/src/RcppExports.cpp:80

Function _exdex_cpp_log0const_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _exdex_cpp_sigma2hat_dj
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr exdex/src/RcppExports.cpp:140
  [PB] has negative depth exdex/src/RcppExports.cpp:152
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete exdex/src/RcppExports.cpp:152
  [PB] has possible protection stack imbalance exdex/src/RcppExports.cpp:153

Function _exdex_cpp_sigma2hat_dj_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
