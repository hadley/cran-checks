Package vroom version 1.0.0
Package built using 76458/R 3.7.0; x86_64-pc-linux-gnu; 2019-05-06 13:10:42 UTC; unix   
Checked with rchk version 8de4e6e0566199e4662b2716e5acf000dd84f60b
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function R_ReadConnection(SEXPREC*, void*, unsigned long)
  [UP] ignoring variable con as it has address taken, results will be incomplete 

Function R_WriteConnection(SEXPREC*, void*, unsigned long)
  [UP] ignoring variable con as it has address taken, results will be incomplete 

Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::AttributeProxyPolicy<Rcpp::Vector<19, Rcpp::PreserveStorage> >::AttributeProxy::operator std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> ><std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >() const
  [UP] calling allocating function std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > Rcpp::as<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(SEXPREC*) with argument allocated using Rcpp::AttributeProxyPolicy<Rcpp::Vector<19, Rcpp::PreserveStorage> >::AttributeProxy::get() const Rcpp/include/Rcpp/api/meat/proxy.h:40

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::as_environment(SEXPREC*)
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rf_lang2(S:as.environment,?) Rcpp/include/Rcpp/Environment.h:36

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
  [UP] calling allocating function Rcpp::internal::Rcpp_eval_impl(SEXPREC*, SEXPREC*) with a fresh pointer (res <arg 1>) Rcpp/include/Rcpp/Environment.h:112

Function Rcpp::Environment_Impl<Rcpp::PreserveStorage>::namespace_env(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rf_lang2(S:getNamespace,?) Rcpp/include/Rcpp/Environment.h:377

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %9 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] calling allocating function Rcpp::Rcpp_fast_eval(SEXPREC*, SEXPREC*) with argument allocated using Rf_lang2 Rcpp/include/Rcpp/r_cast.h:34

Function SEXPREC* vroom_vec::Extract_subset<vroom_chr>(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] unprotected variable <unnamed var:   %65 = alloca %struct.SEXPREC*, align 8> while calling allocating function std::__1::shared_ptr<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::~shared_ptr() vroom/src/./vroom_vec.h:95

Function SEXPREC* vroom_vec::Extract_subset<vroom_dbl>(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] unprotected variable <unnamed var:   %65 = alloca %struct.SEXPREC*, align 8> while calling allocating function std::__1::shared_ptr<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::~shared_ptr() vroom/src/./vroom_vec.h:95

Function SEXPREC* vroom_vec::Extract_subset<vroom_int>(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] unprotected variable <unnamed var:   %65 = alloca %struct.SEXPREC*, align 8> while calling allocating function std::__1::shared_ptr<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::~shared_ptr() vroom/src/./vroom_vec.h:95

Function SEXPREC* vroom_vec::Extract_subset<vroom_num>(SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] unprotected variable <unnamed var:   %65 = alloca %struct.SEXPREC*, align 8> while calling allocating function std::__1::shared_ptr<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > >::~shared_ptr() vroom/src/./vroom_vec.h:95

Function _vroom_gen_character_
  [UP] ignoring variable <unnamed var:   %33 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _vroom_guess_type_
  [UP] ignoring variable <unnamed var:   %24 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _vroom_vroom_
  [UP] ignoring variable <unnamed var:   %72 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %73 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _vroom_vroom_format_
  [UP] ignoring variable <unnamed var:   %30 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _vroom_vroom_fwf_
  [UP] ignoring variable <unnamed var:   %66 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _vroom_vroom_str_
  [UP] ignoring variable <unnamed var:   %18 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _vroom_whitespace_columns_
  [UP] ignoring variable <unnamed var:   %27 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function con_description(SEXPREC*)
  [UP] ignoring variable con as it has address taken, results will be incomplete 

Function is_open(SEXPREC*)
  [UP] ignoring variable con as it has address taken, results will be incomplete 

Function read_fct_explicit(vroom_vec_info*, Rcpp::Vector<16, Rcpp::PreserveStorage>, bool)
  [UP] ignoring variable <unnamed var:   %108 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function resolve_collectors(Rcpp::RObject_Impl<Rcpp::PreserveStorage>, Rcpp::RObject_Impl<Rcpp::PreserveStorage>, Rcpp::RObject_Impl<Rcpp::PreserveStorage>, std::__1::shared_ptr<vroom::index_collection>, Rcpp::Vector<16, Rcpp::PreserveStorage>, std::__1::shared_ptr<LocaleInfo>, unsigned long, unsigned long)
  [UP] ignoring variable <unnamed var:   %111 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
  [UP] ignoring variable <unnamed var:   %117 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<16, Rcpp::PreserveStorage>::push_back<SEXPREC*>(SEXPREC* const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function vroom::delimited_index_connection::delimited_index_connection(SEXPREC*, char const*, char, bool, bool, bool, bool, unsigned long, unsigned long, char, unsigned long, bool)
  [UP] ignoring variable in as it has address taken, results will be incomplete 

Function vroom::fixed_width_index_connection::fixed_width_index_connection(SEXPREC*, std::__1::vector<int, std::__1::allocator<int> >, std::__1::vector<int, std::__1::allocator<int> >, bool, unsigned long, char, unsigned long, bool, unsigned long)
  [UP] ignoring variable in as it has address taken, results will be incomplete 

Function vroom_fct::Make(vroom_vec_info*, Rcpp::Vector<16, Rcpp::PreserveStorage>, bool)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
