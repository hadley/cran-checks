Package RClickhouse version 0.4.0
Package built using 77545/R 4.0.0; x86_64-pc-linux-gnu; 2019-12-09 22:22:06 UTC; unix   
Checked with rchk version 490627e4fb8e93244230dbbd61455730aa43c328
More information at https://github.com/kalibera/cran-checks/blob/master/rchk/PROTECT.md


Function Rcpp::Armor<SEXPREC*>::init(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:47

Function Rcpp::Armor<SEXPREC*>::~Armor()
  [PB] has negative depth Rcpp/include/Rcpp/protection/Armor.h:41
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete Rcpp/include/Rcpp/protection/Armor.h:41
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Armor.h:42

Function Rcpp::Rcpp_protect(SEXPREC*)
  [PB] has possible protection stack imbalance Rcpp/include/Rcpp/protection/Shield.h:25

Function Rcpp::Rcpp_unprotect(int)
  [PB] has an unsupported form of unprotect with a variable results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31
  [UP] unsupported form of unprotect, unprotecting all variables, results will be incomplete Rcpp/include/Rcpp/protection/Shield.h:31

Function Rcpp::internal::convert_using_rfunction(SEXPREC*, char const*)
  [UP] ignoring variable <unnamed var:   %10 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_clearResult
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:60
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:68
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:68
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:69

Function _RClickhouse_connect
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:245
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:253
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:253
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:254

Function _RClickhouse_connect_try(SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %26 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_disconnect
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:274
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:282
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:282
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:283

Function _RClickhouse_fetch
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:31
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:39
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:39
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:40

Function _RClickhouse_fetch_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_getRowCount
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:120
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:128
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:128
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:129

Function _RClickhouse_getRowCount_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_getRowsAffected
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:150
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:158
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:158
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:159

Function _RClickhouse_getRowsAffected_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_getStatement
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:180
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:188
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:188
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:189

Function _RClickhouse_getStatement_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_hasCompleted
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:90
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:98
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:98
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:99

Function _RClickhouse_hasCompleted_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_insert
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:336
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:344
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:344
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:345

Function _RClickhouse_resultTypes
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:210
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:218
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:218
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:219

Function _RClickhouse_resultTypes_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_select
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:305
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:313
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:313
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:314

Function _RClickhouse_select_try(SEXPREC*, SEXPREC*)
  [UP] ignoring variable <unnamed var:   %14 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function _RClickhouse_validPtr
  [UP] unprotected variable rcpp_result_gen while calling allocating function Rf_onintr RClickhouse/src/RcppExports.cpp:366
  [PB] has negative depth RClickhouse/src/RcppExports.cpp:374
  [UP] attempt to unprotect more items (1) than protected (0), results will be incomplete RClickhouse/src/RcppExports.cpp:374
  [PB] has possible protection stack imbalance RClickhouse/src/RcppExports.cpp:375

Function _RClickhouse_validPtr_try(SEXPREC*)
  [UP] ignoring variable <unnamed var:   %11 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<16, Rcpp::PreserveStorage>::push_back<Rcpp::String>(Rcpp::String const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<16, Rcpp::PreserveStorage>::push_back<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::Vector<13, Rcpp::PreserveStorage> >(Rcpp::Vector<13, Rcpp::PreserveStorage> const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::Vector<14, Rcpp::PreserveStorage> >(Rcpp::Vector<14, Rcpp::PreserveStorage> const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::Vector<16, Rcpp::PreserveStorage> >(Rcpp::Vector<16, Rcpp::PreserveStorage> const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::Vector<19, Rcpp::PreserveStorage> >(Rcpp::Vector<19, Rcpp::PreserveStorage> const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::newDateVector>(Rcpp::newDateVector const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 

Function void Rcpp::Vector<19, Rcpp::PreserveStorage>::push_back<Rcpp::newDatetimeVector>(Rcpp::newDatetimeVector const&)
  [UP] ignoring variable <unnamed var:   %5 = alloca %struct.SEXPREC*, align 8> as it has address taken, results will be incomplete 
